TranslationUnitDecl 0x28127d0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2812d08 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2812a20 '__int128'
|-TypedefDecl 0x2812d68 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2812a40 'unsigned __int128'
|-TypedefDecl 0x2812df8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2812dc0 'char *'
|   `-BuiltinType 0x2812860 'char'
|-TypedefDecl 0x2813118 <<invalid sloc>> <invalid sloc> implicit referenced __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x28130c0 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x2812ee0 'struct __va_list_tag'
|     `-CXXRecord 0x2812e48 '__va_list_tag'
|-LinkageSpecDecl 0x2813218 </usr/include/x86_64-linux-gnu/sys/cdefs.h:98:24, line:99:22> line:98:31 C
| |-TypedefDecl 0x2813278 </usr/lib/llvm-3.8/bin/../lib/clang/3.8.0/include/stddef.h:62:1, col:23> col:23 referenced size_t 'unsigned long'
| | `-BuiltinType 0x2812980 'unsigned long'
| |-TypedefDecl 0x28132d8 </usr/include/x86_64-linux-gnu/bits/types.h:30:1, col:23> col:23 referenced __u_char 'unsigned char'
| | `-BuiltinType 0x2812920 'unsigned char'
| |-TypedefDecl 0x2813338 <line:31:1, col:28> col:28 referenced __u_short 'unsigned short'
| | `-BuiltinType 0x2812940 'unsigned short'
| |-TypedefDecl 0x2813398 <line:32:1, col:22> col:22 referenced __u_int 'unsigned int'
| | `-BuiltinType 0x2812960 'unsigned int'
| |-TypedefDecl 0x28133f8 <line:33:1, col:27> col:27 referenced __u_long 'unsigned long'
| | `-BuiltinType 0x2812980 'unsigned long'
| |-TypedefDecl 0x2813458 <line:36:1, col:21> col:21 __int8_t 'signed char'
| | `-BuiltinType 0x2812880 'signed char'
| |-TypedefDecl 0x28812b0 <line:37:1, col:23> col:23 __uint8_t 'unsigned char'
| | `-BuiltinType 0x2812920 'unsigned char'
| |-TypedefDecl 0x2881310 <line:38:1, col:26> col:26 __int16_t 'short'
| | `-BuiltinType 0x28128a0 'short'
| |-TypedefDecl 0x2881370 <line:39:1, col:28> col:28 __uint16_t 'unsigned short'
| | `-BuiltinType 0x2812940 'unsigned short'
| |-TypedefDecl 0x28813d0 <line:40:1, col:20> col:20 __int32_t 'int'
| | `-BuiltinType 0x28128c0 'int'
| |-TypedefDecl 0x2881430 <line:41:1, col:22> col:22 __uint32_t 'unsigned int'
| | `-BuiltinType 0x2812960 'unsigned int'
| |-TypedefDecl 0x2881490 <line:43:1, col:25> col:25 __int64_t 'long'
| | `-BuiltinType 0x28128e0 'long'
| |-TypedefDecl 0x28814f0 <line:44:1, col:27> col:27 __uint64_t 'unsigned long'
| | `-BuiltinType 0x2812980 'unsigned long'
| |-TypedefDecl 0x2881550 <line:52:1, col:18> col:18 referenced __quad_t 'long'
| | `-BuiltinType 0x28128e0 'long'
| |-TypedefDecl 0x28815b0 <line:53:1, col:27> col:27 referenced __u_quad_t 'unsigned long'
| | `-BuiltinType 0x2812980 'unsigned long'
| |-TypedefDecl 0x2881610 <line:117:22, line:124:25> col:25 referenced __dev_t 'unsigned long'
| | `-BuiltinType 0x2812980 'unsigned long'
| |-TypedefDecl 0x2881670 <line:117:22, line:125:25> col:25 referenced __uid_t 'unsigned int'
| | `-BuiltinType 0x2812960 'unsigned int'
| |-TypedefDecl 0x28816d0 <line:117:22, line:126:25> col:25 referenced __gid_t 'unsigned int'
| | `-BuiltinType 0x2812960 'unsigned int'
| |-TypedefDecl 0x2881730 <line:117:22, line:127:25> col:25 referenced __ino_t 'unsigned long'
| | `-BuiltinType 0x2812980 'unsigned long'
| |-TypedefDecl 0x2881790 <line:117:22, line:128:27> col:27 referenced __ino64_t 'unsigned long'
| | `-BuiltinType 0x2812980 'unsigned long'
| |-TypedefDecl 0x28817f0 <line:117:22, line:129:26> col:26 referenced __mode_t 'unsigned int'
| | `-BuiltinType 0x2812960 'unsigned int'
| |-TypedefDecl 0x2881850 <line:117:22, line:130:27> col:27 referenced __nlink_t 'unsigned long'
| | `-BuiltinType 0x2812980 'unsigned long'
| |-TypedefDecl 0x28818b0 <line:117:22, line:131:25> col:25 referenced __off_t 'long'
| | `-BuiltinType 0x28128e0 'long'
| |-TypedefDecl 0x2881910 <line:117:22, line:132:27> col:27 referenced __off64_t 'long'
| | `-BuiltinType 0x28128e0 'long'
| |-TypedefDecl 0x2881970 <line:117:22, line:133:25> col:25 referenced __pid_t 'int'
| | `-BuiltinType 0x28128c0 'int'
| |-CXXRecordDecl 0x28819c0 </usr/include/x86_64-linux-gnu/bits/typesizes.h:72:24, col:47> col:24 struct definition
| | `-FieldDecl 0x2881b48 <col:33, col:44> col:37 __val 'int [2]'
| |-TypedefDecl 0x2881be0 </usr/include/x86_64-linux-gnu/bits/types.h:117:22, line:134:26> col:26 referenced __fsid_t 'struct __fsid_t':'__fsid_t'
| | `-ElaboratedType 0x2881b90 'struct __fsid_t' sugar
| |   `-RecordType 0x2881a50 '__fsid_t'
| |     `-CXXRecord 0x28819c0 ''
| |-TypedefDecl 0x2881c58 <line:117:22, line:135:27> col:27 referenced __clock_t 'long'
| | `-BuiltinType 0x28128e0 'long'
| |-TypedefDecl 0x2881cb8 <line:117:22, line:136:26> col:26 __rlim_t 'unsigned long'
| | `-BuiltinType 0x2812980 'unsigned long'
| |-TypedefDecl 0x2881d18 <line:117:22, line:137:28> col:28 __rlim64_t 'unsigned long'
| | `-BuiltinType 0x2812980 'unsigned long'
| |-TypedefDecl 0x2881d78 <line:117:22, line:138:24> col:24 referenced __id_t 'unsigned int'
| | `-BuiltinType 0x2812960 'unsigned int'
| |-TypedefDecl 0x2881dd8 <line:117:22, line:139:26> col:26 referenced __time_t 'long'
| | `-BuiltinType 0x28128e0 'long'
| |-TypedefDecl 0x2881e38 <line:117:22, line:140:30> col:30 referenced __useconds_t 'unsigned int'
| | `-BuiltinType 0x2812960 'unsigned int'
| |-TypedefDecl 0x2881e98 <line:117:22, line:141:31> col:31 referenced __suseconds_t 'long'
| | `-BuiltinType 0x28128e0 'long'
| |-TypedefDecl 0x2881ef8 <line:117:22, line:143:27> col:27 referenced __daddr_t 'int'
| | `-BuiltinType 0x28128c0 'int'
| |-TypedefDecl 0x2881f58 <line:117:22, line:144:25> col:25 referenced __key_t 'int'
| | `-BuiltinType 0x28128c0 'int'
| |-TypedefDecl 0x2881fb8 <line:117:22, line:147:29> col:29 referenced __clockid_t 'int'
| | `-BuiltinType 0x28128c0 'int'
| |-TypedefDecl 0x2882018 <line:117:22, line:150:27> col:27 referenced __timer_t 'void *'
| | `-PointerType 0x2812c90 'void *'
| |   `-BuiltinType 0x2812820 'void'
| |-TypedefDecl 0x2882078 <line:117:22, line:153:29> col:29 referenced __blksize_t 'long'
| | `-BuiltinType 0x28128e0 'long'
| |-TypedefDecl 0x28820d8 <line:117:22, line:158:28> col:28 referenced __blkcnt_t 'long'
| | `-BuiltinType 0x28128e0 'long'
| |-TypedefDecl 0x2882138 <line:117:22, line:159:30> col:30 referenced __blkcnt64_t 'long'
| | `-BuiltinType 0x28128e0 'long'
| |-TypedefDecl 0x2882198 <line:117:22, line:162:30> col:30 referenced __fsblkcnt_t 'unsigned long'
| | `-BuiltinType 0x2812980 'unsigned long'
| |-TypedefDecl 0x28821f8 <line:117:22, line:163:32> col:32 referenced __fsblkcnt64_t 'unsigned long'
| | `-BuiltinType 0x2812980 'unsigned long'
| |-TypedefDecl 0x2882258 <line:117:22, line:166:30> col:30 referenced __fsfilcnt_t 'unsigned long'
| | `-BuiltinType 0x2812980 'unsigned long'
| |-TypedefDecl 0x2877a80 <line:117:22, line:167:32> col:32 referenced __fsfilcnt64_t 'unsigned long'
| | `-BuiltinType 0x2812980 'unsigned long'
| |-TypedefDecl 0x2877ae0 <line:117:22, line:170:28> col:28 __fsword_t 'long'
| | `-BuiltinType 0x28128e0 'long'
| |-TypedefDecl 0x2877b40 <line:117:22, line:172:27> col:27 referenced __ssize_t 'long'
| | `-BuiltinType 0x28128e0 'long'
| |-TypedefDecl 0x2877ba0 <line:117:22, line:175:33> col:33 referenced __syscall_slong_t 'long'
| | `-BuiltinType 0x28128e0 'long'
| |-TypedefDecl 0x2877c00 <line:117:22, line:177:33> col:33 __syscall_ulong_t 'unsigned long'
| | `-BuiltinType 0x2812980 'unsigned long'
| |-TypedefDecl 0x2877c80 <line:181:1, col:19> col:19 referenced __loff_t '__off64_t':'long'
| | `-TypedefType 0x2877c50 '__off64_t' sugar
| |   |-Typedef 0x2881910 '__off64_t'
| |   `-BuiltinType 0x28128e0 'long'
| |-TypedefDecl 0x2877d58 <line:182:1, col:19> col:19 __qaddr_t '__quad_t *'
| | `-PointerType 0x2877d20 '__quad_t *'
| |   `-TypedefType 0x2877cd0 '__quad_t' sugar
| |     |-Typedef 0x2881550 '__quad_t'
| |     `-BuiltinType 0x28128e0 'long'
| |-TypedefDecl 0x2877db8 <line:183:1, col:15> col:15 referenced __caddr_t 'char *'
| | `-PointerType 0x2812dc0 'char *'
| |   `-BuiltinType 0x2812860 'char'
| |-TypedefDecl 0x2877e18 <line:117:22, line:186:25> col:25 __intptr_t 'long'
| | `-BuiltinType 0x28128e0 'long'
| |-TypedefDecl 0x2877e78 <line:117:22, line:189:23> col:23 __socklen_t 'unsigned int'
| | `-BuiltinType 0x2812960 'unsigned int'
| |-CXXRecordDecl 0x2877ec8 </usr/include/stdio.h:44:1, col:8> col:8 struct _IO_FILE
| |-TypedefDecl 0x2877fd0 <line:48:1, col:25> col:25 referenced FILE 'struct _IO_FILE':'struct _IO_FILE'
| | `-ElaboratedType 0x2877f80 'struct _IO_FILE' sugar
| |   `-RecordType 0x2877f60 'struct _IO_FILE'
| |     `-CXXRecord 0x2890ce0 '_IO_FILE'
| |-TypedefDecl 0x2878040 <line:64:1, col:25> col:25 __FILE 'struct _IO_FILE':'struct _IO_FILE'
| | `-ElaboratedType 0x2877f80 'struct _IO_FILE' sugar
| |   `-RecordType 0x2877f60 'struct _IO_FILE'
| |     `-CXXRecord 0x2890ce0 '_IO_FILE'
| |-CXXRecordDecl 0x2878090 </usr/include/wchar.h:82:9, line:94:1> line:82:9 struct definition
| | |-FieldDecl 0x28781b0 <line:84:3, col:7> col:7 __count 'int'
| | |-CXXRecordDecl 0x28781f8 <line:85:3, line:93:3> line:85:3 union definition
| | | |-FieldDecl 0x2878320 <<built-in>:88:23, /usr/include/wchar.h:88:19> col:19 __wch 'unsigned int'
| | | `-FieldDecl 0x28783e8 <line:92:5, col:18> col:10 __wchb 'char [4]'
| | `-FieldDecl 0x2878480 <line:85:3, line:93:5> col:5 __value 'union (anonymous union at /usr/include/wchar.h:85:3)':'union __mbstate_t::(anonymous at /usr/include/wchar.h:85:3)'
| |-TypedefDecl 0x2878530 <line:82:1, line:94:3> col:3 referenced __mbstate_t 'struct __mbstate_t':'__mbstate_t'
| | `-ElaboratedType 0x28784e0 'struct __mbstate_t' sugar
| |   `-RecordType 0x2878120 '__mbstate_t'
| |     `-CXXRecord 0x2878090 ''
| |-CXXRecordDecl 0x2878598 </usr/include/_G_config.h:21:9, line:25:1> line:21:9 struct definition
| | |-FieldDecl 0x28786e0 <line:23:3, col:11> col:11 __pos '__off_t':'long'
| | `-FieldDecl 0x2878760 <line:24:3, col:15> col:15 __state '__mbstate_t':'__mbstate_t'
| |-TypedefDecl 0x2878800 <line:21:1, line:25:3> col:3 referenced _G_fpos_t 'struct _G_fpos_t':'_G_fpos_t'
| | `-ElaboratedType 0x28787b0 'struct _G_fpos_t' sugar
| |   `-RecordType 0x2878630 '_G_fpos_t'
| |     `-CXXRecord 0x2878598 ''
| |-CXXRecordDecl 0x2878868 <line:26:9, line:30:1> line:26:9 struct definition
| | |-FieldDecl 0x2878990 <line:28:3, col:13> col:13 __pos '__off64_t':'long'
| | `-FieldDecl 0x28789e8 <line:29:3, col:15> col:15 __state '__mbstate_t':'__mbstate_t'
| |-TypedefDecl 0x2890440 <line:26:1, line:30:3> col:3 referenced _G_fpos64_t 'struct _G_fpos64_t':'_G_fpos64_t'
| | `-ElaboratedType 0x2878a30 'struct _G_fpos64_t' sugar
| |   `-RecordType 0x2878900 '_G_fpos64_t'
| |     `-CXXRecord 0x2878868 ''
| |-TypedefDecl 0x28904e0 </usr/lib/llvm-3.8/bin/../lib/clang/3.8.0/include/stdarg.h:30:1, col:27> col:27 va_list '__builtin_va_list':'struct __va_list_tag [1]'
| | `-TypedefType 0x28904b0 '__builtin_va_list' sugar
| |   |-Typedef 0x2813118 '__builtin_va_list'
| |   `-ConstantArrayType 0x28130c0 'struct __va_list_tag [1]' 1 
| |     `-RecordType 0x2812ee0 'struct __va_list_tag'
| |       `-CXXRecord 0x2812e48 '__va_list_tag'
| |-TypedefDecl 0x2890540 <line:50:1, col:27> col:27 referenced __gnuc_va_list '__builtin_va_list':'struct __va_list_tag [1]'
| | `-TypedefType 0x28904b0 '__builtin_va_list' sugar
| |   |-Typedef 0x2813118 '__builtin_va_list'
| |   `-ConstantArrayType 0x28130c0 'struct __va_list_tag [1]' 1 
| |     `-RecordType 0x2812ee0 'struct __va_list_tag'
| |       `-CXXRecord 0x2812e48 '__va_list_tag'
| |-CXXRecordDecl 0x2890590 </usr/include/libio.h:144:1, col:8> col:8 struct _IO_jump_t
| |-CXXRecordDecl 0x2890640 prev 0x2877ec8 <col:21, col:28> col:28 struct _IO_FILE
| |-TypedefDecl 0x28906e0 <line:150:1, col:14> col:14 referenced _IO_lock_t 'void'
| | `-BuiltinType 0x2812820 'void'
| |-CXXRecordDecl 0x2890730 <line:156:1, line:173:1> line:156:8 struct _IO_marker definition
| | |-CXXRecordDecl 0x2890840 <col:1, col:8> col:8 implicit struct _IO_marker
| | |-FieldDecl 0x2890980 <line:157:3, col:22> col:22 _next 'struct _IO_marker *'
| | |-FieldDecl 0x2890a50 <line:158:3, col:20> col:20 _sbuf 'struct _IO_FILE *'
| | `-FieldDecl 0x2890aa8 <line:162:3, col:7> col:7 _pos 'int'
| |-EnumDecl 0x2890af0 <line:176:1, line:182:1> line:176:6 __codecvt_result
| | |-EnumConstantDecl 0x2890ba0 <line:178:3> col:3 __codecvt_ok 'enum __codecvt_result'
| | |-EnumConstantDecl 0x2890bf0 <line:179:3> col:3 __codecvt_partial 'enum __codecvt_result'
| | |-EnumConstantDecl 0x2890c40 <line:180:3> col:3 __codecvt_error 'enum __codecvt_result'
| | `-EnumConstantDecl 0x2890c90 <line:181:3> col:3 __codecvt_noconv 'enum __codecvt_result'
| |-CXXRecordDecl 0x2890ce0 prev 0x2890640 <line:241:1, line:307:1> line:241:8 referenced struct _IO_FILE definition
| | |-CXXRecordDecl 0x2890dd0 <col:1, col:8> col:8 implicit struct _IO_FILE
| | |-FieldDecl 0x2890e70 <line:242:3, col:7> col:7 _flags 'int'
| | |-FieldDecl 0x2890ec8 <line:247:3, col:9> col:9 _IO_read_ptr 'char *'
| | |-FieldDecl 0x2890f20 <line:248:3, col:9> col:9 _IO_read_end 'char *'
| | |-FieldDecl 0x2890f78 <line:249:3, col:9> col:9 _IO_read_base 'char *'
| | |-FieldDecl 0x2890fd0 <line:250:3, col:9> col:9 _IO_write_base 'char *'
| | |-FieldDecl 0x2891028 <line:251:3, col:9> col:9 _IO_write_ptr 'char *'
| | |-FieldDecl 0x2891080 <line:252:3, col:9> col:9 _IO_write_end 'char *'
| | |-FieldDecl 0x28910d8 <line:253:3, col:9> col:9 _IO_buf_base 'char *'
| | |-FieldDecl 0x2891130 <line:254:3, col:9> col:9 _IO_buf_end 'char *'
| | |-FieldDecl 0x2891188 <line:256:3, col:9> col:9 _IO_save_base 'char *'
| | |-FieldDecl 0x28911e0 <line:257:3, col:9> col:9 _IO_backup_base 'char *'
| | |-FieldDecl 0x2891238 <line:258:3, col:9> col:9 _IO_save_end 'char *'
| | |-FieldDecl 0x28912a8 <line:260:3, col:22> col:22 _markers 'struct _IO_marker *'
| | |-FieldDecl 0x2891318 <line:262:3, col:20> col:20 _chain 'struct _IO_FILE *'
| | |-FieldDecl 0x2891370 <line:264:3, col:7> col:7 _fileno 'int'
| | |-FieldDecl 0x28913c8 <line:268:3, col:7> col:7 _flags2 'int'
| | |-FieldDecl 0x289e970 <line:37:19, line:270:13> col:13 _old_offset '__off_t':'long'
| | |-FieldDecl 0x289e9c8 <line:274:3, col:18> col:18 _cur_column 'unsigned short'
| | |-FieldDecl 0x289ea20 <line:275:3, col:15> col:15 _vtable_offset 'signed char'
| | |-FieldDecl 0x289eae8 <line:276:3, col:19> col:8 _shortbuf 'char [1]'
| | |-FieldDecl 0x289eb88 <line:280:3, col:15> col:15 _lock '_IO_lock_t *'
| | |-FieldDecl 0x289ebe0 <line:38:21, line:289:15> col:15 _offset '__off64_t':'long'
| | |-FieldDecl 0x289ec38 <line:297:3, col:9> col:9 __pad1 'void *'
| | |-FieldDecl 0x289ec90 <line:298:3, col:9> col:9 __pad2 'void *'
| | |-FieldDecl 0x289ece8 <line:299:3, col:9> col:9 __pad3 'void *'
| | |-FieldDecl 0x289ed40 <line:300:3, col:9> col:9 __pad4 'void *'
| | |-FieldDecl 0x289edc0 <line:302:3, col:10> col:10 __pad5 'size_t':'unsigned long'
| | |-FieldDecl 0x289ee18 <line:303:3, col:7> col:7 _mode 'int'
| | `-FieldDecl 0x289f058 <line:305:3, col:74> col:8 _unused2 'char [20]'
| |-CXXRecordDecl 0x289f0a0 <line:313:1, col:8> col:8 struct _IO_FILE_plus
| |-VarDecl 0x289f1a0 <line:315:1, col:29> col:29 _IO_2_1_stdin_ 'struct _IO_FILE_plus':'struct _IO_FILE_plus' extern
| |-VarDecl 0x289f260 <line:316:1, col:29> col:29 _IO_2_1_stdout_ 'struct _IO_FILE_plus':'struct _IO_FILE_plus' extern
| |-VarDecl 0x289f2e0 <line:317:1, col:29> col:29 _IO_2_1_stderr_ 'struct _IO_FILE_plus':'struct _IO_FILE_plus' extern
| |-TypedefDecl 0x289f580 <line:333:1, col:77> col:19 referenced __io_read_fn '__ssize_t (void *, char *, size_t)'
| | `-FunctionProtoType 0x289f500 '__ssize_t (void *, char *, size_t)' cdecl
| |   |-TypedefType 0x289f340 '__ssize_t' sugar
| |   | |-Typedef 0x2877b40 '__ssize_t'
| |   | `-BuiltinType 0x28128e0 'long'
| |   |-PointerType 0x2812c90 'void *'
| |   | `-BuiltinType 0x2812820 'void'
| |   |-PointerType 0x2812dc0 'char *'
| |   | `-BuiltinType 0x2812860 'char'
| |   `-TypedefType 0x289ed90 'size_t' sugar
| |     |-Typedef 0x2813278 'size_t'
| |     `-BuiltinType 0x2812980 'unsigned long'
| |-TypedefDecl 0x289f820 <line:341:1, line:342:16> line:341:19 referenced __io_write_fn '__ssize_t (void *, const char *, size_t)'
| | `-FunctionProtoType 0x289f7a0 '__ssize_t (void *, const char *, size_t)' cdecl
| |   |-TypedefType 0x289f340 '__ssize_t' sugar
| |   | |-Typedef 0x2877b40 '__ssize_t'
| |   | `-BuiltinType 0x28128e0 'long'
| |   |-PointerType 0x2812c90 'void *'
| |   | `-BuiltinType 0x2812820 'void'
| |   |-PointerType 0x289f640 'const char *'
| |   | `-QualType 0x2812861 'const char' const
| |   |   `-BuiltinType 0x2812860 'char'
| |   `-TypedefType 0x289ed90 'size_t' sugar
| |     |-Typedef 0x2813278 'size_t'
| |     `-BuiltinType 0x2812980 'unsigned long'
| |-TypedefDecl 0x28a0f40 <line:350:1, col:70> col:13 referenced __io_seek_fn 'int (void *, __off64_t *, int)'
| | `-FunctionProtoType 0x28a0ec0 'int (void *, __off64_t *, int)' cdecl
| |   |-BuiltinType 0x28128c0 'int'
| |   |-PointerType 0x2812c90 'void *'
| |   | `-BuiltinType 0x2812820 'void'
| |   |-PointerType 0x289f8e0 '__off64_t *'
| |   | `-TypedefType 0x2877c50 '__off64_t' sugar
| |   |   |-Typedef 0x2881910 '__off64_t'
| |   |   `-BuiltinType 0x28128e0 'long'
| |   `-BuiltinType 0x28128c0 'int'
| |-TypedefDecl 0x28a1060 <line:353:1, col:42> col:13 referenced __io_close_fn 'int (void *)'
| | `-FunctionProtoType 0x28a1000 'int (void *)' cdecl
| |   |-BuiltinType 0x28128c0 'int'
| |   `-PointerType 0x2812c90 'void *'
| |     `-BuiltinType 0x2812820 'void'
| |-TypedefDecl 0x28a10e0 <line:358:1, col:22> col:22 cookie_read_function_t '__io_read_fn':'__ssize_t (void *, char *, size_t)'
| | `-TypedefType 0x28a10b0 '__io_read_fn' sugar
| |   |-Typedef 0x289f580 '__io_read_fn'
| |   `-FunctionProtoType 0x289f500 '__ssize_t (void *, char *, size_t)' cdecl
| |     |-TypedefType 0x289f340 '__ssize_t' sugar
| |     | |-Typedef 0x2877b40 '__ssize_t'
| |     | `-BuiltinType 0x28128e0 'long'
| |     |-PointerType 0x2812c90 'void *'
| |     | `-BuiltinType 0x2812820 'void'
| |     |-PointerType 0x2812dc0 'char *'
| |     | `-BuiltinType 0x2812860 'char'
| |     `-TypedefType 0x289ed90 'size_t' sugar
| |       |-Typedef 0x2813278 'size_t'
| |       `-BuiltinType 0x2812980 'unsigned long'
| |-TypedefDecl 0x28a1160 <line:359:1, col:23> col:23 cookie_write_function_t '__io_write_fn':'__ssize_t (void *, const char *, size_t)'
| | `-TypedefType 0x28a1130 '__io_write_fn' sugar
| |   |-Typedef 0x289f820 '__io_write_fn'
| |   `-FunctionProtoType 0x289f7a0 '__ssize_t (void *, const char *, size_t)' cdecl
| |     |-TypedefType 0x289f340 '__ssize_t' sugar
| |     | |-Typedef 0x2877b40 '__ssize_t'
| |     | `-BuiltinType 0x28128e0 'long'
| |     |-PointerType 0x2812c90 'void *'
| |     | `-BuiltinType 0x2812820 'void'
| |     |-PointerType 0x289f640 'const char *'
| |     | `-QualType 0x2812861 'const char' const
| |     |   `-BuiltinType 0x2812860 'char'
| |     `-TypedefType 0x289ed90 'size_t' sugar
| |       |-Typedef 0x2813278 'size_t'
| |       `-BuiltinType 0x2812980 'unsigned long'
| |-TypedefDecl 0x28a11e0 <line:360:1, col:22> col:22 cookie_seek_function_t '__io_seek_fn':'int (void *, __off64_t *, int)'
| | `-TypedefType 0x28a11b0 '__io_seek_fn' sugar
| |   |-Typedef 0x28a0f40 '__io_seek_fn'
| |   `-FunctionProtoType 0x28a0ec0 'int (void *, __off64_t *, int)' cdecl
| |     |-BuiltinType 0x28128c0 'int'
| |     |-PointerType 0x2812c90 'void *'
| |     | `-BuiltinType 0x2812820 'void'
| |     |-PointerType 0x289f8e0 '__off64_t *'
| |     | `-TypedefType 0x2877c50 '__off64_t' sugar
| |     |   |-Typedef 0x2881910 '__off64_t'
| |     |   `-BuiltinType 0x28128e0 'long'
| |     `-BuiltinType 0x28128c0 'int'
| |-TypedefDecl 0x28a1260 <line:361:1, col:23> col:23 cookie_close_function_t '__io_close_fn':'int (void *)'
| | `-TypedefType 0x28a1230 '__io_close_fn' sugar
| |   |-Typedef 0x28a1060 '__io_close_fn'
| |   `-FunctionProtoType 0x28a1000 'int (void *)' cdecl
| |     |-BuiltinType 0x28128c0 'int'
| |     `-PointerType 0x2812c90 'void *'
| |       `-BuiltinType 0x2812820 'void'
| |-CXXRecordDecl 0x28a12b0 <line:364:9, line:370:1> line:364:9 struct definition
| | |-FieldDecl 0x28a1428 <line:366:3, col:17> col:17 read '__io_read_fn *'
| | |-FieldDecl 0x28a14d8 <line:367:3, col:18> col:18 write '__io_write_fn *'
| | |-FieldDecl 0x28a1588 <line:368:3, col:17> col:17 seek '__io_seek_fn *'
| | `-FieldDecl 0x28a1638 <line:369:3, col:18> col:18 close '__io_close_fn *'
| |-TypedefDecl 0x28a16d0 <line:364:1, line:370:3> col:3 referenced _IO_cookie_io_functions_t 'struct _IO_cookie_io_functions_t':'_IO_cookie_io_functions_t'
| | `-ElaboratedType 0x28a1680 'struct _IO_cookie_io_functions_t' sugar
| |   `-RecordType 0x28a1340 '_IO_cookie_io_functions_t'
| |     `-CXXRecord 0x28a12b0 ''
| |-TypedefDecl 0x28a1770 <line:371:1, col:35> col:35 cookie_io_functions_t '_IO_cookie_io_functions_t':'_IO_cookie_io_functions_t'
| | `-TypedefType 0x28a1740 '_IO_cookie_io_functions_t' sugar
| |   |-Typedef 0x28a16d0 '_IO_cookie_io_functions_t'
| |   `-ElaboratedType 0x28a1680 'struct _IO_cookie_io_functions_t' sugar
| |     `-RecordType 0x28a1340 '_IO_cookie_io_functions_t'
| |       `-CXXRecord 0x28a12b0 ''
| |-CXXRecordDecl 0x28a17c0 <line:373:1, col:8> col:8 struct _IO_cookie_file
| |-FunctionDecl 0x28a1bb0 <line:376:1, line:377:56> line:376:13 _IO_cookie_init 'void (struct _IO_cookie_file *, int, void *, _IO_cookie_io_functions_t)' extern
| | |-ParmVarDecl 0x28a1920 <col:30, col:54> col:54 __cfile 'struct _IO_cookie_file *'
| | |-ParmVarDecl 0x28a1990 <col:63, col:67> col:67 __read_write 'int'
| | |-ParmVarDecl 0x28a1a00 <line:377:9, col:15> col:15 __cookie 'void *'
| | `-ParmVarDecl 0x28a1a70 <col:25, col:51> col:51 __fns '_IO_cookie_io_functions_t':'_IO_cookie_io_functions_t'
| |-LinkageSpecDecl 0x28a1ca8 <line:382:1, line:521:1> line:382:8 C
| | |-FunctionDecl 0x28a2220 <line:385:1, col:35> col:12 __underflow 'int (struct _IO_FILE *)' extern
| | | `-ParmVarDecl 0x28a1d08 <col:25, col:34> col:35 'struct _IO_FILE *'
| | |-FunctionDecl 0x28a2368 <line:386:1, col:31> col:12 __uflow 'int (struct _IO_FILE *)' extern
| | | `-ParmVarDecl 0x28a22e0 <col:21, col:30> col:31 'struct _IO_FILE *'
| | |-FunctionDecl 0x28a2570 <line:387:1, col:39> col:12 __overflow 'int (struct _IO_FILE *, int)' extern
| | | |-ParmVarDecl 0x28a2428 <col:24, col:33> col:34 'struct _IO_FILE *'
| | | `-ParmVarDecl 0x28a2498 <col:36> col:39 'int'
| | |-FunctionDecl 0x28a26c0 <line:429:1, col:36> col:12 _IO_getc 'int (struct _IO_FILE *)' extern
| | | `-ParmVarDecl 0x28a2638 <col:22, col:32> col:32 __fp 'struct _IO_FILE *'
| | |-FunctionDecl 0x28a28c0 <line:430:1, col:45> col:12 _IO_putc 'int (int, struct _IO_FILE *)' extern
| | | |-ParmVarDecl 0x28a2780 <col:22, col:26> col:26 __c 'int'
| | | `-ParmVarDecl 0x28a27f0 <col:31, col:41> col:41 __fp 'struct _IO_FILE *'
| | |-FunctionDecl 0x28a2a50 <line:431:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/libio.h:431:12 _IO_feof 'int (struct _IO_FILE *) throw()' extern
| | | `-ParmVarDecl 0x28a2988 <col:22, col:32> col:32 __fp 'struct _IO_FILE *'
| | |-FunctionDecl 0x28a2b98 <line:432:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/libio.h:432:12 _IO_ferror 'int (struct _IO_FILE *) throw()' extern
| | | `-ParmVarDecl 0x28a2b10 <col:24, col:34> col:34 __fp 'struct _IO_FILE *'
| | |-FunctionDecl 0x28a2ce0 <line:434:1, col:44> col:12 _IO_peekc_locked 'int (struct _IO_FILE *)' extern
| | | `-ParmVarDecl 0x28a2c58 <col:30, col:40> col:40 __fp 'struct _IO_FILE *'
| | |-FunctionDecl 0x28a2ea0 <line:440:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/libio.h:440:13 _IO_flockfile 'void (struct _IO_FILE *) throw()' extern
| | | `-ParmVarDecl 0x28a2da0 <col:28, col:37> col:38 'struct _IO_FILE *'
| | |-FunctionDecl 0x28a2fe8 <line:441:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/libio.h:441:13 _IO_funlockfile 'void (struct _IO_FILE *) throw()' extern
| | | `-ParmVarDecl 0x28a2f60 <col:30, col:39> col:40 'struct _IO_FILE *'
| | |-FunctionDecl 0x28a7950 <line:442:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/libio.h:442:12 _IO_ftrylockfile 'int (struct _IO_FILE *) throw()' extern
| | | `-ParmVarDecl 0x28a30a8 <col:30, col:39> col:40 'struct _IO_FILE *'
| | |-FunctionDecl 0x28a7d50 <line:459:1, line:460:32> line:459:12 _IO_vfscanf 'int (struct _IO_FILE *__restrict, const char *__restrict, struct __va_list_tag *, int *__restrict)' extern
| | | |-ParmVarDecl 0x28a7a10 <col:25, col:34> col:46 'struct _IO_FILE *__restrict'
| | | |-ParmVarDecl 0x28a7a80 <col:48, col:59> col:71 'const char *__restrict'
| | | |-ParmVarDecl 0x28a7b70 <line:52:22> line:460:15 'struct __va_list_tag *':'struct __va_list_tag *'
| | | `-ParmVarDecl 0x28a7c10 <col:17, col:21> col:32 'int *__restrict'
| | |-FunctionDecl 0x28a8040 <line:461:1, line:462:16> line:461:12 _IO_vfprintf 'int (struct _IO_FILE *__restrict, const char *__restrict, struct __va_list_tag *)' extern
| | | |-ParmVarDecl 0x28a7e28 <col:26, col:35> col:46 'struct _IO_FILE *__restrict'
| | | |-ParmVarDecl 0x28a7e98 <col:48, col:59> col:70 'const char *__restrict'
| | | `-ParmVarDecl 0x28a7f08 <line:52:22> line:462:16 'struct __va_list_tag *':'struct __va_list_tag *'
| | |-FunctionDecl 0x28a8320 <line:463:1, col:58> col:20 _IO_padn '__ssize_t (struct _IO_FILE *, int, __ssize_t)' extern
| | | |-ParmVarDecl 0x28a8110 <col:30, col:39> col:40 'struct _IO_FILE *'
| | | |-ParmVarDecl 0x28a8180 <col:42> col:45 'int'
| | | `-ParmVarDecl 0x28a81f0 <line:36:21> line:463:58 '__ssize_t':'long'
| | |-FunctionDecl 0x28a8600 <line:464:1, col:60> col:19 _IO_sgetn 'size_t (struct _IO_FILE *, void *, size_t)' extern
| | | |-ParmVarDecl 0x28a83f0 <col:30, col:39> col:40 'struct _IO_FILE *'
| | | |-ParmVarDecl 0x28a8460 <col:42, col:47> col:48 'void *'
| | | `-ParmVarDecl 0x28a84d0 <line:35:20> line:464:60 'size_t':'unsigned long'
| | |-FunctionDecl 0x28a91a0 <line:466:1, col:66> col:20 _IO_seekoff '__off64_t (struct _IO_FILE *, __off64_t, int, int)' extern
| | | |-ParmVarDecl 0x28a86d0 <col:33, col:42> col:43 'struct _IO_FILE *'
| | | |-ParmVarDecl 0x28a8740 <line:38:21> line:466:56 '__off64_t':'long'
| | | |-ParmVarDecl 0x28a87b0 <col:58> col:61 'int'
| | | `-ParmVarDecl 0x28a8820 <col:63> col:66 'int'
| | |-FunctionDecl 0x28a9490 <line:467:1, col:61> col:20 _IO_seekpos '__off64_t (struct _IO_FILE *, __off64_t, int)' extern
| | | |-ParmVarDecl 0x28a9278 <col:33, col:42> col:43 'struct _IO_FILE *'
| | | |-ParmVarDecl 0x28a92e8 <line:38:21> line:467:56 '__off64_t':'long'
| | | `-ParmVarDecl 0x28a9358 <col:58> col:61 'int'
| | `-FunctionDecl 0x28a95e8 <line:469:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/libio.h:469:13 _IO_free_backup_area 'void (struct _IO_FILE *) throw()' extern
| |   `-ParmVarDecl 0x28a9560 <col:35, col:44> col:45 'struct _IO_FILE *'
| |-TypedefDecl 0x28a96d0 prev 0x28904e0 </usr/include/stdio.h:79:1, col:20> col:20 va_list '__gnuc_va_list':'struct __va_list_tag [1]'
| | `-TypedefType 0x28a7ae0 '__gnuc_va_list' sugar
| |   |-Typedef 0x2890540 '__gnuc_va_list'
| |   `-TypedefType 0x28904b0 '__builtin_va_list' sugar
| |     |-Typedef 0x2813118 '__builtin_va_list'
| |     `-ConstantArrayType 0x28130c0 'struct __va_list_tag [1]' 1 
| |       `-RecordType 0x2812ee0 'struct __va_list_tag'
| |         `-CXXRecord 0x2812e48 '__va_list_tag'
| |-TypedefDecl 0x28a9730 <line:90:1, col:17> col:17 off_t '__off_t':'long'
| | `-TypedefType 0x28786b0 '__off_t' sugar
| |   |-Typedef 0x28818b0 '__off_t'
| |   `-BuiltinType 0x28128e0 'long'
| |-TypedefDecl 0x28a9790 <line:97:1, col:19> col:19 off64_t '__off64_t':'long'
| | `-TypedefType 0x2877c50 '__off64_t' sugar
| |   |-Typedef 0x2881910 '__off64_t'
| |   `-BuiltinType 0x28128e0 'long'
| |-TypedefDecl 0x28a97f0 <line:102:1, col:19> col:19 ssize_t '__ssize_t':'long'
| | `-TypedefType 0x289f340 '__ssize_t' sugar
| |   |-Typedef 0x2877b40 '__ssize_t'
| |   `-BuiltinType 0x28128e0 'long'
| |-TypedefDecl 0x28a9870 <line:110:1, col:19> col:19 referenced fpos_t '_G_fpos_t':'_G_fpos_t'
| | `-TypedefType 0x28a9840 '_G_fpos_t' sugar
| |   |-Typedef 0x2878800 '_G_fpos_t'
| |   `-ElaboratedType 0x28787b0 'struct _G_fpos_t' sugar
| |     `-RecordType 0x2878630 '_G_fpos_t'
| |       `-CXXRecord 0x2878598 ''
| |-TypedefDecl 0x28a98f0 <line:116:1, col:21> col:21 referenced fpos64_t '_G_fpos64_t':'_G_fpos64_t'
| | `-TypedefType 0x28a98c0 '_G_fpos64_t' sugar
| |   |-Typedef 0x2890440 '_G_fpos64_t'
| |   `-ElaboratedType 0x2878a30 'struct _G_fpos64_t' sugar
| |     `-RecordType 0x2878900 '_G_fpos64_t'
| |       `-CXXRecord 0x2878868 ''
| |-VarDecl 0x28a9968 <line:168:1, col:25> col:25 stdin 'struct _IO_FILE *' extern
| |-VarDecl 0x28a99f0 <line:169:1, col:25> col:25 stdout 'struct _IO_FILE *' extern
| |-VarDecl 0x28a9a78 <line:170:1, col:25> col:25 stderr 'struct _IO_FILE *' extern
| |-FunctionDecl 0x28a9bf0 <line:178:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdio.h:178:12 remove 'int (const char *) throw()' extern
| | `-ParmVarDecl 0x28a9ae8 <col:20, col:32> col:32 __filename 'const char *'
| |-FunctionDecl 0x28a9e30 <line:180:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdio.h:180:12 rename 'int (const char *, const char *) throw()' extern
| | |-ParmVarDecl 0x28a9cb0 <col:20, col:32> col:32 __old 'const char *'
| | `-ParmVarDecl 0x28a9d20 <col:39, col:51> col:51 __new 'const char *'
| |-FunctionDecl 0x28ac780 <line:185:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdio.h:185:12 renameat 'int (int, const char *, int, const char *) throw()' extern
| | |-ParmVarDecl 0x28a9ef8 <col:22, col:26> col:26 __oldfd 'int'
| | |-ParmVarDecl 0x28a9f68 <col:35, col:47> col:47 __old 'const char *'
| | |-ParmVarDecl 0x28a9fd8 <col:54, col:58> col:58 __newfd 'int'
| | `-ParmVarDecl 0x28aa048 <line:186:8, col:20> col:20 __new 'const char *'
| |-FunctionDecl 0x28ac990 <line:195:1, col:27> col:14 tmpfile 'FILE *(void)' extern
| |-FunctionDecl 0x28acac8 <line:205:1, col:29> col:14 tmpfile64 'FILE *(void)' extern
| |-FunctionDecl 0x28acc80 <line:209:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdio.h:209:14 tmpnam 'char *(char *) throw()' extern
| | `-ParmVarDecl 0x28acb80 <col:22, col:28> col:28 __s 'char *'
| |-FunctionDecl 0x28acdc8 <line:215:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdio.h:215:14 tmpnam_r 'char *(char *) throw()' extern
| | `-ParmVarDecl 0x28acd40 <col:24, col:30> col:30 __s 'char *'
| |-FunctionDecl 0x28ad010 <line:227:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:211:58> /usr/include/stdio.h:227:14 tempnam 'char *(const char *, const char *) throw()' extern
| | |-ParmVarDecl 0x28ace88 <col:23, col:35> col:35 __dir 'const char *'
| | |-ParmVarDecl 0x28acef8 <col:42, col:54> col:54 __pfx 'const char *'
| | `-RestrictAttr 0x28ad0c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:211:47> malloc
| |-FunctionDecl 0x28ad1d0 </usr/include/stdio.h:237:1, col:34> col:12 fclose 'int (FILE *)' extern
| | `-ParmVarDecl 0x28ad110 <col:20, col:26> col:26 __stream 'FILE *'
| |-FunctionDecl 0x28ad318 <line:242:1, col:34> col:12 fflush 'int (FILE *)' extern
| | `-ParmVarDecl 0x28ad290 <col:20, col:26> col:26 __stream 'FILE *'
| |-FunctionDecl 0x28ad460 <line:252:1, col:43> col:12 fflush_unlocked 'int (FILE *)' extern
| | `-ParmVarDecl 0x28ad3d8 <col:29, col:35> col:35 __stream 'FILE *'
| |-FunctionDecl 0x28ad5d0 <line:262:1, col:27> col:12 fcloseall 'int (void)' extern
| |-FunctionDecl 0x28ae870 <line:272:1, line:273:37> line:272:14 fopen 'FILE *(const char *__restrict, const char *__restrict)' extern
| | |-ParmVarDecl 0x28ad688 <col:21, col:44> col:44 __filename 'const char *__restrict'
| | `-ParmVarDecl 0x28ae760 <line:273:7, col:30> col:30 __modes 'const char *__restrict'
| |-FunctionDecl 0x28aeb50 <line:278:1, line:280:34> line:278:14 freopen 'FILE *(const char *__restrict, const char *__restrict, FILE *__restrict)' extern
| | |-ParmVarDecl 0x28ae938 <col:23, col:46> col:46 __filename 'const char *__restrict'
| | |-ParmVarDecl 0x28ae9a8 <line:279:9, col:32> col:32 __modes 'const char *__restrict'
| | `-ParmVarDecl 0x28aea18 <line:280:9, col:26> col:26 __stream 'FILE *__restrict'
| |-FunctionDecl 0x28aed20 <line:297:1, line:298:39> line:297:14 fopen64 'FILE *(const char *__restrict, const char *__restrict)' extern
| | |-ParmVarDecl 0x28aec20 <col:23, col:46> col:46 __filename 'const char *__restrict'
| | `-ParmVarDecl 0x28aec90 <line:298:9, col:32> col:32 __modes 'const char *__restrict'
| |-FunctionDecl 0x28aef60 <line:299:1, line:301:29> line:299:14 freopen64 'FILE *(const char *__restrict, const char *__restrict, FILE *__restrict)' extern
| | |-ParmVarDecl 0x28aede8 <col:25, col:48> col:48 __filename 'const char *__restrict'
| | |-ParmVarDecl 0x28aee58 <line:300:4, col:27> col:27 __modes 'const char *__restrict'
| | `-ParmVarDecl 0x28aeec8 <line:301:4, col:21> col:21 __stream 'FILE *__restrict'
| |-FunctionDecl 0x28af1b0 <line:306:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdio.h:306:14 fdopen 'FILE *(int, const char *) throw()' extern
| | |-ParmVarDecl 0x28af030 <col:22, col:26> col:26 __fd 'int'
| | `-ParmVarDecl 0x28af0a0 <col:32, col:44> col:44 __modes 'const char *'
| |-FunctionDecl 0x28af490 <line:312:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdio.h:312:14 fopencookie 'FILE *(void *__restrict, const char *__restrict, _IO_cookie_io_functions_t) throw()' extern
| | |-ParmVarDecl 0x28af278 <col:27, col:44> col:44 __magic_cookie 'void *__restrict'
| | |-ParmVarDecl 0x28af2e8 <line:313:6, col:29> col:29 __modes 'const char *__restrict'
| | `-ParmVarDecl 0x28af358 <line:314:6, col:32> col:32 __io_funcs '_IO_cookie_io_functions_t':'_IO_cookie_io_functions_t'
| |-FunctionDecl 0x28b07b8 <line:319:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdio.h:319:14 fmemopen 'FILE *(void *, size_t, const char *) throw()' extern
| | |-ParmVarDecl 0x28af560 <col:24, col:30> col:30 __s 'void *'
| | |-ParmVarDecl 0x28af5d0 <col:35, col:42> col:42 __len 'size_t':'unsigned long'
| | `-ParmVarDecl 0x28af640 <col:49, col:61> col:61 __modes 'const char *'
| |-FunctionDecl 0x28b0aa0 <line:325:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdio.h:325:14 open_memstream 'FILE *(char **, size_t *) throw()' extern
| | |-ParmVarDecl 0x28b08c0 <col:30, col:37> col:37 __bufloc 'char **'
| | `-ParmVarDecl 0x28b0988 <col:47, col:55> col:55 __sizeloc 'size_t *'
| |-FunctionDecl 0x28b0cf0 <line:332:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdio.h:332:13 setbuf 'void (FILE *__restrict, char *__restrict) throw()' extern
| | |-ParmVarDecl 0x28b0b68 <col:21, col:38> col:38 __stream 'FILE *__restrict'
| | `-ParmVarDecl 0x28b0bd8 <col:48, col:65> col:65 __buf 'char *__restrict'
| |-FunctionDecl 0x28b1050 <line:336:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdio.h:336:12 setvbuf 'int (FILE *__restrict, char *__restrict, int, size_t) throw()' extern
| | |-ParmVarDecl 0x28b0db8 <col:21, col:38> col:38 __stream 'FILE *__restrict'
| | |-ParmVarDecl 0x28b0e28 <col:48, col:65> col:65 __buf 'char *__restrict'
| | |-ParmVarDecl 0x28b0e98 <line:337:7, col:11> col:11 __modes 'int'
| | `-ParmVarDecl 0x28b0f08 <col:20, col:27> col:27 __n 'size_t':'unsigned long'
| |-FunctionDecl 0x28b1340 <line:343:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdio.h:343:13 setbuffer 'void (FILE *__restrict, char *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0x28b1128 <col:24, col:41> col:41 __stream 'FILE *__restrict'
| | |-ParmVarDecl 0x28b1198 <col:51, col:68> col:68 __buf 'char *__restrict'
| | `-ParmVarDecl 0x28b1208 <line:344:10, col:17> col:17 __size 'size_t':'unsigned long'
| |-FunctionDecl 0x28b14d0 <line:347:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdio.h:347:13 setlinebuf 'void (FILE *) throw()' extern
| | `-ParmVarDecl 0x28b1410 <col:25, col:31> col:31 __stream 'FILE *'
| |-FunctionDecl 0x28b1fa0 <line:356:1, line:357:43> line:356:12 fprintf 'int (FILE *__restrict, const char *__restrict, ...)' extern
| | |-ParmVarDecl 0x28b1590 <col:21, col:38> col:38 __stream 'FILE *__restrict'
| | |-ParmVarDecl 0x28b1600 <line:357:7, col:30> col:30 __format 'const char *__restrict'
| | `-FormatAttr 0x28b20a0 <line:356:12> Implicit printf 2 3
| |-FunctionDecl 0x28b2200 <line:362:1, col:56> col:12 printf 'int (const char *__restrict, ...)' extern
| | |-ParmVarDecl 0x28b20f8 <col:20, col:43> col:43 __format 'const char *__restrict'
| | `-FormatAttr 0x28b22b0 <col:12> Implicit printf 1 2
| |-FunctionDecl 0x28b2490 <line:364:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:29> /usr/include/stdio.h:364:12 sprintf 'int (char *__restrict, const char *__restrict, ...) throw()' extern
| | |-ParmVarDecl 0x28b2308 <col:21, col:38> col:38 __s 'char *__restrict'
| | |-ParmVarDecl 0x28b2378 <line:365:7, col:30> col:30 __format 'const char *__restrict'
| | `-FormatAttr 0x28b2548 <line:364:12> Implicit printf 2 3
| |-FunctionDecl 0x28b2760 <line:371:1, line:372:24> line:371:12 vfprintf 'int (FILE *__restrict, const char *__restrict, struct __va_list_tag *)' extern
| | |-ParmVarDecl 0x28b25a0 <col:22, col:39> col:39 __s 'FILE *__restrict'
| | |-ParmVarDecl 0x28b2610 <col:44, col:67> col:67 __format 'const char *__restrict'
| | `-ParmVarDecl 0x28b2680 </usr/include/_G_config.h:46:20, /usr/include/stdio.h:372:19> col:19 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| |-FunctionDecl 0x28b29e0 <line:377:1, col:70> col:12 vprintf 'int (const char *__restrict, struct __va_list_tag *)' extern
| | |-ParmVarDecl 0x28b2858 <col:21, col:44> col:44 __format 'const char *__restrict'
| | |-ParmVarDecl 0x28b28c8 </usr/include/_G_config.h:46:20, /usr/include/stdio.h:377:65> col:65 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| | `-FormatAttr 0x28b2a98 <col:12> Implicit printf 1 0
| |-FunctionDecl 0x28b2d00 <line:379:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:61:29> /usr/include/stdio.h:379:12 vsprintf 'int (char *__restrict, const char *__restrict, struct __va_list_tag *) throw()' extern
| | |-ParmVarDecl 0x28b2af0 <col:22, col:39> col:39 __s 'char *__restrict'
| | |-ParmVarDecl 0x28b2b60 <col:44, col:67> col:67 __format 'const char *__restrict'
| | |-ParmVarDecl 0x28b2bd0 </usr/include/_G_config.h:46:20, /usr/include/stdio.h:380:19> col:19 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| | `-FormatAttr 0x28b2dc0 <line:379:12> Implicit printf 2 0
| |-FunctionDecl 0x28b30a0 <line:386:1, line:388:62> line:386:12 snprintf 'int (char *__restrict, size_t, const char *__restrict, ...) throw()' extern
| | |-ParmVarDecl 0x28b2e18 <col:22, col:39> col:39 __s 'char *__restrict'
| | |-ParmVarDecl 0x28b2e88 <col:44, col:51> col:51 __maxlen 'size_t':'unsigned long'
| | |-ParmVarDecl 0x28b2ef8 <line:387:8, col:31> col:31 __format 'const char *__restrict'
| | `-FormatAttr 0x28b3160 <line:388:32, col:60> printf 3 4
| |-FunctionDecl 0x28b34a0 <line:390:1, line:392:62> line:390:12 vsnprintf 'int (char *__restrict, size_t, const char *__restrict, struct __va_list_tag *) throw()' extern
| | |-ParmVarDecl 0x28b31b8 <col:23, col:40> col:40 __s 'char *__restrict'
| | |-ParmVarDecl 0x28b3228 <col:45, col:52> col:52 __maxlen 'size_t':'unsigned long'
| | |-ParmVarDecl 0x28b3298 <line:391:9, col:32> col:32 __format 'const char *__restrict'
| | |-ParmVarDecl 0x28b3308 </usr/include/_G_config.h:46:20, /usr/include/stdio.h:391:53> col:53 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| | `-FormatAttr 0x28b3568 <line:392:32, col:60> printf 3 0
| |-FunctionDecl 0x28b3830 <line:399:1, line:401:62> line:399:12 vasprintf 'int (char **__restrict, const char *__restrict, struct __va_list_tag *) throw()' extern
| | |-ParmVarDecl 0x28b35c8 <col:23, col:41> col:41 __ptr 'char **__restrict'
| | |-ParmVarDecl 0x28b3638 <col:48, col:71> col:71 __f 'const char *__restrict'
| | |-ParmVarDecl 0x28b36a8 </usr/include/_G_config.h:46:20, /usr/include/stdio.h:400:20> col:20 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| | `-FormatAttr 0x28b38f0 <line:401:32, col:60> printf 2 0
| |-FunctionDecl 0x28b3b20 <line:402:1, line:404:62> line:402:12 __asprintf 'int (char **__restrict, const char *__restrict, ...) throw()' extern
| | |-ParmVarDecl 0x28b3950 <col:24, col:42> col:42 __ptr 'char **__restrict'
| | |-ParmVarDecl 0x28b39c0 <line:403:10, col:33> col:33 __fmt 'const char *__restrict'
| | `-FormatAttr 0x28b3bd8 <line:404:32, col:60> printf 2 3
| |-FunctionDecl 0x28b3d88 <line:405:1, line:407:62> line:405:12 asprintf 'int (char **__restrict, const char *__restrict, ...) throw()' extern
| | |-ParmVarDecl 0x28b3c38 <col:22, col:40> col:40 __ptr 'char **__restrict'
| | |-ParmVarDecl 0x28b3ca8 <line:406:8, col:31> col:31 __fmt 'const char *__restrict'
| | `-FormatAttr 0x28b3e40 <line:407:32, col:60> printf 2 3
| |-FunctionDecl 0x28b4140 <line:412:1, line:414:52> line:412:12 vdprintf 'int (int, const char *__restrict, struct __va_list_tag *)' extern
| | |-ParmVarDecl 0x28b3e98 <col:22, col:26> col:26 __fd 'int'
| | |-ParmVarDecl 0x28b3f08 <col:32, col:55> col:55 __fmt 'const char *__restrict'
| | |-ParmVarDecl 0x28b3fc0 </usr/include/_G_config.h:46:20, /usr/include/stdio.h:413:19> col:19 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| | `-FormatAttr 0x28b4200 <line:414:22, col:50> printf 2 0
| |-FunctionDecl 0x28b4430 <line:415:1, line:416:52> line:415:12 dprintf 'int (int, const char *__restrict, ...)' extern
| | |-ParmVarDecl 0x28b4258 <col:21, col:25> col:25 __fd 'int'
| | |-ParmVarDecl 0x28b42c8 <col:31, col:54> col:54 __fmt 'const char *__restrict'
| | `-FormatAttr 0x28b44e8 <line:416:22, col:50> printf 2 3
| |-FunctionDecl 0x28b4640 <line:425:1, line:426:42> line:425:12 fscanf 'int (FILE *__restrict, const char *__restrict, ...)' extern
| | |-ParmVarDecl 0x28b4540 <col:20, col:37> col:37 __stream 'FILE *__restrict'
| | |-ParmVarDecl 0x28b45b0 <line:426:6, col:29> col:29 __format 'const char *__restrict'
| | `-FormatAttr 0x28b46f8 <line:425:12> Implicit scanf 2 3
| |-FunctionDecl 0x28b47d8 <line:431:1, col:55> col:12 scanf 'int (const char *__restrict, ...)' extern
| | |-ParmVarDecl 0x28b4750 <col:19, col:42> col:42 __format 'const char *__restrict'
| | `-FormatAttr 0x28b4888 <col:12> Implicit scanf 1 2
| |-FunctionDecl 0x28b4a60 <line:433:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdio.h:433:12 sscanf 'int (const char *__restrict, const char *__restrict, ...) throw()' extern
| | |-ParmVarDecl 0x28b48e0 <col:20, col:43> col:43 __s 'const char *__restrict'
| | |-ParmVarDecl 0x28b4950 <line:434:6, col:29> col:29 __format 'const char *__restrict'
| | `-FormatAttr 0x28b4b60 <line:433:12> Implicit scanf 2 3
| |-FunctionDecl 0x28b4d80 <line:471:1, line:473:51> line:471:12 vfscanf 'int (FILE *__restrict, const char *__restrict, struct __va_list_tag *)' extern
| | |-ParmVarDecl 0x28b4bb8 <col:21, col:38> col:38 __s 'FILE *__restrict'
| | |-ParmVarDecl 0x28b4c28 <col:43, col:66> col:66 __format 'const char *__restrict'
| | |-ParmVarDecl 0x28b4c98 </usr/include/_G_config.h:46:20, /usr/include/stdio.h:472:18> col:18 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| | `-FormatAttr 0x28b4e40 <line:473:22, col:49> scanf 2 0
| |-FunctionDecl 0x28b5050 <line:479:1, line:480:51> line:479:12 vscanf 'int (const char *__restrict, struct __va_list_tag *)' extern
| | |-ParmVarDecl 0x28b4ee8 <col:20, col:43> col:43 __format 'const char *__restrict'
| | |-ParmVarDecl 0x28b4f58 </usr/include/_G_config.h:46:20, /usr/include/stdio.h:479:64> col:64 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| | `-FormatAttr 0x28b5108 <line:480:22, col:49> scanf 1 0
| |-FunctionDecl 0x28b5400 <line:483:1, line:485:59> line:483:12 vsscanf 'int (const char *__restrict, const char *__restrict, struct __va_list_tag *) throw()' extern
| | |-ParmVarDecl 0x28b51a0 <col:21, col:44> col:44 __s 'const char *__restrict'
| | |-ParmVarDecl 0x28b5210 <line:484:7, col:30> col:30 __format 'const char *__restrict'
| | |-ParmVarDecl 0x28b5280 </usr/include/_G_config.h:46:20, /usr/include/stdio.h:484:51> col:51 __arg 'struct __va_list_tag *':'struct __va_list_tag *'
| | `-FormatAttr 0x28b54c0 <line:485:30, col:57> scanf 2 0
| |-FunctionDecl 0x28b55f0 <line:531:1, col:33> col:12 fgetc 'int (FILE *)' extern
| | `-ParmVarDecl 0x28b5568 <col:19, col:25> col:25 __stream 'FILE *'
| |-FunctionDecl 0x28b5738 <line:532:1, col:32> col:12 getc 'int (FILE *)' extern
| | `-ParmVarDecl 0x28b56b0 <col:18, col:24> col:24 __stream 'FILE *'
| |-FunctionDecl 0x28b5878 <line:538:1, col:25> col:12 getchar 'int (void)' extern
| |-FunctionDecl 0x28b59b8 <line:550:1, col:41> col:12 getc_unlocked 'int (FILE *)' extern
| | `-ParmVarDecl 0x28b5930 <col:27, col:33> col:33 __stream 'FILE *'
| |-FunctionDecl 0x28b5af8 <line:551:1, col:34> col:12 getchar_unlocked 'int (void)' extern
| |-FunctionDecl 0x28b5c38 <line:561:1, col:42> col:12 fgetc_unlocked 'int (FILE *)' extern
| | `-ParmVarDecl 0x28b5bb0 <col:28, col:34> col:34 __stream 'FILE *'
| |-FunctionDecl 0x28b5e40 <line:573:1, col:42> col:12 fputc 'int (int, FILE *)' extern
| | |-ParmVarDecl 0x28b5cf8 <col:19, col:23> col:23 __c 'int'
| | `-ParmVarDecl 0x28b5d68 <col:28, col:34> col:34 __stream 'FILE *'
| |-FunctionDecl 0x28b6070 <line:574:1, col:41> col:12 putc 'int (int, FILE *)' extern
| | |-ParmVarDecl 0x28b5f08 <col:18, col:22> col:22 __c 'int'
| | `-ParmVarDecl 0x28b5fe0 <col:27, col:33> col:33 __stream 'FILE *'
| |-FunctionDecl 0x28b6200 <line:580:1, col:28> col:12 putchar 'int (int)' extern
| | `-ParmVarDecl 0x28b6138 <col:21, col:25> col:25 __c 'int'
| |-FunctionDecl 0x28b63c0 <line:594:1, col:51> col:12 fputc_unlocked 'int (int, FILE *)' extern
| | |-ParmVarDecl 0x28b62c0 <col:28, col:32> col:32 __c 'int'
| | `-ParmVarDecl 0x28b6330 <col:37, col:43> col:43 __stream 'FILE *'
| |-FunctionDecl 0x28b6588 <line:602:1, col:50> col:12 putc_unlocked 'int (int, FILE *)' extern
| | |-ParmVarDecl 0x28b6488 <col:27, col:31> col:31 __c 'int'
| | `-ParmVarDecl 0x28b64f8 <col:36, col:42> col:42 __stream 'FILE *'
| |-FunctionDecl 0x28b66d8 <line:603:1, col:37> col:12 putchar_unlocked 'int (int)' extern
| | `-ParmVarDecl 0x28b6650 <col:30, col:34> col:34 __c 'int'
| |-FunctionDecl 0x28b6820 <line:610:1, col:32> col:12 getw 'int (FILE *)' extern
| | `-ParmVarDecl 0x28b6798 <col:18, col:24> col:24 __stream 'FILE *'
| |-FunctionDecl 0x28b69e0 <line:613:1, col:41> col:12 putw 'int (int, FILE *)' extern
| | |-ParmVarDecl 0x28b68e0 <col:18, col:22> col:22 __w 'int'
| | `-ParmVarDecl 0x28b6950 <col:27, col:33> col:33 __stream 'FILE *'
| |-FunctionDecl 0x28b6cc0 <line:622:1, col:77> col:14 fgets 'char *(char *__restrict, int, FILE *__restrict)' extern
| | |-ParmVarDecl 0x28b6aa8 <col:21, col:38> col:38 __s 'char *__restrict'
| | |-ParmVarDecl 0x28b6b18 <col:43, col:47> col:47 __n 'int'
| | `-ParmVarDecl 0x28b6b88 <col:52, col:69> col:69 __stream 'FILE *__restrict'
| |-FunctionDecl 0x28b6e18 <line:638:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:254:66> /usr/include/stdio.h:638:14 gets 'char *(char *)' extern
| | |-ParmVarDecl 0x28b6d90 <col:20, col:26> col:26 __s 'char *'
| | `-DeprecatedAttr 0x28b6ec8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:254:51> ""
| |-FunctionDecl 0x28b70f8 </usr/include/stdio.h:649:1, line:650:34> line:649:14 fgets_unlocked 'char *(char *__restrict, int, FILE *__restrict)' extern
| | |-ParmVarDecl 0x28b6f18 <col:30, col:47> col:47 __s 'char *__restrict'
| | |-ParmVarDecl 0x28b6ff0 <col:52, col:56> col:56 __n 'int'
| | `-ParmVarDecl 0x28b7060 <line:650:9, col:26> col:26 __stream 'FILE *__restrict'
| |-FunctionDecl 0x28b7460 <line:665:1, line:667:36> line:665:20 __getdelim '__ssize_t (char **__restrict, size_t *__restrict, int, FILE *__restrict)' extern
| | |-ParmVarDecl 0x28b71d0 <col:32, col:50> col:50 __lineptr 'char **__restrict'
| | |-ParmVarDecl 0x28b7240 <line:666:11, col:30> col:30 __n 'size_t *__restrict'
| | |-ParmVarDecl 0x28b72b0 <col:35, col:39> col:39 __delimiter 'int'
| | `-ParmVarDecl 0x28b7320 <line:667:11, col:28> col:28 __stream 'FILE *__restrict'
| |-FunctionDecl 0x28b7730 <line:668:1, line:670:34> line:668:20 getdelim '__ssize_t (char **__restrict, size_t *__restrict, int, FILE *__restrict)' extern
| | |-ParmVarDecl 0x28b7540 <col:30, col:48> col:48 __lineptr 'char **__restrict'
| | |-ParmVarDecl 0x28b75b0 <line:669:9, col:28> col:28 __n 'size_t *__restrict'
| | |-ParmVarDecl 0x28b7620 <col:33, col:37> col:37 __delimiter 'int'
| | `-ParmVarDecl 0x28b7690 <line:670:9, col:26> col:26 __stream 'FILE *__restrict'
| |-FunctionDecl 0x28b7a20 <line:678:1, line:680:33> line:678:20 getline '__ssize_t (char **__restrict, size_t *__restrict, FILE *__restrict)' extern
| | |-ParmVarDecl 0x28b7810 <col:29, col:47> col:47 __lineptr 'char **__restrict'
| | |-ParmVarDecl 0x28b7880 <line:679:8, col:27> col:27 __n 'size_t *__restrict'
| | `-ParmVarDecl 0x28b78f0 <line:680:8, col:25> col:25 __stream 'FILE *__restrict'
| |-FunctionDecl 0x28b7c70 <line:689:1, col:72> col:12 fputs 'int (const char *__restrict, FILE *__restrict)' extern
| | |-ParmVarDecl 0x28b7af0 <col:19, col:42> col:42 __s 'const char *__restrict'
| | `-ParmVarDecl 0x28b7b60 <col:47, col:64> col:64 __stream 'FILE *__restrict'
| |-FunctionDecl 0x28b7dc0 <line:695:1, col:33> col:12 puts 'int (const char *)' extern
| | `-ParmVarDecl 0x28b7d38 <col:18, col:30> col:30 __s 'const char *'
| |-FunctionDecl 0x28b8000 <line:702:1, col:43> col:12 ungetc 'int (int, FILE *)' extern
| | |-ParmVarDecl 0x28b7e80 <col:20, col:24> col:24 __c 'int'
| | `-ParmVarDecl 0x28b7ef0 <col:29, col:35> col:35 __stream 'FILE *'
| |-FunctionDecl 0x28b8360 <line:709:1, line:710:45> line:709:15 fread 'size_t (void *__restrict, size_t, size_t, FILE *__restrict)' extern
| | |-ParmVarDecl 0x28b80c8 <col:22, col:39> col:39 __ptr 'void *__restrict'
| | |-ParmVarDecl 0x28b8138 <col:46, col:53> col:53 __size 'size_t':'unsigned long'
| | |-ParmVarDecl 0x28b81a8 <line:710:8, col:15> col:15 __n 'size_t':'unsigned long'
| | `-ParmVarDecl 0x28b8218 <col:20, col:37> col:37 __stream 'FILE *__restrict'
| |-FunctionDecl 0x28b8700 <line:715:1, line:716:41> line:715:15 fwrite 'size_t (const void *__restrict, size_t, size_t, FILE *__restrict)' extern
| | |-ParmVarDecl 0x28b8468 <col:23, col:46> col:46 __ptr 'const void *__restrict'
| | |-ParmVarDecl 0x28b84d8 <col:53, col:60> col:60 __size 'size_t':'unsigned long'
| | |-ParmVarDecl 0x28b8548 <line:716:9, col:16> col:16 __n 'size_t':'unsigned long'
| | `-ParmVarDecl 0x28b85b8 <col:21, col:38> col:38 __s 'FILE *__restrict'
| |-FunctionDecl 0x28b88d8 <line:726:1, line:727:32> line:726:12 fputs_unlocked 'int (const char *__restrict, FILE *__restrict)' extern
| | |-ParmVarDecl 0x28b87d8 <col:28, col:51> col:51 __s 'const char *__restrict'
| | `-ParmVarDecl 0x28b8848 <line:727:7, col:24> col:24 __stream 'FILE *__restrict'
| |-FunctionDecl 0x28b8b90 <line:737:1, line:738:47> line:737:15 fread_unlocked 'size_t (void *__restrict, size_t, size_t, FILE *__restrict)' extern
| | |-ParmVarDecl 0x28b89a0 <col:31, col:48> col:48 __ptr 'void *__restrict'
| | |-ParmVarDecl 0x28b8a10 <col:55, col:62> col:62 __size 'size_t':'unsigned long'
| | |-ParmVarDecl 0x28b8a80 <line:738:10, col:17> col:17 __n 'size_t':'unsigned long'
| | `-ParmVarDecl 0x28b8af0 <col:22, col:39> col:39 __stream 'FILE *__restrict'
| |-FunctionDecl 0x28b8e58 <line:739:1, line:740:48> line:739:15 fwrite_unlocked 'size_t (const void *__restrict, size_t, size_t, FILE *__restrict)' extern
| | |-ParmVarDecl 0x28b8c68 <col:32, col:55> col:55 __ptr 'const void *__restrict'
| | |-ParmVarDecl 0x28b8cd8 <col:62, col:69> col:69 __size 'size_t':'unsigned long'
| | |-ParmVarDecl 0x28b8d48 <line:740:11, col:18> col:18 __n 'size_t':'unsigned long'
| | `-ParmVarDecl 0x28b8db8 <col:23, col:40> col:40 __stream 'FILE *__restrict'
| |-FunctionDecl 0x28ba160 <line:749:1, col:63> col:12 fseek 'int (FILE *, long, int)' extern
| | |-ParmVarDecl 0x28b8f30 <col:19, col:25> col:25 __stream 'FILE *'
| | |-ParmVarDecl 0x28b8fa0 <col:35, col:44> col:44 __off 'long'
| | `-ParmVarDecl 0x28ba030 <col:51, col:55> col:55 __whence 'int'
| |-FunctionDecl 0x28ba330 <line:754:1, col:38> col:17 ftell 'long (FILE *)' extern
| | `-ParmVarDecl 0x28ba230 <col:24, col:30> col:30 __stream 'FILE *'
| |-FunctionDecl 0x28ba4b0 <line:759:1, col:35> col:13 rewind 'void (FILE *)' extern
| | `-ParmVarDecl 0x28ba3f0 <col:21, col:27> col:27 __stream 'FILE *'
| |-FunctionDecl 0x28ba730 <line:773:1, col:63> col:12 fseeko 'int (FILE *, __off_t, int)' extern
| | |-ParmVarDecl 0x28ba570 <col:20, col:26> col:26 __stream 'FILE *'
| | |-ParmVarDecl 0x28ba5e0 <col:36, col:44> col:44 __off '__off_t':'long'
| | `-ParmVarDecl 0x28ba650 <col:51, col:55> col:55 __whence 'int'
| |-FunctionDecl 0x28ba8c0 <line:778:1, col:38> col:16 ftello '__off_t (FILE *)' extern
| | `-ParmVarDecl 0x28ba800 <col:24, col:30> col:30 __stream 'FILE *'
| |-FunctionDecl 0x28bab80 <line:798:1, col:72> col:12 fgetpos 'int (FILE *__restrict, fpos_t *__restrict)' extern
| | |-ParmVarDecl 0x28ba980 <col:21, col:38> col:38 __stream 'FILE *__restrict'
| | `-ParmVarDecl 0x28baa68 <col:48, col:67> col:67 __pos 'fpos_t *__restrict'
| |-FunctionDecl 0x28bae30 <line:803:1, col:56> col:12 fsetpos 'int (FILE *, const fpos_t *)' extern
| | |-ParmVarDecl 0x28bac48 <col:21, col:27> col:27 __stream 'FILE *'
| | `-ParmVarDecl 0x28bad18 <col:37, col:51> col:51 __pos 'const fpos_t *'
| |-FunctionDecl 0x28bd120 <line:818:1, col:67> col:12 fseeko64 'int (FILE *, __off64_t, int)' extern
| | |-ParmVarDecl 0x28baef8 <col:22, col:28> col:28 __stream 'FILE *'
| | |-ParmVarDecl 0x28baf68 <col:38, col:48> col:48 __off '__off64_t':'long'
| | `-ParmVarDecl 0x28bd040 <col:55, col:59> col:59 __whence 'int'
| |-FunctionDecl 0x28bd2b0 <line:819:1, col:42> col:18 ftello64 '__off64_t (FILE *)' extern
| | `-ParmVarDecl 0x28bd1f0 <col:28, col:34> col:34 __stream 'FILE *'
| |-FunctionDecl 0x28bd570 <line:820:1, col:76> col:12 fgetpos64 'int (FILE *__restrict, fpos64_t *__restrict)' extern
| | |-ParmVarDecl 0x28bd370 <col:23, col:40> col:40 __stream 'FILE *__restrict'
| | `-ParmVarDecl 0x28bd458 <col:50, col:71> col:71 __pos 'fpos64_t *__restrict'
| |-FunctionDecl 0x28bd820 <line:821:1, col:60> col:12 fsetpos64 'int (FILE *, const fpos64_t *)' extern
| | |-ParmVarDecl 0x28bd638 <col:23, col:29> col:29 __stream 'FILE *'
| | `-ParmVarDecl 0x28bd708 <col:39, col:55> col:55 __pos 'const fpos64_t *'
| |-FunctionDecl 0x28bd970 <line:826:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdio.h:826:13 clearerr 'void (FILE *) throw()' extern
| | `-ParmVarDecl 0x28bd8e8 <col:23, col:29> col:29 __stream 'FILE *'
| |-FunctionDecl 0x28bdaf0 <line:828:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdio.h:828:12 feof 'int (FILE *) throw()' extern
| | `-ParmVarDecl 0x28bda30 <col:18, col:24> col:24 __stream 'FILE *'
| |-FunctionDecl 0x28bdc38 <line:830:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdio.h:830:12 ferror 'int (FILE *) throw()' extern
| | `-ParmVarDecl 0x28bdbb0 <col:20, col:26> col:26 __stream 'FILE *'
| |-FunctionDecl 0x28bdd80 <line:835:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdio.h:835:13 clearerr_unlocked 'void (FILE *) throw()' extern
| | `-ParmVarDecl 0x28bdcf8 <col:32, col:38> col:38 __stream 'FILE *'
| |-FunctionDecl 0x28bdec8 <line:836:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdio.h:836:12 feof_unlocked 'int (FILE *) throw()' extern
| | `-ParmVarDecl 0x28bde40 <col:27, col:33> col:33 __stream 'FILE *'
| |-FunctionDecl 0x28be050 <line:837:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdio.h:837:12 ferror_unlocked 'int (FILE *) throw()' extern
| | `-ParmVarDecl 0x28bdf88 <col:29, col:35> col:35 __stream 'FILE *'
| |-FunctionDecl 0x28be1d0 <line:846:1, col:36> col:13 perror 'void (const char *)' extern
| | `-ParmVarDecl 0x28be110 <col:21, col:33> col:33 __s 'const char *'
| |-VarDecl 0x28be290 </usr/include/x86_64-linux-gnu/bits/sys_errlist.h:26:1, col:12> col:12 sys_nerr 'int' extern
| |-VarDecl 0x28be368 <line:27:1, col:38> col:26 sys_errlist 'const char *const []' extern
| |-VarDecl 0x28be3d8 <line:30:1, col:12> col:12 _sys_nerr 'int' extern
| |-VarDecl 0x28be458 <line:31:1, col:39> col:26 _sys_errlist 'const char *const []' extern
| |-FunctionDecl 0x28be550 </usr/include/stdio.h:858:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdio.h:858:12 fileno 'int (FILE *) throw()' extern
| | `-ParmVarDecl 0x28be4c8 <col:20, col:26> col:26 __stream 'FILE *'
| |-FunctionDecl 0x28be698 <line:863:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdio.h:863:12 fileno_unlocked 'int (FILE *) throw()' extern
| | `-ParmVarDecl 0x28be610 <col:29, col:35> col:35 __stream 'FILE *'
| |-FunctionDecl 0x28be8a0 <line:872:1, col:63> col:14 popen 'FILE *(const char *, const char *)' extern
| | |-ParmVarDecl 0x28be758 <col:21, col:33> col:33 __command 'const char *'
| | `-ParmVarDecl 0x28be7c8 <col:44, col:56> col:56 __modes 'const char *'
| |-FunctionDecl 0x28be9f0 <line:878:1, col:34> col:12 pclose 'int (FILE *)' extern
| | `-ParmVarDecl 0x28be968 <col:20, col:26> col:26 __stream 'FILE *'
| |-FunctionDecl 0x28beb38 <line:884:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdio.h:884:14 ctermid 'char *(char *) throw()' extern
| | `-ParmVarDecl 0x28beab0 <col:23, col:29> col:29 __s 'char *'
| |-FunctionDecl 0x28bec80 <line:890:1, col:32> col:14 cuserid 'char *(char *)' extern
| | `-ParmVarDecl 0x28bebf8 <col:23, col:29> col:29 __s 'char *'
| |-CXXRecordDecl 0x28bed30 <line:895:1, col:8> col:8 struct obstack
| |-FunctionDecl 0x28c10a0 <line:898:1, line:900:62> line:898:12 obstack_printf 'int (struct obstack *__restrict, const char *__restrict, ...) throw()' extern
| | |-ParmVarDecl 0x28bee90 <col:28, col:55> col:55 __obstack 'struct obstack *__restrict'
| | |-ParmVarDecl 0x28bef00 <line:899:7, col:30> col:30 __format 'const char *__restrict'
| | `-FormatAttr 0x28c1158 <line:900:32, col:60> printf 2 3
| |-FunctionDecl 0x28c1430 <line:901:1, line:904:62> line:901:12 obstack_vprintf 'int (struct obstack *__restrict, const char *__restrict, struct __va_list_tag *) throw()' extern
| | |-ParmVarDecl 0x28c11c8 <col:29, col:56> col:56 __obstack 'struct obstack *__restrict'
| | |-ParmVarDecl 0x28c1238 <line:902:8, col:31> col:31 __format 'const char *__restrict'
| | |-ParmVarDecl 0x28c12a8 </usr/include/_G_config.h:46:20, /usr/include/stdio.h:903:19> col:19 __args 'struct __va_list_tag *':'struct __va_list_tag *'
| | `-FormatAttr 0x28c14f0 <line:904:32, col:60> printf 2 0
| |-FunctionDecl 0x28c15d0 <line:912:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdio.h:912:13 flockfile 'void (FILE *) throw()' extern
| | `-ParmVarDecl 0x28c1548 <col:24, col:30> col:30 __stream 'FILE *'
| |-FunctionDecl 0x28c1718 <line:916:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdio.h:916:12 ftrylockfile 'int (FILE *) throw()' extern
| | `-ParmVarDecl 0x28c1690 <col:26, col:32> col:32 __stream 'FILE *'
| `-FunctionDecl 0x28c1860 <line:919:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdio.h:919:13 funlockfile 'void (FILE *) throw()' extern
|   `-ParmVarDecl 0x28c17d8 <col:26, col:32> col:32 __stream 'FILE *'
|-LinkageSpecDecl 0x28c1940 </usr/include/x86_64-linux-gnu/sys/cdefs.h:98:24, line:99:22> line:98:31 C
| |-EnumDecl 0x28c1990 </usr/include/x86_64-linux-gnu/bits/waitflags.h:50:9, line:55:1> line:50:9
| | |-EnumConstantDecl 0x28c1a40 <line:52:3> col:3 P_ALL 'idtype_t'
| | |-EnumConstantDecl 0x28c1a90 <line:53:3> col:3 P_PID 'idtype_t'
| | `-EnumConstantDecl 0x28c1ae0 <line:54:3> col:3 P_PGID 'idtype_t'
| |-TypedefDecl 0x28c1b80 <line:50:1, line:55:3> col:3 idtype_t 'enum idtype_t':'idtype_t'
| | `-ElaboratedType 0x28c1b30 'enum idtype_t' sugar
| |   `-EnumType 0x28c1a20 'idtype_t'
| |     `-Enum 0x28c1990 ''
| |-CXXRecordDecl 0x28c1be8 </usr/include/x86_64-linux-gnu/bits/waitstatus.h:66:1, line:97:3> line:66:7 union wait definition
| | |-CXXRecordDecl 0x28c1d00 <col:1, col:7> col:7 implicit union wait
| | |-FieldDecl 0x28c1da0 <line:68:5, col:9> col:9 w_status 'int'
| | |-CXXRecordDecl 0x28c1de8 <line:69:5, line:83:7> line:69:5 struct definition
| | | |-FieldDecl 0x28c1f30 <line:72:2, col:27> col:15 __w_termsig 'unsigned int'
| | | | `-IntegerLiteral 0x28c1f00 <col:27> 'int' 7
| | | |-FieldDecl 0x28c1fa8 <line:73:2, col:28> col:15 __w_coredump 'unsigned int'
| | | | `-IntegerLiteral 0x28c1f78 <col:28> 'int' 1
| | | |-FieldDecl 0x28c2020 <line:74:2, col:27> col:15 __w_retcode 'unsigned int'
| | | | `-IntegerLiteral 0x28c1ff0 <col:27> 'int' 8
| | | `-FieldDecl 0x28cef00 <line:75:2, col:15> col:14 'unsigned int'
| | |   `-IntegerLiteral 0x28ceed0 <col:15> 'int' 16
| | |-FieldDecl 0x28cefa0 <line:69:5, line:83:9> col:9 __wait_terminated 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/waitstatus.h:69:5)':'struct wait::(anonymous at /usr/include/x86_64-linux-gnu/bits/waitstatus.h:69:5)'
| | |-CXXRecordDecl 0x28cf000 <line:84:5, line:96:7> line:84:5 struct definition
| | | |-FieldDecl 0x28cf140 <line:87:2, col:27> col:15 __w_stopval 'unsigned int'
| | | | `-IntegerLiteral 0x28cf110 <col:27> 'int' 8
| | | |-FieldDecl 0x28cf1b8 <line:88:2, col:27> col:15 __w_stopsig 'unsigned int'
| | | | `-IntegerLiteral 0x28cf188 <col:27> 'int' 8
| | | `-FieldDecl 0x28cf230 <line:89:2, col:15> col:14 'unsigned int'
| | |   `-IntegerLiteral 0x28cf200 <col:15> 'int' 16
| | `-FieldDecl 0x28cf2d0 <line:84:5, line:96:9> col:9 __wait_stopped 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/waitstatus.h:84:5)':'struct wait::(anonymous at /usr/include/x86_64-linux-gnu/bits/waitstatus.h:84:5)'
| |-CXXRecordDecl 0x28cf330 </usr/include/stdlib.h:97:9, line:101:3> line:97:9 struct definition
| | |-FieldDecl 0x28cf450 <line:99:5, col:9> col:9 quot 'int'
| | `-FieldDecl 0x28cf4a8 <line:100:5, col:9> col:9 rem 'int'
| |-TypedefDecl 0x28cf540 <line:97:1, line:101:5> col:5 referenced div_t 'struct div_t':'div_t'
| | `-ElaboratedType 0x28cf4f0 'struct div_t' sugar
| |   `-RecordType 0x28cf3c0 'div_t'
| |     `-CXXRecord 0x28cf330 ''
| |-CXXRecordDecl 0x28cf5a8 <line:105:9, line:109:3> line:105:9 struct definition
| | |-FieldDecl 0x28cf6d0 <line:107:5, col:14> col:14 quot 'long'
| | `-FieldDecl 0x28cf728 <line:108:5, col:14> col:14 rem 'long'
| |-TypedefDecl 0x28cf7c0 <line:105:1, line:109:5> col:5 referenced ldiv_t 'struct ldiv_t':'ldiv_t'
| | `-ElaboratedType 0x28cf770 'struct ldiv_t' sugar
| |   `-RecordType 0x28cf640 'ldiv_t'
| |     `-CXXRecord 0x28cf5a8 ''
| |-CXXRecordDecl 0x28cf828 <line:117:23, line:121:3> line:117:23 struct definition
| | |-FieldDecl 0x28cf950 <line:119:5, col:19> col:19 quot 'long long'
| | `-FieldDecl 0x28cf9a8 <line:120:5, col:19> col:19 rem 'long long'
| |-TypedefDecl 0x28cfa40 <line:117:15, line:121:5> col:5 referenced lldiv_t 'struct lldiv_t':'lldiv_t'
| | `-ElaboratedType 0x28cf9f0 'struct lldiv_t' sugar
| |   `-RecordType 0x28cf8c0 'lldiv_t'
| |     `-CXXRecord 0x28cf828 ''
| |-FunctionDecl 0x28cfba0 <line:139:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdlib.h:139:15 __ctype_get_mb_cur_max 'size_t (void) throw()' extern
| |-FunctionDecl 0x28cfd80 <line:144:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:144:15 atof 'double (const char *) throw()' extern
| | |-ParmVarDecl 0x28cfc58 <col:21, col:33> col:33 __nptr 'const char *'
| | |-NonNullAttr 0x28cfe30 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:145:46> 0
| | `-PureAttr 0x28cfe80 </usr/include/x86_64-linux-gnu/sys/cdefs.h:229:45>
| |-FunctionDecl 0x28d2bd8 </usr/include/stdlib.h:147:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:147:12 atoi 'int (const char *) throw()' extern
| | |-ParmVarDecl 0x28d2b30 <col:18, col:30> col:30 __nptr 'const char *'
| | |-NonNullAttr 0x28d2c88 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:148:46> 0
| | `-PureAttr 0x28d2cd0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:229:45>
| |-FunctionDecl 0x28d2e10 </usr/include/stdlib.h:150:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:150:17 atol 'long (const char *) throw()' extern
| | |-ParmVarDecl 0x28d2cf0 <col:23, col:35> col:35 __nptr 'const char *'
| | |-NonNullAttr 0x28d2ec0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:151:46> 0
| | `-PureAttr 0x28d2f10 </usr/include/x86_64-linux-gnu/sys/cdefs.h:229:45>
| |-FunctionDecl 0x28d3050 </usr/include/stdlib.h:157:15, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:157:36 atoll 'long long (const char *) throw()' extern
| | |-ParmVarDecl 0x28d2f30 <col:43, col:55> col:55 __nptr 'const char *'
| | |-NonNullAttr 0x28d3100 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:158:46> 0
| | `-PureAttr 0x28d3150 </usr/include/x86_64-linux-gnu/sys/cdefs.h:229:45>
| |-FunctionDecl 0x28d3320 </usr/include/stdlib.h:164:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:164:15 strtod 'double (const char *__restrict, char **__restrict) throw()' extern
| | |-ParmVarDecl 0x28d3170 <col:23, col:46> col:46 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x28d31e8 <line:165:9, col:27> col:27 __endptr 'char **__restrict'
| | `-NonNullAttr 0x28d33d8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:166:27> 0
| |-FunctionDecl 0x28d35e0 <line:172:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:172:14 strtof 'float (const char *__restrict, char **__restrict) throw()' extern
| | |-ParmVarDecl 0x28d3430 <col:22, col:45> col:45 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x28d34a8 <line:173:8, col:26> col:26 __endptr 'char **__restrict'
| | `-NonNullAttr 0x28d3698 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:173:57> 0
| |-FunctionDecl 0x28d38a0 <line:175:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:175:20 strtold 'long double (const char *__restrict, char **__restrict) throw()' extern
| | |-ParmVarDecl 0x28d36f0 <col:29, col:52> col:52 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x28d3768 <line:176:8, col:26> col:26 __endptr 'char **__restrict'
| | `-NonNullAttr 0x28d3958 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:177:27> 0
| |-FunctionDecl 0x28d3c10 <line:183:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:183:17 strtol 'long (const char *__restrict, char **__restrict, int) throw()' extern
| | |-ParmVarDecl 0x28d39b0 <col:25, col:48> col:48 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x28d3a28 <line:184:4, col:22> col:22 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x28d3a98 <col:32, col:36> col:36 __base 'int'
| | `-NonNullAttr 0x28d3cd0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:185:27> 0
| |-FunctionDecl 0x28d3f70 <line:187:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:187:26 strtoul 'unsigned long (const char *__restrict, char **__restrict, int) throw()' extern
| | |-ParmVarDecl 0x28d3d30 <col:35, col:58> col:58 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x28d3da8 <line:188:7, col:25> col:25 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x28d3e18 <col:35, col:39> col:39 __base 'int'
| | `-NonNullAttr 0x28d4030 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:189:27> 0
| |-FunctionDecl 0x28d42d0 <line:195:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:195:22 strtoq 'long long (const char *__restrict, char **__restrict, int) throw()' extern
| | |-ParmVarDecl 0x28d4090 <col:30, col:53> col:53 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x28d4108 <line:196:9, col:27> col:27 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x28d4178 <col:37, col:41> col:41 __base 'int'
| | `-NonNullAttr 0x28d4390 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:197:27> 0
| |-FunctionDecl 0x28d4630 <line:200:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:200:31 strtouq 'unsigned long long (const char *__restrict, char **__restrict, int) throw()' extern
| | |-ParmVarDecl 0x28d43f0 <col:40, col:63> col:63 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x28d4468 <line:201:12, col:30> col:30 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x28d44d8 <col:40, col:44> col:44 __base 'int'
| | `-NonNullAttr 0x28d46f0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:202:27> 0
| |-FunctionDecl 0x28d48f0 <line:209:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:209:22 strtoll 'long long (const char *__restrict, char **__restrict, int) throw()' extern
| | |-ParmVarDecl 0x28d4750 <col:31, col:54> col:54 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x28d47c8 <line:210:10, col:28> col:28 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x28d4838 <col:38, col:42> col:42 __base 'int'
| | `-NonNullAttr 0x28d49b0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:211:27> 0
| |-FunctionDecl 0x28d4c08 <line:214:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:214:31 strtoull 'unsigned long long (const char *__restrict, char **__restrict, int) throw()' extern
| | |-ParmVarDecl 0x28d4a10 <col:41, col:64> col:64 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x28d4a88 <line:215:6, col:24> col:24 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x28d4b50 <col:34, col:38> col:38 __base 'int'
| | `-NonNullAttr 0x28d4cc8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:216:27> 0
| |-CXXRecordDecl 0x28d4d10 </usr/include/xlocale.h:27:9, line:39:1> line:27:16 struct __locale_struct definition
| | |-CXXRecordDecl 0x28d4e20 <col:9, col:16> col:16 implicit struct __locale_struct
| | |-CXXRecordDecl 0x28d4eb0 parent 0x28127d0 <line:30:3, col:10> col:10 struct __locale_data
| | |-FieldDecl 0x28d50d0 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| | |-FieldDecl 0x28d5170 <line:33:3, col:29> col:29 __ctype_b 'const unsigned short *'
| | |-FieldDecl 0x28d5200 <line:34:3, col:14> col:14 __ctype_tolower 'const int *'
| | |-FieldDecl 0x28d5260 <line:35:3, col:14> col:14 __ctype_toupper 'const int *'
| | `-FieldDecl 0x28d5328 <line:38:3, col:25> col:15 __names 'const char *[13]'
| |-TypedefDecl 0x28d5420 <line:27:1, line:39:4> col:4 referenced __locale_t 'struct __locale_struct *'
| | `-PointerType 0x28d53d0 'struct __locale_struct *'
| |   `-ElaboratedType 0x28d5370 'struct __locale_struct' sugar
| |     `-RecordType 0x28d4da0 'struct __locale_struct'
| |       `-CXXRecord 0x28d4d10 '__locale_struct'
| |-TypedefDecl 0x28d54c0 <line:42:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| | `-TypedefType 0x28d5490 '__locale_t' sugar
| |   |-Typedef 0x28d5420 '__locale_t'
| |   `-PointerType 0x28d53d0 'struct __locale_struct *'
| |     `-ElaboratedType 0x28d5370 'struct __locale_struct' sugar
| |       `-RecordType 0x28d4da0 'struct __locale_struct'
| |         `-CXXRecord 0x28d4d10 '__locale_struct'
| |-FunctionDecl 0x28d5800 </usr/include/stdlib.h:239:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:239:17 strtol_l 'long (const char *__restrict, char **__restrict, int, __locale_t) throw()' extern
| | |-ParmVarDecl 0x28d5520 <col:27, col:50> col:50 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x28d5598 <line:240:6, col:24> col:24 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x28d5608 <col:34, col:38> col:38 __base 'int'
| | |-ParmVarDecl 0x28d5678 <line:241:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| | `-NonNullAttr 0x28d58c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:241:48> 0 3
| |-FunctionDecl 0x28d7740 <line:243:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:243:26 strtoul_l 'unsigned long (const char *__restrict, char **__restrict, int, __locale_t) throw()' extern
| | |-ParmVarDecl 0x28d5920 <col:37, col:60> col:60 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x28d5998 <line:244:9, col:27> col:27 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x28d5a08 <line:245:9, col:13> col:13 __base 'int'
| | |-ParmVarDecl 0x28d5a78 <col:21, col:32> col:32 __loc '__locale_t':'struct __locale_struct *'
| | `-NonNullAttr 0x28d7808 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:246:30> 0 3
| |-FunctionDecl 0x28d7b40 <line:249:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:249:22 strtoll_l 'long long (const char *__restrict, char **__restrict, int, __locale_t) throw()' extern
| | |-ParmVarDecl 0x28d7860 <col:33, col:56> col:56 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x28d78d8 <line:250:5, col:23> col:23 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x28d7948 <col:33, col:37> col:37 __base 'int'
| | |-ParmVarDecl 0x28d79b8 <line:251:5, col:16> col:16 __loc '__locale_t':'struct __locale_struct *'
| | `-NonNullAttr 0x28d7c08 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:252:30> 0 3
| |-FunctionDecl 0x28d7f40 <line:255:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:255:31 strtoull_l 'unsigned long long (const char *__restrict, char **__restrict, int, __locale_t) throw()' extern
| | |-ParmVarDecl 0x28d7c60 <col:43, col:66> col:66 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x28d7cd8 <line:256:8, col:26> col:26 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x28d7d48 <line:257:8, col:12> col:12 __base 'int'
| | |-ParmVarDecl 0x28d7db8 <col:20, col:31> col:31 __loc '__locale_t':'struct __locale_struct *'
| | `-NonNullAttr 0x28d8008 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:258:30> 0 3
| |-FunctionDecl 0x28d82c0 <line:260:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:260:15 strtod_l 'double (const char *__restrict, char **__restrict, __locale_t) throw()' extern
| | |-ParmVarDecl 0x28d8060 <col:25, col:48> col:48 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x28d80d8 <line:261:4, col:22> col:22 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x28d8148 <col:32, col:43> col:43 __loc '__locale_t':'struct __locale_struct *'
| | `-NonNullAttr 0x28d8380 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:262:30> 0 2
| |-FunctionDecl 0x28d8670 <line:264:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:264:14 strtof_l 'float (const char *__restrict, char **__restrict, __locale_t) throw()' extern
| | |-ParmVarDecl 0x28d83e0 <col:24, col:47> col:47 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x28d8458 <line:265:10, col:28> col:28 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x28d84c8 <col:38, col:49> col:49 __loc '__locale_t':'struct __locale_struct *'
| | `-NonNullAttr 0x28d8730 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:266:30> 0 2
| |-FunctionDecl 0x28d89f0 <line:268:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:268:20 strtold_l 'long double (const char *__restrict, char **__restrict, __locale_t) throw()' extern
| | |-ParmVarDecl 0x28d8790 <col:31, col:54> col:54 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x28d8808 <line:269:10, col:28> col:28 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x28d8878 <line:270:10, col:21> col:21 __loc '__locale_t':'struct __locale_struct *'
| | `-NonNullAttr 0x28d8ab0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:271:30> 0 2
| |-FunctionDecl 0x28d8c10 <line:305:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdlib.h:305:14 l64a 'char *(long) throw()' extern
| | `-ParmVarDecl 0x28d8b10 <col:20, col:29> col:29 __n 'long'
| |-FunctionDecl 0x28d8d78 <line:308:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:308:17 a64l 'long (const char *) throw()' extern
| | |-ParmVarDecl 0x28d8cd0 <col:23, col:35> col:35 __s 'const char *'
| | |-NonNullAttr 0x28d8e28 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:309:46> 0
| | `-PureAttr 0x28d8e70 </usr/include/x86_64-linux-gnu/sys/cdefs.h:229:45>
| |-LinkageSpecDecl 0x28d8eb0 <line:98:24, line:99:22> line:98:31 C
| | |-TypedefDecl 0x28d8f30 </usr/include/x86_64-linux-gnu/sys/types.h:33:1, col:18> col:18 u_char '__u_char':'unsigned char'
| | | `-TypedefType 0x28d8f00 '__u_char' sugar
| | |   |-Typedef 0x28132d8 '__u_char'
| | |   `-BuiltinType 0x2812920 'unsigned char'
| | |-TypedefDecl 0x28d8fb0 <line:34:1, col:19> col:19 u_short '__u_short':'unsigned short'
| | | `-TypedefType 0x28d8f80 '__u_short' sugar
| | |   |-Typedef 0x2813338 '__u_short'
| | |   `-BuiltinType 0x2812940 'unsigned short'
| | |-TypedefDecl 0x28d9030 <line:35:1, col:17> col:17 u_int '__u_int':'unsigned int'
| | | `-TypedefType 0x28d9000 '__u_int' sugar
| | |   |-Typedef 0x2813398 '__u_int'
| | |   `-BuiltinType 0x2812960 'unsigned int'
| | |-TypedefDecl 0x28d90b0 <line:36:1, col:18> col:18 u_long '__u_long':'unsigned long'
| | | `-TypedefType 0x28d9080 '__u_long' sugar
| | |   |-Typedef 0x28133f8 '__u_long'
| | |   `-BuiltinType 0x2812980 'unsigned long'
| | |-TypedefDecl 0x28d9110 <line:37:1, col:18> col:18 quad_t '__quad_t':'long'
| | | `-TypedefType 0x2877cd0 '__quad_t' sugar
| | |   |-Typedef 0x2881550 '__quad_t'
| | |   `-BuiltinType 0x28128e0 'long'
| | |-TypedefDecl 0x28d9190 <line:38:1, col:20> col:20 u_quad_t '__u_quad_t':'unsigned long'
| | | `-TypedefType 0x28d9160 '__u_quad_t' sugar
| | |   |-Typedef 0x28815b0 '__u_quad_t'
| | |   `-BuiltinType 0x2812980 'unsigned long'
| | |-TypedefDecl 0x28d9210 <line:39:1, col:18> col:18 fsid_t '__fsid_t':'__fsid_t'
| | | `-TypedefType 0x28d91e0 '__fsid_t' sugar
| | |   |-Typedef 0x2881be0 '__fsid_t'
| | |   `-ElaboratedType 0x2881b90 'struct __fsid_t' sugar
| | |     `-RecordType 0x2881a50 '__fsid_t'
| | |       `-CXXRecord 0x28819c0 ''
| | |-TypedefDecl 0x28d9290 <line:44:1, col:18> col:18 loff_t '__loff_t':'long'
| | | `-TypedefType 0x28d9260 '__loff_t' sugar
| | |   |-Typedef 0x2877c80 '__loff_t'
| | |   `-TypedefType 0x2877c50 '__off64_t' sugar
| | |     |-Typedef 0x2881910 '__off64_t'
| | |     `-BuiltinType 0x28128e0 'long'
| | |-TypedefDecl 0x28d9310 <line:48:1, col:17> col:17 ino_t '__ino_t':'unsigned long'
| | | `-TypedefType 0x28d92e0 '__ino_t' sugar
| | |   |-Typedef 0x2881730 '__ino_t'
| | |   `-BuiltinType 0x2812980 'unsigned long'
| | |-TypedefDecl 0x28d9390 <line:55:1, col:19> col:19 ino64_t '__ino64_t':'unsigned long'
| | | `-TypedefType 0x28d9360 '__ino64_t' sugar
| | |   |-Typedef 0x2881790 '__ino64_t'
| | |   `-BuiltinType 0x2812980 'unsigned long'
| | |-TypedefDecl 0x28d9410 <line:60:1, col:17> col:17 dev_t '__dev_t':'unsigned long'
| | | `-TypedefType 0x28d93e0 '__dev_t' sugar
| | |   |-Typedef 0x2881610 '__dev_t'
| | |   `-BuiltinType 0x2812980 'unsigned long'
| | |-TypedefDecl 0x28d9490 <line:65:1, col:17> col:17 gid_t '__gid_t':'unsigned int'
| | | `-TypedefType 0x28d9460 '__gid_t' sugar
| | |   |-Typedef 0x28816d0 '__gid_t'
| | |   `-BuiltinType 0x2812960 'unsigned int'
| | |-TypedefDecl 0x28d9510 <line:70:1, col:18> col:18 mode_t '__mode_t':'unsigned int'
| | | `-TypedefType 0x28d94e0 '__mode_t' sugar
| | |   |-Typedef 0x28817f0 '__mode_t'
| | |   `-BuiltinType 0x2812960 'unsigned int'
| | |-TypedefDecl 0x28d9590 <line:75:1, col:19> col:19 nlink_t '__nlink_t':'unsigned long'
| | | `-TypedefType 0x28d9560 '__nlink_t' sugar
| | |   |-Typedef 0x2881850 '__nlink_t'
| | |   `-BuiltinType 0x2812980 'unsigned long'
| | |-TypedefDecl 0x28d9610 <line:80:1, col:17> col:17 uid_t '__uid_t':'unsigned int'
| | | `-TypedefType 0x28d95e0 '__uid_t' sugar
| | |   |-Typedef 0x2881670 '__uid_t'
| | |   `-BuiltinType 0x2812960 'unsigned int'
| | |-TypedefDecl 0x28dc380 <line:98:1, col:17> col:17 pid_t '__pid_t':'int'
| | | `-TypedefType 0x28dc350 '__pid_t' sugar
| | |   |-Typedef 0x2881970 '__pid_t'
| | |   `-BuiltinType 0x28128c0 'int'
| | |-TypedefDecl 0x28dc400 <line:104:1, col:16> col:16 id_t '__id_t':'unsigned int'
| | | `-TypedefType 0x28dc3d0 '__id_t' sugar
| | |   |-Typedef 0x2881d78 '__id_t'
| | |   `-BuiltinType 0x2812960 'unsigned int'
| | |-TypedefDecl 0x28dc480 <line:115:1, col:19> col:19 daddr_t '__daddr_t':'int'
| | | `-TypedefType 0x28dc450 '__daddr_t' sugar
| | |   |-Typedef 0x2881ef8 '__daddr_t'
| | |   `-BuiltinType 0x28128c0 'int'
| | |-TypedefDecl 0x28dc500 <line:116:1, col:19> col:19 caddr_t '__caddr_t':'char *'
| | | `-TypedefType 0x28dc4d0 '__caddr_t' sugar
| | |   |-Typedef 0x2877db8 '__caddr_t'
| | |   `-PointerType 0x2812dc0 'char *'
| | |     `-BuiltinType 0x2812860 'char'
| | |-TypedefDecl 0x28dc580 <line:122:1, col:17> col:17 key_t '__key_t':'int'
| | | `-TypedefType 0x28dc550 '__key_t' sugar
| | |   |-Typedef 0x2881f58 '__key_t'
| | |   `-BuiltinType 0x28128c0 'int'
| | |-TypedefDecl 0x28dc600 </usr/include/time.h:59:1, col:19> col:19 clock_t '__clock_t':'long'
| | | `-TypedefType 0x28dc5d0 '__clock_t' sugar
| | |   |-Typedef 0x2881c58 '__clock_t'
| | |   `-BuiltinType 0x28128e0 'long'
| | |-TypedefDecl 0x28dc680 <line:75:1, col:18> col:18 time_t '__time_t':'long'
| | | `-TypedefType 0x28dc650 '__time_t' sugar
| | |   |-Typedef 0x2881dd8 '__time_t'
| | |   `-BuiltinType 0x28128e0 'long'
| | |-TypedefDecl 0x28dc700 <line:91:1, col:21> col:21 clockid_t '__clockid_t':'int'
| | | `-TypedefType 0x28dc6d0 '__clockid_t' sugar
| | |   |-Typedef 0x2881fb8 '__clockid_t'
| | |   `-BuiltinType 0x28128c0 'int'
| | |-TypedefDecl 0x28dc780 <line:103:1, col:19> col:19 timer_t '__timer_t':'void *'
| | | `-TypedefType 0x28dc750 '__timer_t' sugar
| | |   |-Typedef 0x2882018 '__timer_t'
| | |   `-PointerType 0x2812c90 'void *'
| | |     `-BuiltinType 0x2812820 'void'
| | |-TypedefDecl 0x28dc800 </usr/include/x86_64-linux-gnu/sys/types.h:136:1, col:22> col:22 useconds_t '__useconds_t':'unsigned int'
| | | `-TypedefType 0x28dc7d0 '__useconds_t' sugar
| | |   |-Typedef 0x2881e38 '__useconds_t'
| | |   `-BuiltinType 0x2812960 'unsigned int'
| | |-TypedefDecl 0x28dc880 <line:140:1, col:23> col:23 suseconds_t '__suseconds_t':'long'
| | | `-TypedefType 0x28dc850 '__suseconds_t' sugar
| | |   |-Typedef 0x2881e98 '__suseconds_t'
| | |   `-BuiltinType 0x28128e0 'long'
| | |-TypedefDecl 0x28dc8e0 <line:150:1, col:27> col:27 ulong 'unsigned long'
| | | `-BuiltinType 0x2812980 'unsigned long'
| | |-TypedefDecl 0x28dc940 <line:151:1, col:28> col:28 ushort 'unsigned short'
| | | `-BuiltinType 0x2812940 'unsigned short'
| | |-TypedefDecl 0x28dc9a0 <line:152:1, col:22> col:22 uint 'unsigned int'
| | | `-BuiltinType 0x2812960 'unsigned int'
| | |-TypedefDecl 0x28dca10 <line:188:3, <scratch space>:8:1> col:1 int8_t 'signed char'
| | | |-BuiltinType 0x2812880 'signed char'
| | | `-ModeAttr 0x28dca70 </usr/include/x86_64-linux-gnu/sys/types.h:188:42, col:56> __QI__
| | |-TypedefDecl 0x28dcad0 <col:3, <scratch space>:10:1> col:1 int16_t 'short'
| | | |-BuiltinType 0x28128a0 'short'
| | | `-ModeAttr 0x28dcb30 </usr/include/x86_64-linux-gnu/sys/types.h:188:42, col:56> __HI__
| | |-TypedefDecl 0x28dcb90 <col:3, <scratch space>:12:1> col:1 referenced int32_t 'int'
| | | |-BuiltinType 0x28128c0 'int'
| | | `-ModeAttr 0x28dcbf0 </usr/include/x86_64-linux-gnu/sys/types.h:188:42, col:56> __SI__
| | |-TypedefDecl 0x28dcc50 <col:3, <scratch space>:14:1> col:1 int64_t 'long'
| | | |-BuiltinType 0x28128e0 'long'
| | | `-ModeAttr 0x28dccb0 </usr/include/x86_64-linux-gnu/sys/types.h:188:42, col:56> __DI__
| | |-TypedefDecl 0x28dcd10 <line:190:3, <scratch space>:16:1> col:1 u_int8_t 'unsigned char'
| | | |-BuiltinType 0x2812920 'unsigned char'
| | | `-ModeAttr 0x28dcd70 </usr/include/x86_64-linux-gnu/sys/types.h:190:53, col:67> __QI__
| | |-TypedefDecl 0x28dcdd0 <col:3, <scratch space>:18:1> col:1 u_int16_t 'unsigned short'
| | | |-BuiltinType 0x2812940 'unsigned short'
| | | `-ModeAttr 0x28dce30 </usr/include/x86_64-linux-gnu/sys/types.h:190:53, col:67> __HI__
| | |-TypedefDecl 0x28dce90 <col:3, <scratch space>:20:1> col:1 u_int32_t 'unsigned int'
| | | |-BuiltinType 0x2812960 'unsigned int'
| | | `-ModeAttr 0x28dcef0 </usr/include/x86_64-linux-gnu/sys/types.h:190:53, col:67> __SI__
| | |-TypedefDecl 0x28dcf50 <col:3, <scratch space>:22:1> col:1 u_int64_t 'unsigned long'
| | | |-BuiltinType 0x2812980 'unsigned long'
| | | `-ModeAttr 0x28dcfb0 </usr/include/x86_64-linux-gnu/sys/types.h:190:53, col:67> __DI__
| | |-TypedefDecl 0x28dd010 <line:205:1, col:13> col:13 register_t 'long'
| | | |-BuiltinType 0x28128e0 'long'
| | | `-ModeAttr 0x28dd070 <col:40, col:58> __word__
| | |-TypedefDecl 0x28dd0c0 </usr/include/x86_64-linux-gnu/bits/sigset.h:22:1, col:13> col:13 __sig_atomic_t 'int'
| | | `-BuiltinType 0x28128c0 'int'
| | |-CXXRecordDecl 0x28dd110 <line:27:9, line:30:3> line:27:9 struct definition
| | | `-FieldDecl 0x28ed698 <line:29:5, col:43> col:23 __val 'unsigned long [16]'
| | |-TypedefDecl 0x28ed730 <line:27:1, line:30:5> col:5 referenced __sigset_t 'struct __sigset_t':'__sigset_t'
| | | `-ElaboratedType 0x28ed6e0 'struct __sigset_t' sugar
| | |   `-RecordType 0x28dd1a0 '__sigset_t'
| | |     `-CXXRecord 0x28dd110 ''
| | |-TypedefDecl 0x28ed7d0 </usr/include/x86_64-linux-gnu/sys/select.h:37:1, col:20> col:20 sigset_t '__sigset_t':'__sigset_t'
| | | `-TypedefType 0x28ed7a0 '__sigset_t' sugar
| | |   |-Typedef 0x28ed730 '__sigset_t'
| | |   `-ElaboratedType 0x28ed6e0 'struct __sigset_t' sugar
| | |     `-RecordType 0x28dd1a0 '__sigset_t'
| | |       `-CXXRecord 0x28dd110 ''
| | |-CXXRecordDecl 0x28ed820 </usr/include/time.h:120:1, line:124:3> line:120:8 struct timespec definition
| | | |-CXXRecordDecl 0x28ed930 <col:1, col:8> col:8 implicit struct timespec
| | | |-FieldDecl 0x28ed9d0 <line:122:5, col:14> col:14 tv_sec '__time_t':'long'
| | | `-FieldDecl 0x28eda50 <line:123:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
| | |-CXXRecordDecl 0x28eda98 </usr/include/x86_64-linux-gnu/bits/time.h:30:1, line:34:3> line:30:8 struct timeval definition
| | | |-CXXRecordDecl 0x28edbb0 <col:1, col:8> col:8 implicit struct timeval
| | | |-FieldDecl 0x28edc50 <line:32:5, col:14> col:14 tv_sec '__time_t':'long'
| | | `-FieldDecl 0x28edca8 <line:33:5, col:19> col:19 tv_usec '__suseconds_t':'long'
| | |-TypedefDecl 0x28edd00 </usr/include/x86_64-linux-gnu/sys/select.h:54:1, col:18> col:18 referenced __fd_mask 'long'
| | | `-BuiltinType 0x28128e0 'long'
| | |-CXXRecordDecl 0x28edd50 <line:64:9, line:75:3> line:64:9 struct definition
| | | `-FieldDecl 0x28ee048 <line:69:5, col:48> col:15 fds_bits '__fd_mask [16]'
| | |-TypedefDecl 0x28ee0e0 <line:64:1, line:75:5> col:5 referenced fd_set 'struct fd_set':'fd_set'
| | | `-ElaboratedType 0x28ee090 'struct fd_set' sugar
| | |   `-RecordType 0x28edde0 'fd_set'
| | |     `-CXXRecord 0x28edd50 ''
| | |-TypedefDecl 0x28ee158 <line:82:1, col:19> col:19 fd_mask '__fd_mask':'long'
| | | `-TypedefType 0x28ede60 '__fd_mask' sugar
| | |   |-Typedef 0x28edd00 '__fd_mask'
| | |   `-BuiltinType 0x28128e0 'long'
| | |-LinkageSpecDecl 0x28ee1d8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:98:24, line:99:22> line:98:31 C
| | | |-FunctionDecl 0x286c558 </usr/include/x86_64-linux-gnu/sys/select.h:106:1, line:109:42> line:106:12 select 'int (int, fd_set *__restrict, fd_set *__restrict, fd_set *__restrict, struct timeval *__restrict)' extern
| | | | |-ParmVarDecl 0x28ee238 <col:20, col:24> col:24 __nfds 'int'
| | | | |-ParmVarDecl 0x28ee328 <col:32, col:51> col:51 __readfds 'fd_set *__restrict'
| | | | |-ParmVarDecl 0x28ee398 <line:107:6, col:25> col:25 __writefds 'fd_set *__restrict'
| | | | |-ParmVarDecl 0x28ee408 <line:108:6, col:25> col:25 __exceptfds 'fd_set *__restrict'
| | | | `-ParmVarDecl 0x28ee520 <line:109:6, col:33> col:33 __timeout 'struct timeval *__restrict'
| | | `-FunctionDecl 0x286cae0 <line:118:1, line:122:45> line:118:12 pselect 'int (int, fd_set *__restrict, fd_set *__restrict, fd_set *__restrict, const struct timespec *__restrict, const __sigset_t *__restrict)' extern
| | |   |-ParmVarDecl 0x286c638 <col:21, col:25> col:25 __nfds 'int'
| | |   |-ParmVarDecl 0x286c6a8 <col:33, col:52> col:52 __readfds 'fd_set *__restrict'
| | |   |-ParmVarDecl 0x286c718 <line:119:7, col:26> col:26 __writefds 'fd_set *__restrict'
| | |   |-ParmVarDecl 0x286c788 <line:120:7, col:26> col:26 __exceptfds 'fd_set *__restrict'
| | |   |-ParmVarDecl 0x286c8a0 <line:121:7, col:41> col:41 __timeout 'const struct timespec *__restrict'
| | |   `-ParmVarDecl 0x286c968 <line:122:7, col:36> col:36 __sigmask 'const __sigset_t *__restrict'
| | |-LinkageSpecDecl 0x286cbe8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:98:24, line:99:22> line:98:31 C
| | | |-FunctionDecl 0x286cd50 </usr/include/x86_64-linux-gnu/sys/sysmacros.h:27:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:236:56> /usr/include/x86_64-linux-gnu/sys/sysmacros.h:27:21 gnu_dev_major 'unsigned int (unsigned long long) throw()' extern
| | | | |-ParmVarDecl 0x286cc48 <col:36, col:59> col:59 __dev 'unsigned long long'
| | | | `-ConstAttr 0x286ce00 </usr/include/x86_64-linux-gnu/sys/cdefs.h:236:46>
| | | |-FunctionDecl 0x286ced0 </usr/include/x86_64-linux-gnu/sys/sysmacros.h:30:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:236:56> /usr/include/x86_64-linux-gnu/sys/sysmacros.h:30:21 gnu_dev_minor 'unsigned int (unsigned long long) throw()' extern
| | | | |-ParmVarDecl 0x286ce48 <col:36, col:59> col:59 __dev 'unsigned long long'
| | | | `-ConstAttr 0x286cf80 </usr/include/x86_64-linux-gnu/sys/cdefs.h:236:46>
| | | `-FunctionDecl 0x286d150 </usr/include/x86_64-linux-gnu/sys/sysmacros.h:33:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:236:56> /usr/include/x86_64-linux-gnu/sys/sysmacros.h:33:31 gnu_dev_makedev 'unsigned long long (unsigned int, unsigned int) throw()' extern
| | |   |-ParmVarDecl 0x286cfc8 <col:48, col:61> col:61 __major 'unsigned int'
| | |   |-ParmVarDecl 0x286d038 <line:34:13, col:26> col:26 __minor 'unsigned int'
| | |   `-ConstAttr 0x286d208 </usr/include/x86_64-linux-gnu/sys/cdefs.h:236:46>
| | |-TypedefDecl 0x286d270 </usr/include/x86_64-linux-gnu/sys/types.h:228:1, col:21> col:21 blksize_t '__blksize_t':'long'
| | | `-TypedefType 0x286d240 '__blksize_t' sugar
| | |   |-Typedef 0x2882078 '__blksize_t'
| | |   `-BuiltinType 0x28128e0 'long'
| | |-TypedefDecl 0x286d2f0 <line:235:1, col:20> col:20 blkcnt_t '__blkcnt_t':'long'
| | | `-TypedefType 0x286d2c0 '__blkcnt_t' sugar
| | |   |-Typedef 0x28820d8 '__blkcnt_t'
| | |   `-BuiltinType 0x28128e0 'long'
| | |-TypedefDecl 0x286d370 <line:239:1, col:22> col:22 fsblkcnt_t '__fsblkcnt_t':'unsigned long'
| | | `-TypedefType 0x286d340 '__fsblkcnt_t' sugar
| | |   |-Typedef 0x2882198 '__fsblkcnt_t'
| | |   `-BuiltinType 0x2812980 'unsigned long'
| | |-TypedefDecl 0x286d3f0 <line:243:1, col:22> col:22 fsfilcnt_t '__fsfilcnt_t':'unsigned long'
| | | `-TypedefType 0x286d3c0 '__fsfilcnt_t' sugar
| | |   |-Typedef 0x2882258 '__fsfilcnt_t'
| | |   `-BuiltinType 0x2812980 'unsigned long'
| | |-TypedefDecl 0x286d470 <line:262:1, col:22> col:22 blkcnt64_t '__blkcnt64_t':'long'
| | | `-TypedefType 0x286d440 '__blkcnt64_t' sugar
| | |   |-Typedef 0x2882138 '__blkcnt64_t'
| | |   `-BuiltinType 0x28128e0 'long'
| | |-TypedefDecl 0x28f8870 <line:263:1, col:24> col:24 fsblkcnt64_t '__fsblkcnt64_t':'unsigned long'
| | | `-TypedefType 0x286d4c0 '__fsblkcnt64_t' sugar
| | |   |-Typedef 0x28821f8 '__fsblkcnt64_t'
| | |   `-BuiltinType 0x2812980 'unsigned long'
| | |-TypedefDecl 0x28f88f0 <line:264:1, col:24> col:24 fsfilcnt64_t '__fsfilcnt64_t':'unsigned long'
| | | `-TypedefType 0x28f88c0 '__fsfilcnt64_t' sugar
| | |   |-Typedef 0x2877a80 '__fsfilcnt64_t'
| | |   `-BuiltinType 0x2812980 'unsigned long'
| | |-TypedefDecl 0x28f8950 </usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:60:1, col:27> col:27 pthread_t 'unsigned long'
| | | `-BuiltinType 0x2812980 'unsigned long'
| | |-CXXRecordDecl 0x28f89a0 <line:63:1, line:67:1> line:63:7 union pthread_attr_t definition
| | | |-CXXRecordDecl 0x28f8ab0 <col:1, col:7> col:7 implicit union pthread_attr_t
| | | |-FieldDecl 0x28f8bb8 <line:65:3, col:38> col:8 __size 'char [56]'
| | | `-FieldDecl 0x28f8c10 <line:66:3, col:12> col:12 __align 'long'
| | |-TypedefDecl 0x28f8cb0 <line:69:1, col:30> col:30 pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| | | `-ElaboratedType 0x28f8c60 'union pthread_attr_t' sugar
| | |   `-RecordType 0x28f8a30 'union pthread_attr_t'
| | |     `-CXXRecord 0x28f89a0 'pthread_attr_t'
| | |-CXXRecordDecl 0x28f8d00 <line:75:9, line:79:1> line:75:16 struct __pthread_internal_list definition
| | | |-CXXRecordDecl 0x28f8e10 <col:9, col:16> col:16 implicit struct __pthread_internal_list
| | | |-FieldDecl 0x28f8f50 <line:77:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| | | `-FieldDecl 0x28f8fc0 <line:78:3, col:35> col:35 __next 'struct __pthread_internal_list *'
| | |-TypedefDecl 0x28f9028 <line:75:1, line:79:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| | | `-ElaboratedType 0x28f8ea0 'struct __pthread_internal_list' sugar
| | |   `-RecordType 0x28f8d90 'struct __pthread_internal_list'
| | |     `-CXXRecord 0x28f8d00 '__pthread_internal_list'
| | |-CXXRecordDecl 0x28f9090 <line:90:9, line:128:1> line:90:9 union definition
| | | |-CXXRecordDecl 0x28f91a0 <line:92:3, line:125:3> line:92:10 struct __pthread_mutex_s definition
| | | | |-CXXRecordDecl 0x28f92b0 <col:3, col:10> col:10 implicit struct __pthread_mutex_s
| | | | |-FieldDecl 0x28f9350 <line:94:5, col:9> col:9 __lock 'int'
| | | | |-FieldDecl 0x28f93a8 <line:95:5, col:18> col:18 __count 'unsigned int'
| | | | |-FieldDecl 0x28f9400 <line:96:5, col:9> col:9 __owner 'int'
| | | | |-FieldDecl 0x28f9458 <line:98:5, col:18> col:18 __nusers 'unsigned int'
| | | | |-FieldDecl 0x28f94b0 <line:102:5, col:9> col:9 __kind 'int'
| | | | |-FieldDecl 0x28f9508 <line:104:5, col:11> col:11 __spins 'short'
| | | | |-FieldDecl 0x28f9560 <line:105:5, col:11> col:11 __elision 'short'
| | | | `-FieldDecl 0x28f95e0 <line:106:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| | | |-FieldDecl 0x28f9680 <line:92:3, line:125:5> col:5 __data 'struct __pthread_mutex_s':'struct pthread_mutex_t::__pthread_mutex_s'
| | | |-FieldDecl 0x28f9758 <line:126:3, col:39> col:8 __size 'char [40]'
| | | `-FieldDecl 0x28f97b0 <line:127:3, col:12> col:12 __align 'long'
| | |-TypedefDecl 0x28fdd40 <line:90:1, line:128:3> col:3 pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| | | `-ElaboratedType 0x28fdcf0 'union pthread_mutex_t' sugar
| | |   `-RecordType 0x28f9120 'pthread_mutex_t'
| | |     `-CXXRecord 0x28f9090 ''
| | |-CXXRecordDecl 0x28fdda8 <line:130:9, line:134:1> line:130:9 union definition
| | | |-FieldDecl 0x28fdf00 <line:132:3, col:43> col:8 __size 'char [4]'
| | | `-FieldDecl 0x28fdf58 <line:133:3, col:7> col:7 __align 'int'
| | |-TypedefDecl 0x28fdff0 <line:130:1, line:134:3> col:3 pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| | | `-ElaboratedType 0x28fdfa0 'union pthread_mutexattr_t' sugar
| | |   `-RecordType 0x28fde40 'pthread_mutexattr_t'
| | |     `-CXXRecord 0x28fdda8 ''
| | |-CXXRecordDecl 0x28fe058 <line:139:9, line:154:1> line:139:9 union definition
| | | |-CXXRecordDecl 0x28fe170 <line:141:3, line:151:3> line:141:3 struct definition
| | | | |-FieldDecl 0x28fe290 <line:143:5, col:9> col:9 __lock 'int'
| | | | |-FieldDecl 0x28fe2e8 <line:144:5, col:18> col:18 __futex 'unsigned int'
| | | | |-FieldDecl 0x28fe340 <line:145:19, col:42> col:42 __total_seq 'unsigned long long'
| | | | |-FieldDecl 0x28fe398 <line:146:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | | | |-FieldDecl 0x28fe3f0 <line:147:19, col:42> col:42 __woken_seq 'unsigned long long'
| | | | |-FieldDecl 0x28fe448 <line:148:5, col:11> col:11 __mutex 'void *'
| | | | |-FieldDecl 0x28fe4a0 <line:149:5, col:18> col:18 __nwaiters 'unsigned int'
| | | | `-FieldDecl 0x28fe4f8 <line:150:5, col:18> col:18 __broadcast_seq 'unsigned int'
| | | |-FieldDecl 0x28fe590 <line:141:3, line:151:5> col:5 __data 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:141:3)':'struct pthread_cond_t::(anonymous at /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:141:3)'
| | | |-FieldDecl 0x28fe668 <line:152:3, col:38> col:8 __size 'char [48]'
| | | `-FieldDecl 0x28fe6c0 <line:153:17, col:31> col:31 __align 'long long'
| | |-TypedefDecl 0x28fe840 <line:139:1, line:154:3> col:3 pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| | | `-ElaboratedType 0x28fe7f0 'union pthread_cond_t' sugar
| | |   `-RecordType 0x28fe0f0 'pthread_cond_t'
| | |     `-CXXRecord 0x28fe058 ''
| | |-CXXRecordDecl 0x28fe8a8 <line:156:9, line:160:1> line:156:9 union definition
| | | |-FieldDecl 0x28fea00 <line:158:3, col:42> col:8 __size 'char [4]'
| | | `-FieldDecl 0x28fea58 <line:159:3, col:7> col:7 __align 'int'
| | |-TypedefDecl 0x28feaf0 <line:156:1, line:160:3> col:3 pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| | | `-ElaboratedType 0x28feaa0 'union pthread_condattr_t' sugar
| | |   `-RecordType 0x28fe940 'pthread_condattr_t'
| | |     `-CXXRecord 0x28fe8a8 ''
| | |-TypedefDecl 0x28ff7d0 <line:164:1, col:22> col:22 pthread_key_t 'unsigned int'
| | | `-BuiltinType 0x2812960 'unsigned int'
| | |-TypedefDecl 0x28ff830 <line:168:1, col:13> col:13 pthread_once_t 'int'
| | | `-BuiltinType 0x28128c0 'int'
| | |-CXXRecordDecl 0x28ff880 <line:174:9, line:222:1> line:174:9 union definition
| | | |-CXXRecordDecl 0x28ff990 <line:177:3, line:200:3> line:177:3 struct definition
| | | | |-FieldDecl 0x28ffab0 <line:179:5, col:9> col:9 __lock 'int'
| | | | |-FieldDecl 0x28ffb08 <line:180:5, col:18> col:18 __nr_readers 'unsigned int'
| | | | |-FieldDecl 0x28ffb60 <line:181:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | | | |-FieldDecl 0x28ffbb8 <line:182:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | | | |-FieldDecl 0x28ffc10 <line:183:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | | | |-FieldDecl 0x28ffc68 <line:184:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | | | |-FieldDecl 0x28ffcc0 <line:185:5, col:9> col:9 __writer 'int'
| | | | |-FieldDecl 0x28ffd18 <line:186:5, col:9> col:9 __shared 'int'
| | | | |-FieldDecl 0x28ffd70 <line:187:5, col:17> col:17 __rwelision 'signed char'
| | | | |-FieldDecl 0x28ffe38 <line:192:5, col:27> col:19 __pad1 'unsigned char [7]'
| | | | |-FieldDecl 0x28ffe90 <line:195:5, col:23> col:23 __pad2 'unsigned long'
| | | | `-FieldDecl 0x28ffee8 <line:198:5, col:18> col:18 __flags 'unsigned int'
| | | |-FieldDecl 0x28fff80 <line:177:3, line:200:5> col:5 __data 'struct (anonymous struct at /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:177:3)':'struct pthread_rwlock_t::(anonymous at /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:177:3)'
| | | |-FieldDecl 0x2900020 <line:220:3, col:40> col:8 __size 'char [56]'
| | | `-FieldDecl 0x2900078 <line:221:3, col:12> col:12 __align 'long'
| | |-TypedefDecl 0x2900210 <line:174:1, line:222:3> col:3 pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| | | `-ElaboratedType 0x29001c0 'union pthread_rwlock_t' sugar
| | |   `-RecordType 0x28ff910 'pthread_rwlock_t'
| | |     `-CXXRecord 0x28ff880 ''
| | |-CXXRecordDecl 0x2900278 <line:224:9, line:228:1> line:224:9 union definition
| | | |-FieldDecl 0x2900408 <line:226:3, col:44> col:8 __size 'char [8]'
| | | `-FieldDecl 0x2900460 <line:227:3, col:12> col:12 __align 'long'
| | |-TypedefDecl 0x2900500 <line:224:1, line:228:3> col:3 pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| | | `-ElaboratedType 0x29004b0 'union pthread_rwlockattr_t' sugar
| | |   `-RecordType 0x2900310 'pthread_rwlockattr_t'
| | |     `-CXXRecord 0x2900278 ''
| | |-TypedefDecl 0x2900578 <line:234:1, col:22> col:22 pthread_spinlock_t 'volatile int'
| | | `-QualType 0x28128c4 'volatile int' volatile
| | |   `-BuiltinType 0x28128c0 'int'
| | |-CXXRecordDecl 0x29005c8 <line:239:9, line:243:1> line:239:9 union definition
| | | |-FieldDecl 0x2900758 <line:241:3, col:41> col:8 __size 'char [32]'
| | | `-FieldDecl 0x29026e0 <line:242:3, col:12> col:12 __align 'long'
| | |-TypedefDecl 0x2902780 <line:239:1, line:243:3> col:3 pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| | | `-ElaboratedType 0x2902730 'union pthread_barrier_t' sugar
| | |   `-RecordType 0x2900660 'pthread_barrier_t'
| | |     `-CXXRecord 0x29005c8 ''
| | |-CXXRecordDecl 0x29027e8 <line:245:9, line:249:1> line:245:9 union definition
| | | |-FieldDecl 0x2902940 <line:247:3, col:45> col:8 __size 'char [4]'
| | | `-FieldDecl 0x2902998 <line:248:3, col:7> col:7 __align 'int'
| | `-TypedefDecl 0x2902a30 <line:245:1, line:249:3> col:3 pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| |   `-ElaboratedType 0x29029e0 'union pthread_barrierattr_t' sugar
| |     `-RecordType 0x2902880 'pthread_barrierattr_t'
| |       `-CXXRecord 0x29027e8 ''
| |-FunctionDecl 0x2902b90 </usr/include/stdlib.h:321:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdlib.h:321:17 random 'long (void) throw()' extern
| |-FunctionDecl 0x2902d50 <line:324:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdlib.h:324:13 srandom 'void (unsigned int) throw()' extern
| | `-ParmVarDecl 0x2902c48 <col:22, col:35> col:35 __seed 'unsigned int'
| |-FunctionDecl 0x2903040 <line:330:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:330:14 initstate 'char *(unsigned int, char *, size_t) throw()' extern
| | |-ParmVarDecl 0x2902e10 <col:25, col:38> col:38 __seed 'unsigned int'
| | |-ParmVarDecl 0x2902e80 <col:46, col:52> col:52 __statebuf 'char *'
| | |-ParmVarDecl 0x2902ef0 <line:331:4, col:11> col:11 __statelen 'size_t':'unsigned long'
| | `-NonNullAttr 0x2903100 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:331:44> 1
| |-FunctionDecl 0x2903208 <line:335:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:335:14 setstate 'char *(char *) throw()' extern
| | |-ParmVarDecl 0x2903160 <col:24, col:30> col:30 __statebuf 'char *'
| | `-NonNullAttr 0x29032b8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:335:63> 0
| |-CXXRecordDecl 0x2903300 <line:343:1, line:352:3> line:343:8 struct random_data definition
| | |-CXXRecordDecl 0x2903410 <col:1, col:8> col:8 implicit struct random_data
| | |-FieldDecl 0x29034f8 <line:345:5, col:14> col:14 fptr 'int32_t *'
| | |-FieldDecl 0x2903550 <line:346:5, col:14> col:14 rptr 'int32_t *'
| | |-FieldDecl 0x29035a8 <line:347:5, col:14> col:14 state 'int32_t *'
| | |-FieldDecl 0x2903600 <line:348:5, col:9> col:9 rand_type 'int'
| | |-FieldDecl 0x2903658 <line:349:5, col:9> col:9 rand_deg 'int'
| | |-FieldDecl 0x2903b60 <line:350:5, col:9> col:9 rand_sep 'int'
| | `-FieldDecl 0x2903bb8 <line:351:5, col:14> col:14 end_ptr 'int32_t *'
| |-FunctionDecl 0x2903e70 <line:354:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:354:12 random_r 'int (struct random_data *__restrict, int32_t *__restrict) throw()' extern
| | |-ParmVarDecl 0x2903cb0 <col:22, col:53> col:53 __buf 'struct random_data *__restrict'
| | |-ParmVarDecl 0x2903d20 <line:355:8, col:28> col:28 __result 'int32_t *__restrict'
| | `-NonNullAttr 0x2903f28 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:355:62> 0 1
| |-FunctionDecl 0x2904140 <line:357:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:357:12 srandom_r 'int (unsigned int, struct random_data *) throw()' extern
| | |-ParmVarDecl 0x2903f80 <col:23, col:36> col:36 __seed 'unsigned int'
| | |-ParmVarDecl 0x2904008 <col:44, col:64> col:64 __buf 'struct random_data *'
| | `-NonNullAttr 0x29041f8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:358:27> 1
| |-FunctionDecl 0x2904540 <line:360:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:360:12 initstate_r 'int (unsigned int, char *__restrict, size_t, struct random_data *__restrict) throw()' extern
| | |-ParmVarDecl 0x2904250 <col:25, col:38> col:38 __seed 'unsigned int'
| | |-ParmVarDecl 0x29042c0 <col:46, col:63> col:63 __statebuf 'char *__restrict'
| | |-ParmVarDecl 0x2904330 <line:361:4, col:11> col:11 __statelen 'size_t':'unsigned long'
| | |-ParmVarDecl 0x29043b8 <line:362:4, col:35> col:35 __buf 'struct random_data *__restrict'
| | `-NonNullAttr 0x2904608 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:363:30> 1 3
| |-FunctionDecl 0x2904840 <line:365:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:365:12 setstate_r 'int (char *__restrict, struct random_data *__restrict) throw()' extern
| | |-ParmVarDecl 0x2904660 <col:24, col:41> col:41 __statebuf 'char *__restrict'
| | |-ParmVarDecl 0x29046e8 <line:366:10, col:41> col:41 __buf 'struct random_data *__restrict'
| | `-NonNullAttr 0x29048f8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:367:30> 0 1
| |-FunctionDecl 0x2904a00 <line:374:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdlib.h:374:12 used rand 'int (void) throw()' extern
| |-FunctionDecl 0x2904b70 <line:376:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdlib.h:376:13 srand 'void (unsigned int) throw()' extern
| | `-ParmVarDecl 0x2904ab8 <col:20, col:33> col:33 __seed 'unsigned int'
| |-FunctionDecl 0x2904d60 <line:381:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdlib.h:381:12 rand_r 'int (unsigned int *) throw()' extern
| | `-ParmVarDecl 0x2904c60 <col:20, col:34> col:34 __seed 'unsigned int *'
| |-FunctionDecl 0x2904f00 <line:389:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdlib.h:389:15 drand48 'double (void) throw()' extern
| |-FunctionDecl 0x29051b0 <line:390:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:390:15 erand48 'double (unsigned short *) throw()' extern
| | |-ParmVarDecl 0x2905090 <col:24, col:52> col:43 __xsubi 'unsigned short *':'unsigned short *'
| | `-NonNullAttr 0x2905260 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:390:76> 0
| |-FunctionDecl 0x2905340 <line:393:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdlib.h:393:17 lrand48 'long (void) throw()' extern
| |-FunctionDecl 0x2905550 <line:394:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:394:17 nrand48 'long (unsigned short *) throw()' extern
| | |-ParmVarDecl 0x2905428 <col:26, col:54> col:45 __xsubi 'unsigned short *':'unsigned short *'
| | `-NonNullAttr 0x2905600 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:395:27> 0
| |-FunctionDecl 0x29056e0 <line:398:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdlib.h:398:17 mrand48 'long (void) throw()' extern
| |-FunctionDecl 0x2905870 <line:399:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:399:17 jrand48 'long (unsigned short *) throw()' extern
| | |-ParmVarDecl 0x29057c8 <col:26, col:54> col:45 __xsubi 'unsigned short *':'unsigned short *'
| | `-NonNullAttr 0x2905920 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:400:27> 0
| |-FunctionDecl 0x2905a80 <line:403:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdlib.h:403:13 srand48 'void (long) throw()' extern
| | `-ParmVarDecl 0x2905980 <col:22, col:31> col:31 __seedval 'long'
| |-FunctionDecl 0x2905ca8 <line:404:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:404:28 seed48 'unsigned short *(unsigned short *) throw()' extern
| | |-ParmVarDecl 0x2905b80 <col:36, col:66> col:55 __seed16v 'unsigned short *':'unsigned short *'
| | `-NonNullAttr 0x2905d58 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:405:27> 0
| |-FunctionDecl 0x2905f70 <line:406:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:406:13 lcong48 'void (unsigned short *) throw()' extern
| | |-ParmVarDecl 0x2905e50 <col:22, col:50> col:41 __param 'unsigned short *':'unsigned short *'
| | `-NonNullAttr 0x2906020 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:406:74> 0
| |-CXXRecordDecl 0x2906070 <line:412:1, line:420:3> line:412:8 struct drand48_data definition
| | |-CXXRecordDecl 0x2906180 <col:1, col:8> col:8 implicit struct drand48_data
| | |-FieldDecl 0x2906250 <line:414:5, col:29> col:24 __x 'unsigned short [3]'
| | |-FieldDecl 0x29062d8 <line:415:5, col:33> col:24 __old_x 'unsigned short [3]'
| | |-FieldDecl 0x2906330 <line:416:5, col:24> col:24 __c 'unsigned short'
| | |-FieldDecl 0x2906388 <line:417:5, col:24> col:24 __init 'unsigned short'
| | `-FieldDecl 0x29063e0 <line:418:19, col:42> col:42 __a 'unsigned long long'
| |-FunctionDecl 0x29066d0 <line:423:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:423:12 drand48_r 'int (struct drand48_data *__restrict, double *__restrict) throw()' extern
| | |-ParmVarDecl 0x29064e0 <col:23, col:55> col:55 __buffer 'struct drand48_data *__restrict'
| | |-ParmVarDecl 0x2906580 <line:424:9, col:28> col:28 __result 'double *__restrict'
| | `-NonNullAttr 0x2906788 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:424:62> 0 1
| |-FunctionDecl 0x2906a80 <line:425:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:425:12 erand48_r 'int (unsigned short *, struct drand48_data *__restrict, double *__restrict) throw()' extern
| | |-ParmVarDecl 0x2906810 <col:23, col:51> col:42 __xsubi 'unsigned short *':'unsigned short *'
| | |-ParmVarDecl 0x2906898 <line:426:9, col:41> col:41 __buffer 'struct drand48_data *__restrict'
| | |-ParmVarDecl 0x2906910 <line:427:9, col:28> col:28 __result 'double *__restrict'
| | `-NonNullAttr 0x2906b40 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:427:62> 0 1
| |-FunctionDecl 0x29071c0 <line:430:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:430:12 lrand48_r 'int (struct drand48_data *__restrict, long *__restrict) throw()' extern
| | |-ParmVarDecl 0x2906ff0 <col:23, col:55> col:55 __buffer 'struct drand48_data *__restrict'
| | |-ParmVarDecl 0x2907068 <line:431:9, col:30> col:30 __result 'long *__restrict'
| | `-NonNullAttr 0x2907278 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:432:30> 0 1
| |-FunctionDecl 0x2907570 <line:433:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:433:12 nrand48_r 'int (unsigned short *, struct drand48_data *__restrict, long *__restrict) throw()' extern
| | |-ParmVarDecl 0x2907300 <col:23, col:51> col:42 __xsubi 'unsigned short *':'unsigned short *'
| | |-ParmVarDecl 0x2907388 <line:434:9, col:41> col:41 __buffer 'struct drand48_data *__restrict'
| | |-ParmVarDecl 0x2907400 <line:435:9, col:30> col:30 __result 'long *__restrict'
| | `-NonNullAttr 0x2907630 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:436:30> 0 1
| |-FunctionDecl 0x29077f0 <line:439:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:439:12 mrand48_r 'int (struct drand48_data *__restrict, long *__restrict) throw()' extern
| | |-ParmVarDecl 0x29076a8 <col:23, col:55> col:55 __buffer 'struct drand48_data *__restrict'
| | |-ParmVarDecl 0x2907720 <line:440:9, col:30> col:30 __result 'long *__restrict'
| | `-NonNullAttr 0x29078a8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:441:30> 0 1
| |-FunctionDecl 0x2907b08 <line:442:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:442:12 jrand48_r 'int (unsigned short *, struct drand48_data *__restrict, long *__restrict) throw()' extern
| | |-ParmVarDecl 0x2907930 <col:23, col:51> col:42 __xsubi 'unsigned short *':'unsigned short *'
| | |-ParmVarDecl 0x29079b8 <line:443:9, col:41> col:41 __buffer 'struct drand48_data *__restrict'
| | |-ParmVarDecl 0x2907a30 <line:444:9, col:30> col:30 __result 'long *__restrict'
| | `-NonNullAttr 0x2907bc8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:445:30> 0 1
| |-FunctionDecl 0x2907de0 <line:448:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:448:12 srand48_r 'int (long, struct drand48_data *) throw()' extern
| | |-ParmVarDecl 0x2907c20 <col:23, col:32> col:32 __seedval 'long'
| | |-ParmVarDecl 0x2907ca8 <col:43, col:64> col:64 __buffer 'struct drand48_data *'
| | `-NonNullAttr 0x2907e98 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:449:27> 1
| |-FunctionDecl 0x29083b0 <line:451:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:451:12 seed48_r 'int (unsigned short *, struct drand48_data *) throw()' extern
| | |-ParmVarDecl 0x2907f20 <col:22, col:52> col:41 __seed16v 'unsigned short *':'unsigned short *'
| | |-ParmVarDecl 0x2908258 <line:452:8, col:29> col:29 __buffer 'struct drand48_data *'
| | `-NonNullAttr 0x2908468 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:452:63> 0 1
| |-FunctionDecl 0x2908690 <line:454:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:454:12 lcong48_r 'int (unsigned short *, struct drand48_data *) throw()' extern
| | |-ParmVarDecl 0x29084f0 <col:23, col:51> col:42 __param 'unsigned short *':'unsigned short *'
| | |-ParmVarDecl 0x2908578 <line:455:9, col:30> col:30 __buffer 'struct drand48_data *'
| | `-NonNullAttr 0x2908748 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:456:30> 0 1
| |-FunctionDecl 0x29088a0 <line:466:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:211:58> /usr/include/stdlib.h:466:14 malloc 'void *(size_t) throw()' extern
| | |-ParmVarDecl 0x29087a0 <col:22, col:29> col:29 __size 'size_t':'unsigned long'
| | `-RestrictAttr 0x2908950 </usr/include/x86_64-linux-gnu/sys/cdefs.h:211:47> malloc
| |-FunctionDecl 0x2908b20 </usr/include/stdlib.h:468:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:211:58> /usr/include/stdlib.h:468:14 calloc 'void *(size_t, size_t) throw()' extern
| | |-ParmVarDecl 0x2908998 <col:22, col:29> col:29 __nmemb 'size_t':'unsigned long'
| | |-ParmVarDecl 0x2908a08 <col:38, col:45> col:45 __size 'size_t':'unsigned long'
| | `-RestrictAttr 0x2908bd8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:211:47> malloc
| |-FunctionDecl 0x2908da0 </usr/include/stdlib.h:480:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:294:43> /usr/include/stdlib.h:480:14 realloc 'void *(void *, size_t) throw()' extern
| | |-ParmVarDecl 0x2908c20 <col:23, col:29> col:29 __ptr 'void *'
| | |-ParmVarDecl 0x2908c90 <col:36, col:43> col:43 __size 'size_t':'unsigned long'
| | `-WarnUnusedResultAttr 0x2908e58 </usr/include/x86_64-linux-gnu/sys/cdefs.h:294:20>
| |-FunctionDecl 0x2908fa0 </usr/include/stdlib.h:483:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdlib.h:483:13 free 'void (void *) throw()' extern
| | `-ParmVarDecl 0x2908ea0 <col:19, col:25> col:25 __ptr 'void *'
| |-FunctionDecl 0x29090e8 <line:488:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdlib.h:488:13 cfree 'void (void *) throw()' extern
| | `-ParmVarDecl 0x2909060 <col:20, col:26> col:26 __ptr 'void *'
| |-LinkageSpecDecl 0x29091c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:98:24, line:99:22> line:98:31 C
| | `-FunctionDecl 0x29097b8 </usr/include/alloca.h:32:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/alloca.h:32:14 alloca 'void *(size_t) throw()' extern
| |   `-ParmVarDecl 0x2909730 <col:22, col:29> col:29 __size 'size_t':'unsigned long'
| |-FunctionDecl 0x2909900 </usr/include/stdlib.h:498:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:211:58> /usr/include/stdlib.h:498:14 valloc 'void *(size_t) throw()' extern
| | |-ParmVarDecl 0x2909878 <col:22, col:29> col:29 __size 'size_t':'unsigned long'
| | `-RestrictAttr 0x29099b0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:211:47> malloc
| |-FunctionDecl 0x2909c60 </usr/include/stdlib.h:503:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:503:12 posix_memalign 'int (void **, size_t, size_t) throw()' extern
| | |-ParmVarDecl 0x2909a30 <col:28, col:35> col:35 __memptr 'void **'
| | |-ParmVarDecl 0x2909aa0 <col:45, col:52> col:52 __alignment 'size_t':'unsigned long'
| | |-ParmVarDecl 0x2909b10 <col:65, col:72> col:72 __size 'size_t':'unsigned long'
| | `-NonNullAttr 0x2909d20 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:504:27> 0
| |-FunctionDecl 0x2909e80 <line:509:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:211:58> /usr/include/stdlib.h:509:14 aligned_alloc 'void *(size_t, size_t) throw()' extern
| | |-ParmVarDecl 0x2909d80 <col:29, col:36> col:36 __alignment 'size_t':'unsigned long'
| | |-ParmVarDecl 0x2909df0 <col:49, col:56> col:56 __size 'size_t':'unsigned long'
| | `-RestrictAttr 0x2909f38 </usr/include/x86_64-linux-gnu/sys/cdefs.h:211:47> malloc
| |-FunctionDecl 0x290a0c0 </usr/include/stdlib.h:515:1, col:63> col:13 abort 'void (void) __attribute__((noreturn)) throw()' extern
| |-FunctionDecl 0x290a3c0 <line:519:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:519:12 atexit 'int (void (*)(void)) throw()' extern
| | |-ParmVarDecl 0x290a298 <col:20, col:40> col:27 __func 'void (*)(void)'
| | `-NonNullAttr 0x290a470 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:519:64> 0
| |-LinkageSpecDecl 0x290a528 <line:524:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:524:8 C++
| | `-FunctionDecl 0x28b9058 <col:14, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:524:18 at_quick_exit 'int (void (*)(void)) throw()'
| |   |-ParmVarDecl 0x290a618 <col:33, col:53> col:40 __func 'void (*)(void)'
| |   |-AsmLabelAttr 0x28b9100 <line:525:21> "at_quick_exit"
| |   `-NonNullAttr 0x28b9158 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:525:51> 0
| |-FunctionDecl 0x28b9510 <line:535:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:535:12 on_exit 'int (void (*)(int, void *), void *) throw()' extern
| | |-ParmVarDecl 0x28b9368 <col:21, col:62> col:28 __func 'void (*)(int, void *)'
| | |-ParmVarDecl 0x28b93d8 <col:65, col:71> col:71 __arg 'void *'
| | `-NonNullAttr 0x28b95c8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:536:27> 0
| |-FunctionDecl 0x28b97a0 <line:543:1, col:70> col:13 exit 'void (int) __attribute__((noreturn)) throw()' extern
| | `-ParmVarDecl 0x28b9620 <col:19, col:23> col:23 __status 'int'
| |-FunctionDecl 0x28b98e8 <line:549:1, col:76> col:13 quick_exit 'void (int) __attribute__((noreturn)) throw()' extern
| | `-ParmVarDecl 0x28b9860 <col:25, col:29> col:29 __status 'int'
| |-FunctionDecl 0x28b9a30 <line:557:1, col:71> col:13 _Exit 'void (int) __attribute__((noreturn)) throw()' extern
| | `-ParmVarDecl 0x28b99a8 <col:20, col:24> col:24 __status 'int'
| |-FunctionDecl 0x28b9c10 <line:564:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:564:14 getenv 'char *(const char *) throw()' extern
| | |-ParmVarDecl 0x28b9af0 <col:22, col:34> col:34 __name 'const char *'
| | `-NonNullAttr 0x28b9cc0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:564:63> 0
| |-FunctionDecl 0x28b9dc8 <line:570:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:570:14 secure_getenv 'char *(const char *) throw()' extern
| | |-ParmVarDecl 0x28b9d20 <col:29, col:41> col:41 __name 'const char *'
| | `-NonNullAttr 0x28b9e78 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:571:27> 0
| |-FunctionDecl 0x290ea40 <line:578:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:578:12 putenv 'int (char *) throw()' extern
| | |-ParmVarDecl 0x28b9ed0 <col:20, col:26> col:26 __string 'char *'
| | `-NonNullAttr 0x290eaf0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:578:57> 0
| |-FunctionDecl 0x290ed80 <line:584:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:584:12 setenv 'int (const char *, const char *, int) throw()' extern
| | |-ParmVarDecl 0x290eb50 <col:20, col:32> col:32 __name 'const char *'
| | |-ParmVarDecl 0x290ebc0 <col:40, col:52> col:52 __value 'const char *'
| | |-ParmVarDecl 0x290ec30 <col:61, col:65> col:65 __replace 'int'
| | `-NonNullAttr 0x290ee40 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:585:27> 1
| |-FunctionDecl 0x290ef48 <line:588:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:588:12 unsetenv 'int (const char *) throw()' extern
| | |-ParmVarDecl 0x290eea0 <col:22, col:34> col:34 __name 'const char *'
| | `-NonNullAttr 0x290eff8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:588:63> 0
| |-FunctionDecl 0x290f0d0 <line:595:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdlib.h:595:12 clearenv 'int (void) throw()' extern
| |-FunctionDecl 0x290f230 <line:606:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:606:14 mktemp 'char *(char *) throw()' extern
| | |-ParmVarDecl 0x290f188 <col:22, col:28> col:28 __template 'char *'
| | `-NonNullAttr 0x290f2e0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:606:61> 0
| |-FunctionDecl 0x290f3e8 <line:619:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:619:12 mkstemp 'int (char *)' extern
| | |-ParmVarDecl 0x290f340 <col:21, col:27> col:27 __template 'char *'
| | `-NonNullAttr 0x290f498 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:619:52> 0
| |-FunctionDecl 0x290f598 <line:629:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:629:12 mkstemp64 'int (char *)' extern
| | |-ParmVarDecl 0x290f4f0 <col:23, col:29> col:29 __template 'char *'
| | `-NonNullAttr 0x290f648 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:629:54> 0
| |-FunctionDecl 0x290f800 <line:641:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:641:12 mkstemps 'int (char *, int)' extern
| | |-ParmVarDecl 0x290f6a0 <col:22, col:28> col:28 __template 'char *'
| | |-ParmVarDecl 0x290f710 <col:40, col:44> col:44 __suffixlen 'int'
| | `-NonNullAttr 0x290f8b8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:641:70> 0
| |-FunctionDecl 0x28a6940 <line:651:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:651:12 mkstemps64 'int (char *, int)' extern
| | |-ParmVarDecl 0x290f910 <col:24, col:30> col:30 __template 'char *'
| | |-ParmVarDecl 0x290f980 <col:42, col:46> col:46 __suffixlen 'int'
| | `-NonNullAttr 0x28a69f8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:652:19> 0
| |-FunctionDecl 0x28a6af8 <line:662:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:662:14 mkdtemp 'char *(char *) throw()' extern
| | |-ParmVarDecl 0x28a6a50 <col:23, col:29> col:29 __template 'char *'
| | `-NonNullAttr 0x28a6ba8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:662:62> 0
| |-FunctionDecl 0x28a6d20 <line:673:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:673:12 mkostemp 'int (char *, int)' extern
| | |-ParmVarDecl 0x28a6c00 <col:22, col:28> col:28 __template 'char *'
| | |-ParmVarDecl 0x28a6c70 <col:40, col:44> col:44 __flags 'int'
| | `-NonNullAttr 0x28a6dd8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:673:66> 0
| |-FunctionDecl 0x28a6f50 <line:683:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:683:12 mkostemp64 'int (char *, int)' extern
| | |-ParmVarDecl 0x28a6e30 <col:24, col:30> col:30 __template 'char *'
| | |-ParmVarDecl 0x28a6ea0 <col:42, col:46> col:46 __flags 'int'
| | `-NonNullAttr 0x28a7008 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:683:68> 0
| |-FunctionDecl 0x28a7240 <line:693:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:693:12 mkostemps 'int (char *, int, int)' extern
| | |-ParmVarDecl 0x28a7060 <col:23, col:29> col:29 __template 'char *'
| | |-ParmVarDecl 0x28a70d0 <col:41, col:45> col:45 __suffixlen 'int'
| | |-ParmVarDecl 0x28a7140 <col:58, col:62> col:62 __flags 'int'
| | `-NonNullAttr 0x28a7300 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:694:19> 0
| |-FunctionDecl 0x28a74f8 <line:705:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:705:12 mkostemps64 'int (char *, int, int)' extern
| | |-ParmVarDecl 0x28a7360 <col:25, col:31> col:31 __template 'char *'
| | |-ParmVarDecl 0x28a73d0 <col:43, col:47> col:47 __suffixlen 'int'
| | |-ParmVarDecl 0x28a7440 <col:60, col:64> col:64 __flags 'int'
| | `-NonNullAttr 0x28a75b8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:706:19> 0
| |-FunctionDecl 0x28a7698 <line:716:1, col:41> col:12 system 'int (const char *)' extern
| | `-ParmVarDecl 0x28a7610 <col:20, col:32> col:32 __command 'const char *'
| |-FunctionDecl 0x28a7800 <line:723:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:723:14 canonicalize_file_name 'char *(const char *) throw()' extern
| | |-ParmVarDecl 0x28a7758 <col:38, col:50> col:50 __name 'const char *'
| | `-NonNullAttr 0x28a78b0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:724:27> 0
| |-FunctionDecl 0x2915c00 <line:733:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdlib.h:733:14 realpath 'char *(const char *__restrict, char *__restrict) throw()' extern
| | |-ParmVarDecl 0x2915a80 <col:24, col:47> col:47 __name 'const char *__restrict'
| | `-ParmVarDecl 0x2915af0 <line:734:10, col:27> col:27 __resolved 'char *__restrict'
| |-TypedefDecl 0x2915ea8 <line:741:1, col:57> col:15 referenced __compar_fn_t 'int (*)(const void *, const void *)'
| | `-PointerType 0x2915e40 'int (*)(const void *, const void *)'
| |   `-ParenType 0x2915de0 'int (const void *, const void *)' sugar
| |     `-FunctionProtoType 0x2915da0 'int (const void *, const void *)' cdecl
| |       |-BuiltinType 0x28128c0 'int'
| |       |-PointerType 0x28b8430 'const void *'
| |       | `-QualType 0x2812821 'const void' const
| |       |   `-BuiltinType 0x2812820 'void'
| |       `-PointerType 0x28b8430 'const void *'
| |         `-QualType 0x2812821 'const void' const
| |           `-BuiltinType 0x2812820 'void'
| |-TypedefDecl 0x2915f30 <line:744:1, col:23> col:23 comparison_fn_t '__compar_fn_t':'int (*)(const void *, const void *)'
| | `-TypedefType 0x2915f00 '__compar_fn_t' sugar
| |   |-Typedef 0x2915ea8 '__compar_fn_t'
| |   `-PointerType 0x2915e40 'int (*)(const void *, const void *)'
| |     `-ParenType 0x2915de0 'int (const void *, const void *)' sugar
| |       `-FunctionProtoType 0x2915da0 'int (const void *, const void *)' cdecl
| |         |-BuiltinType 0x28128c0 'int'
| |         |-PointerType 0x28b8430 'const void *'
| |         | `-QualType 0x2812821 'const void' const
| |         |   `-BuiltinType 0x2812820 'void'
| |         `-PointerType 0x28b8430 'const void *'
| |           `-QualType 0x2812821 'const void' const
| |             `-BuiltinType 0x2812820 'void'
| |-TypedefDecl 0x29161f0 <line:748:1, col:67> col:15 referenced __compar_d_fn_t 'int (*)(const void *, const void *, void *)'
| | `-PointerType 0x2916180 'int (*)(const void *, const void *, void *)'
| |   `-ParenType 0x2916120 'int (const void *, const void *, void *)' sugar
| |     `-FunctionProtoType 0x29160d0 'int (const void *, const void *, void *)' cdecl
| |       |-BuiltinType 0x28128c0 'int'
| |       |-PointerType 0x28b8430 'const void *'
| |       | `-QualType 0x2812821 'const void' const
| |       |   `-BuiltinType 0x2812820 'void'
| |       |-PointerType 0x28b8430 'const void *'
| |       | `-QualType 0x2812821 'const void' const
| |       |   `-BuiltinType 0x2812820 'void'
| |       `-PointerType 0x2812c90 'void *'
| |         `-BuiltinType 0x2812820 'void'
| |-FunctionDecl 0x29165d0 <line:754:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:754:14 bsearch 'void *(const void *, const void *, size_t, size_t, __compar_fn_t)' extern
| | |-ParmVarDecl 0x2916250 <col:23, col:35> col:35 __key 'const void *'
| | |-ParmVarDecl 0x29162c0 <col:42, col:54> col:54 __base 'const void *'
| | |-ParmVarDecl 0x2916330 <line:755:9, col:16> col:16 __nmemb 'size_t':'unsigned long'
| | |-ParmVarDecl 0x29163a0 <col:25, col:32> col:32 __size 'size_t':'unsigned long'
| | |-ParmVarDecl 0x2916410 <col:40, col:54> col:54 __compar '__compar_fn_t':'int (*)(const void *, const void *)'
| | `-NonNullAttr 0x29166a0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:756:25> 0 1 4
| |-FunctionDecl 0x2916a90 <line:764:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:764:13 qsort 'void (void *, size_t, size_t, __compar_fn_t)' extern
| | |-ParmVarDecl 0x2916708 <col:20, col:26> col:26 __base 'void *'
| | |-ParmVarDecl 0x2916778 <col:34, col:41> col:41 __nmemb 'size_t':'unsigned long'
| | |-ParmVarDecl 0x29167e8 <col:50, col:57> col:57 __size 'size_t':'unsigned long'
| | |-ParmVarDecl 0x2916858 <line:765:6, col:20> col:20 __compar '__compar_fn_t':'int (*)(const void *, const void *)'
| | `-NonNullAttr 0x2916b58 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:765:46> 0 3
| |-FunctionDecl 0x2916f30 <line:767:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:767:13 qsort_r 'void (void *, size_t, size_t, __compar_d_fn_t, void *)' extern
| | |-ParmVarDecl 0x2916bb0 <col:22, col:28> col:28 __base 'void *'
| | |-ParmVarDecl 0x2916c20 <col:36, col:43> col:43 __nmemb 'size_t':'unsigned long'
| | |-ParmVarDecl 0x2916c90 <col:52, col:59> col:59 __size 'size_t':'unsigned long'
| | |-ParmVarDecl 0x2916d20 <line:768:8, col:24> col:24 __compar '__compar_d_fn_t':'int (*)(const void *, const void *, void *)'
| | |-ParmVarDecl 0x2916d90 <col:34, col:40> col:40 __arg 'void *'
| | `-NonNullAttr 0x2917000 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:769:19> 0 3
| |-FunctionDecl 0x2917120 <line:774:1, col:60> col:12 abs 'int (int) throw()' extern
| | |-ParmVarDecl 0x2917060 <col:17, col:21> col:21 __x 'int'
| | |-ConstAttr 0x29171d0 <col:50>
| | `-NoThrowAttr 0x2917208 <col:12> Implicit
| |-FunctionDecl 0x2917330 <line:775:1, col:71> col:17 labs 'long (long) throw()' extern
| | |-ParmVarDecl 0x2917228 <col:23, col:32> col:32 __x 'long'
| | |-ConstAttr 0x29173e0 <col:61>
| | `-NoThrowAttr 0x2917418 <col:17> Implicit
| |-FunctionDecl 0x2917540 <line:779:15, line:780:40> line:779:36 llabs 'long long (long long) throw()' extern
| | |-ParmVarDecl 0x2917438 <col:43, col:57> col:57 __x 'long long'
| | |-ConstAttr 0x29175f0 <line:780:30>
| | `-NoThrowAttr 0x2917628 <line:779:36> Implicit
| |-FunctionDecl 0x29177f0 <line:788:1, line:789:40> line:788:14 div 'div_t (int, int) throw()' extern
| | |-ParmVarDecl 0x2917670 <col:19, col:23> col:23 __numer 'int'
| | |-ParmVarDecl 0x29176e0 <col:32, col:36> col:36 __denom 'int'
| | `-ConstAttr 0x29178a8 <line:789:30>
| |-FunctionDecl 0x2917aa0 <line:790:1, line:791:40> line:790:15 ldiv 'ldiv_t (long, long) throw()' extern
| | |-ParmVarDecl 0x2917910 <col:21, col:30> col:30 __numer 'long'
| | |-ParmVarDecl 0x2917980 <col:39, col:48> col:48 __denom 'long'
| | `-ConstAttr 0x2917b58 <line:791:30>
| |-FunctionDecl 0x2917d40 <line:796:15, line:798:40> line:796:30 lldiv 'lldiv_t (long long, long long) throw()' extern
| | |-ParmVarDecl 0x2917bc0 <col:37, col:51> col:51 __numer 'long long'
| | |-ParmVarDecl 0x2917c30 <line:797:9, col:23> col:23 __denom 'long long'
| | `-ConstAttr 0x2917df8 <line:798:30>
| |-FunctionDecl 0x2918120 <line:811:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:811:14 ecvt 'char *(double, int, int *__restrict, int *__restrict) throw()' extern
| | |-ParmVarDecl 0x2917e40 <col:20, col:27> col:27 __value 'double'
| | |-ParmVarDecl 0x2917eb0 <col:36, col:40> col:40 __ndigit 'int'
| | |-ParmVarDecl 0x2917f28 <col:50, col:66> col:66 __decpt 'int *__restrict'
| | |-ParmVarDecl 0x2917fa0 <line:812:6, col:22> col:22 __sign 'int *__restrict'
| | `-NonNullAttr 0x29181e8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:812:54> 2 3
| |-FunctionDecl 0x2918480 <line:817:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:817:14 fcvt 'char *(double, int, int *__restrict, int *__restrict) throw()' extern
| | |-ParmVarDecl 0x2918240 <col:20, col:27> col:27 __value 'double'
| | |-ParmVarDecl 0x29182b0 <col:36, col:40> col:40 __ndigit 'int'
| | |-ParmVarDecl 0x2918328 <col:50, col:66> col:66 __decpt 'int *__restrict'
| | |-ParmVarDecl 0x29183a0 <line:818:6, col:22> col:22 __sign 'int *__restrict'
| | `-NonNullAttr 0x2918548 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:818:54> 2 3
| |-FunctionDecl 0x29187d0 <line:823:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:823:14 gcvt 'char *(double, int, char *) throw()' extern
| | |-ParmVarDecl 0x29185a0 <col:20, col:27> col:27 __value 'double'
| | |-ParmVarDecl 0x2918610 <col:36, col:40> col:40 __ndigit 'int'
| | |-ParmVarDecl 0x2918680 <col:50, col:56> col:56 __buf 'char *'
| | `-NonNullAttr 0x2918890 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:824:27> 2
| |-FunctionDecl 0x2918c30 <line:829:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:829:14 qecvt 'char *(long double, int, int *__restrict, int *__restrict) throw()' extern
| | |-ParmVarDecl 0x29188f0 <col:21, col:33> col:33 __value 'long double'
| | |-ParmVarDecl 0x2918960 <col:42, col:46> col:46 __ndigit 'int'
| | |-ParmVarDecl 0x29189d8 <line:830:7, col:23> col:23 __decpt 'int *__restrict'
| | |-ParmVarDecl 0x2918ab0 <col:32, col:48> col:48 __sign 'int *__restrict'
| | `-NonNullAttr 0x2918cf8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:831:30> 2 3
| |-FunctionDecl 0x2918f90 <line:832:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:832:14 qfcvt 'char *(long double, int, int *__restrict, int *__restrict) throw()' extern
| | |-ParmVarDecl 0x2918d50 <col:21, col:33> col:33 __value 'long double'
| | |-ParmVarDecl 0x2918dc0 <col:42, col:46> col:46 __ndigit 'int'
| | |-ParmVarDecl 0x2918e38 <line:833:7, col:23> col:23 __decpt 'int *__restrict'
| | |-ParmVarDecl 0x2918eb0 <col:32, col:48> col:48 __sign 'int *__restrict'
| | `-NonNullAttr 0x2919058 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:834:30> 2 3
| |-FunctionDecl 0x29192e0 <line:835:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:835:14 qgcvt 'char *(long double, int, char *) throw()' extern
| | |-ParmVarDecl 0x29190b0 <col:21, col:33> col:33 __value 'long double'
| | |-ParmVarDecl 0x2919120 <col:42, col:46> col:46 __ndigit 'int'
| | |-ParmVarDecl 0x2919190 <col:56, col:62> col:62 __buf 'char *'
| | `-NonNullAttr 0x29193a0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:836:27> 2
| |-FunctionDecl 0x2919810 <line:841:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:841:12 ecvt_r 'int (double, int, int *__restrict, int *__restrict, char *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0x2919400 <col:20, col:27> col:27 __value 'double'
| | |-ParmVarDecl 0x2919470 <col:36, col:40> col:40 __ndigit 'int'
| | |-ParmVarDecl 0x29194e8 <col:50, col:66> col:66 __decpt 'int *__restrict'
| | |-ParmVarDecl 0x2919560 <line:842:6, col:22> col:22 __sign 'int *__restrict'
| | |-ParmVarDecl 0x29195d0 <col:30, col:47> col:47 __buf 'char *__restrict'
| | |-ParmVarDecl 0x2919640 <line:843:6, col:13> col:13 __len 'size_t':'unsigned long'
| | `-NonNullAttr 0x29198e8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:843:47> 2 3 4
| |-FunctionDecl 0x2919cb0 <line:844:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:844:12 fcvt_r 'int (double, int, int *__restrict, int *__restrict, char *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0x2919948 <col:20, col:27> col:27 __value 'double'
| | |-ParmVarDecl 0x29199b8 <col:36, col:40> col:40 __ndigit 'int'
| | |-ParmVarDecl 0x2919a30 <col:50, col:66> col:66 __decpt 'int *__restrict'
| | |-ParmVarDecl 0x2919ac0 <line:845:6, col:22> col:22 __sign 'int *__restrict'
| | |-ParmVarDecl 0x2919b30 <col:30, col:47> col:47 __buf 'char *__restrict'
| | |-ParmVarDecl 0x2919ba0 <line:846:6, col:13> col:13 __len 'size_t':'unsigned long'
| | `-NonNullAttr 0x2919d88 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:846:47> 2 3 4
| |-FunctionDecl 0x291a200 <line:848:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:848:12 qecvt_r 'int (long double, int, int *__restrict, int *__restrict, char *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0x2919de8 <col:21, col:33> col:33 __value 'long double'
| | |-ParmVarDecl 0x2919e58 <col:42, col:46> col:46 __ndigit 'int'
| | |-ParmVarDecl 0x2919ed0 <line:849:7, col:23> col:23 __decpt 'int *__restrict'
| | |-ParmVarDecl 0x2919f48 <col:32, col:48> col:48 __sign 'int *__restrict'
| | |-ParmVarDecl 0x2919fb8 <line:850:7, col:24> col:24 __buf 'char *__restrict'
| | |-ParmVarDecl 0x291a028 <col:31, col:38> col:38 __len 'size_t':'unsigned long'
| | `-NonNullAttr 0x291a2d8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:851:33> 2 3 4
| |-FunctionDecl 0x291a688 <line:852:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:852:12 qfcvt_r 'int (long double, int, int *__restrict, int *__restrict, char *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0x291a338 <col:21, col:33> col:33 __value 'long double'
| | |-ParmVarDecl 0x291a3a8 <col:42, col:46> col:46 __ndigit 'int'
| | |-ParmVarDecl 0x291a420 <line:853:7, col:23> col:23 __decpt 'int *__restrict'
| | |-ParmVarDecl 0x291a498 <col:32, col:48> col:48 __sign 'int *__restrict'
| | |-ParmVarDecl 0x291a508 <line:854:7, col:24> col:24 __buf 'char *__restrict'
| | |-ParmVarDecl 0x291a578 <col:31, col:38> col:38 __len 'size_t':'unsigned long'
| | `-NonNullAttr 0x291a760 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:855:33> 2 3 4
| |-FunctionDecl 0x291a950 <line:862:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdlib.h:862:12 mblen 'int (const char *, size_t) throw()' extern
| | |-ParmVarDecl 0x291a7c8 <col:19, col:31> col:31 __s 'const char *'
| | `-ParmVarDecl 0x291a838 <col:36, col:43> col:43 __n 'size_t':'unsigned long'
| |-FunctionDecl 0x291ac70 <line:865:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdlib.h:865:12 mbtowc 'int (wchar_t *__restrict, const char *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0x291aa48 <col:20, col:40> col:40 __pwc 'wchar_t *__restrict'
| | |-ParmVarDecl 0x291aad0 <line:866:6, col:29> col:29 __s 'const char *__restrict'
| | `-ParmVarDecl 0x291ab40 <col:34, col:41> col:41 __n 'size_t':'unsigned long'
| |-FunctionDecl 0x291aec0 <line:869:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdlib.h:869:12 wctomb 'int (char *, wchar_t) throw()' extern
| | |-ParmVarDecl 0x291ad40 <col:20, col:26> col:26 __s 'char *'
| | `-ParmVarDecl 0x291adb0 <col:31, col:39> col:39 __wchar 'wchar_t'
| |-FunctionDecl 0x291b1a0 <line:873:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdlib.h:873:15 mbstowcs 'size_t (wchar_t *__restrict, const char *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0x291af88 <col:25, col:46> col:46 __pwcs 'wchar_t *__restrict'
| | |-ParmVarDecl 0x291aff8 <line:874:4, col:27> col:27 __s 'const char *__restrict'
| | `-ParmVarDecl 0x291b068 <col:32, col:39> col:39 __n 'size_t':'unsigned long'
| |-FunctionDecl 0x291b4b0 <line:876:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdlib.h:876:15 wcstombs 'size_t (char *__restrict, const wchar_t *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0x291b270 <col:25, col:42> col:42 __s 'char *__restrict'
| | |-ParmVarDecl 0x291b308 <line:877:4, col:30> col:30 __pwcs 'const wchar_t *__restrict'
| | `-ParmVarDecl 0x291b378 <col:38, col:45> col:45 __n 'size_t':'unsigned long'
| |-FunctionDecl 0x291b628 <line:887:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:887:12 rpmatch 'int (const char *) throw()' extern
| | |-ParmVarDecl 0x291b580 <col:21, col:33> col:33 __response 'const char *'
| | `-NonNullAttr 0x291b6d8 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:887:66> 0
| |-FunctionDecl 0x291b9f0 <line:898:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:898:12 getsubopt 'int (char **__restrict, char *const *__restrict, char **__restrict) throw()' extern
| | |-ParmVarDecl 0x291b738 <col:23, col:41> col:41 __optionp 'char **__restrict'
| | |-ParmVarDecl 0x291b7e0 <line:899:9, col:33> col:33 __tokens 'char *const *__restrict'
| | |-ParmVarDecl 0x291b858 <line:900:9, col:27> col:27 __valuep 'char **__restrict'
| | `-NonNullAttr 0x291bab0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:901:33> 0 1 2
| |-FunctionDecl 0x291bc10 <line:907:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:907:13 setkey 'void (const char *) throw()' extern
| | |-ParmVarDecl 0x291bb28 <col:21, col:33> col:33 __key 'const char *'
| | `-NonNullAttr 0x291bcc0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:907:61> 0
| |-FunctionDecl 0x291bda8 <line:915:1, col:37> col:12 posix_openpt 'int (int)' extern
| | `-ParmVarDecl 0x291bd20 <col:26, col:30> col:30 __oflag 'int'
| |-FunctionDecl 0x291bef0 <line:923:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdlib.h:923:12 grantpt 'int (int) throw()' extern
| | `-ParmVarDecl 0x291be68 <col:21, col:25> col:25 __fd 'int'
| |-FunctionDecl 0x291c038 <line:927:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdlib.h:927:12 unlockpt 'int (int) throw()' extern
| | `-ParmVarDecl 0x291bfb0 <col:22, col:26> col:26 __fd 'int'
| |-FunctionDecl 0x291c200 <line:932:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:60:27> /usr/include/stdlib.h:932:14 ptsname 'char *(int) throw()' extern
| | `-ParmVarDecl 0x291c0f8 <col:23, col:27> col:27 __fd 'int'
| |-FunctionDecl 0x291c4f0 <line:939:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:939:12 ptsname_r 'int (int, char *, size_t) throw()' extern
| | |-ParmVarDecl 0x291c2c0 <col:23, col:27> col:27 __fd 'int'
| | |-ParmVarDecl 0x291c330 <col:33, col:39> col:39 __buf 'char *'
| | |-ParmVarDecl 0x291c3a0 <col:46, col:53> col:53 __buflen 'size_t':'unsigned long'
| | `-NonNullAttr 0x291c5b0 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:940:27> 1
| |-FunctionDecl 0x291c690 <line:943:1, col:23> col:12 getpt 'int (void)' extern
| `-FunctionDecl 0x291c960 <line:950:1, /usr/include/x86_64-linux-gnu/sys/cdefs.h:285:63> /usr/include/stdlib.h:950:12 getloadavg 'int (double *, int) throw()' extern
|   |-ParmVarDecl 0x291c7c0 <col:24, col:41> col:31 __loadavg 'double *':'double *'
|   |-ParmVarDecl 0x291c830 <col:44, col:48> col:48 __nelem 'int'
|   `-NonNullAttr 0x291ca18 </usr/include/x86_64-linux-gnu/sys/cdefs.h:285:44, /usr/include/stdlib.h:951:27> 0
|-EnumDecl 0x291db00 </home/labaccount/11-2-17/mlsa/IG/example/SnakeAndLadder/SnakeAndLadder.cpp:9:1, col:20> col:6 referenced whoplays
| |-EnumConstantDecl 0x291dbb0 <col:15> col:15 p1 'enum whoplays'
| `-EnumConstantDecl 0x291dc00 <col:18> col:18 p2 'enum whoplays'
|-VarDecl 0x291dc60 <line:10:1, col:14> col:5 used counter1 'int' cinit
| `-IntegerLiteral 0x291dcc0 <col:14> 'int' 0
|-VarDecl 0x291dcf0 <col:1, col:25> col:16 used counter2 'int' cinit
| `-IntegerLiteral 0x291dd50 <col:25> 'int' 0
|-VarDecl 0x291dd80 <col:1, col:37> col:27 used counter11 'int' cinit
| `-IntegerLiteral 0x291dde0 <col:37> 'int' 0
|-VarDecl 0x291de10 <col:1, col:49> col:39 used counter22 'int' cinit
| `-IntegerLiteral 0x291de70 <col:49> 'int' 0
|-FunctionDecl 0x291e090 <line:11:1, col:23> col:6 used graph 'void (int, int, int)'
| |-ParmVarDecl 0x291dec8 <col:12> col:15 'int'
| |-ParmVarDecl 0x291df38 <col:16> col:19 'int'
| `-ParmVarDecl 0x291dfa8 <col:20> col:23 'int'
|-FunctionDecl 0x291e1e0 <line:12:1, col:17> col:6 used sohaib 'void (void)'
|-FunctionDecl 0x291e4e0 <line:13:1, col:28> col:6 used ladder 'void (int, int, int, int)'
| |-ParmVarDecl 0x291e298 <col:13> col:16 'int'
| |-ParmVarDecl 0x291e308 <col:17> col:20 'int'
| |-ParmVarDecl 0x291e378 <col:21> col:24 'int'
| `-ParmVarDecl 0x291e3e8 <col:25> col:28 'int'
|-FunctionDecl 0x291e700 <line:14:1, col:17> col:6 used cp1 'void (int, int)'
| |-ParmVarDecl 0x291e5b8 <col:10> col:13 'int'
| `-ParmVarDecl 0x291e628 <col:14> col:17 'int'
|-FunctionDecl 0x291e8c8 <line:15:1, col:17> col:6 used cp2 'void (int, int)'
| |-ParmVarDecl 0x291e7c8 <col:10> col:13 'int'
| `-ParmVarDecl 0x291e838 <col:14> col:17 'int'
|-FunctionDecl 0x291fbc0 <line:16:1, col:27> col:6 used snake 'void (int, int, int, int)'
| |-ParmVarDecl 0x291e990 <col:12> col:15 'int'
| |-ParmVarDecl 0x291ea00 <col:16> col:19 'int'
| |-ParmVarDecl 0x291ea70 <col:20> col:23 'int'
| `-ParmVarDecl 0x291fb20 <col:24> col:27 'int'
|-FunctionDecl 0x291fd60 <line:17:1, col:28> col:10 setplayer 'enum whoplays (enum whoplays)'
| `-ParmVarDecl 0x291fc98 <col:20> col:28 'enum whoplays'
|-CXXRecordDecl 0x291fe10 <line:18:1, line:29:1> line:18:7 referenced class dice definition
| |-CXXRecordDecl 0x291ff20 <col:1, col:7> col:7 implicit referenced class dice
| |-AccessSpecDecl 0x291ffb0 <line:20:4, col:11> col:4 private
| |-FieldDecl 0x291ffe8 <line:21:6, col:10> col:10 referenced dice1 'int'
| |-AccessSpecDecl 0x2920030 <line:22:4, col:10> col:4 public
| |-CXXConstructorDecl 0x2920098 <line:23:7, col:12> col:7 used dice 'void (void)'
| |-CXXMethodDecl 0x29201e8 <line:24:7, col:24> col:11 rolldice 'int (void)'
| |-CXXConversionDecl 0x29202e0 <line:25:7, line:28:5> line:25:7 operator int 'int (void)'
| | `-CompoundStmt 0x2920490 <line:26:5, line:28:5>
| |   `-ReturnStmt 0x2920478 <line:27:8, col:21>
| |     `-BinaryOperator 0x2920450 <col:15, col:21> 'int' '/'
| |       |-ImplicitCastExpr 0x2920438 <col:15> 'int' <LValueToRValue>
| |       | `-MemberExpr 0x29203e0 <col:15> 'int' lvalue ->dice1 0x291ffe8
| |       |   `-CXXThisExpr 0x29203c8 <col:15> 'class dice *' this
| |       `-IntegerLiteral 0x2920418 <col:21> 'int' 1
| `-CXXConstructorDecl 0x29230a8 <line:18:7> col:7 implicit dice 'void (const class dice &)' inline noexcept-unevaluated 0x29230a8
|   `-ParmVarDecl 0x29231f0 <col:7> col:7 'const class dice &'
|-CXXMethodDecl 0x29205c0 parent 0x291fe10 prev 0x29201e8 <line:34:1, line:39:1> line:34:11 used rolldice 'int (void)'
| `-CompoundStmt 0x29209a0 <line:35:1, line:39:1>
|   |-BinaryOperator 0x29208f8 <line:37:4, col:19> 'int' lvalue '='
|   | |-MemberExpr 0x2920718 <col:4> 'int' lvalue ->dice1 0x291ffe8
|   | | `-CXXThisExpr 0x2920700 <col:4> 'class dice *' this
|   | `-BinaryOperator 0x29208d0 <col:10, col:19> 'int' '+'
|   |   |-BinaryOperator 0x2920888 <col:10, col:17> 'int' '%'
|   |   | |-CallExpr 0x2920840 <col:10, col:15> 'int'
|   |   | | `-ImplicitCastExpr 0x2920828 <col:10> 'int (*)(void) throw()' <FunctionToPointerDecay>
|   |   | |   `-DeclRefExpr 0x29207a8 <col:10> 'int (void) throw()' lvalue Function 0x2904a00 'rand' 'int (void) throw()'
|   |   | `-IntegerLiteral 0x2920868 <col:17> 'int' 6
|   |   `-IntegerLiteral 0x29208b0 <col:19> 'int' 1
|   `-ReturnStmt 0x2920988 <line:38:4, col:11>
|     `-ImplicitCastExpr 0x2920970 <col:11> 'int' <LValueToRValue>
|       `-MemberExpr 0x2920938 <col:11> 'int' lvalue ->dice1 0x291ffe8
|         `-CXXThisExpr 0x2920920 <col:11> 'class dice *' this
|-CXXRecordDecl 0x29209c8 <line:40:1, line:54:1> line:40:7 referenced class player1 definition
| |-CXXRecordDecl 0x2920b30 <col:1, col:7> col:7 implicit referenced class player1
| |-AccessSpecDecl 0x2920bc0 <line:42:4, col:11> col:4 private
| |-FieldDecl 0x2920bf8 <line:43:7, col:11> col:11 referenced a 'int'
| |-AccessSpecDecl 0x2920c40 <line:44:4, col:10> col:4 public
| |-CXXConstructorDecl 0x2920ca8 <line:45:7, col:15> col:7 used player1 'void (void)'
| |-CXXMethodDecl 0x2920d88 <line:46:7, col:15> col:7 invalid returna 'int (void)'
| |-CXXMethodDecl 0x2920ec8 <line:47:7, col:17> col:7 invalid reseta 'int (int)'
| | `-ParmVarDecl 0x2920e40 <col:14> col:17 'int'
| |-CXXMethodDecl 0x2921010 <line:48:7, col:17> col:7 invalid minusa 'int (int)'
| | `-ParmVarDecl 0x2920f88 <col:14> col:17 'int'
| |-CXXConversionDecl 0x29210f0 <line:49:7, line:52:5> line:49:7 operator int 'int (void)'
| | `-CompoundStmt 0x29212a0 <line:50:5, line:52:5>
| |   `-ReturnStmt 0x2921288 <line:51:8, col:17>
| |     `-BinaryOperator 0x2921260 <col:15, col:17> 'int' '/'
| |       |-ImplicitCastExpr 0x2921248 <col:15> 'int' <LValueToRValue>
| |       | `-MemberExpr 0x29211f0 <col:15> 'int' lvalue ->a 0x2920bf8
| |       |   `-CXXThisExpr 0x29211d8 <col:15> 'class player1 *' this
| |       `-IntegerLiteral 0x2921228 <col:17> 'int' 1
| `-CXXConstructorDecl 0x2923338 <line:40:7> col:7 implicit player1 'void (const class player1 &)' inline noexcept-unevaluated 0x2923338
|   `-ParmVarDecl 0x2923480 <col:7> col:7 'const class player1 &'
|-CXXRecordDecl 0x29219f0 <line:71:1, line:85:1> line:71:7 referenced class player2 definition
| |-CXXRecordDecl 0x2921b40 <col:1, col:7> col:7 implicit referenced class player2
| |-AccessSpecDecl 0x2921bd0 <line:73:4, col:11> col:4 private
| |-FieldDecl 0x2921c08 <line:74:7, col:11> col:11 referenced b 'int'
| |-AccessSpecDecl 0x2921c50 <line:75:4, col:10> col:4 public
| |-CXXConstructorDecl 0x2921cb8 <line:76:7, col:15> col:7 used player2 'void (void)'
| |-CXXMethodDecl 0x2921d98 <line:77:7, col:15> col:7 invalid returnb 'int (void)'
| |-CXXMethodDecl 0x2921ed8 <line:78:7, col:17> col:7 invalid minusb 'int (int)'
| | `-ParmVarDecl 0x2921e50 <col:14> col:17 'int'
| |-CXXMethodDecl 0x2922020 <line:79:7, col:17> col:7 invalid resetb 'int (int)'
| | `-ParmVarDecl 0x2921f98 <col:14> col:17 'int'
| |-CXXConversionDecl 0x2922100 <line:80:7, line:83:5> line:80:7 operator int 'int (void)'
| | `-CompoundStmt 0x29222b0 <line:81:5, line:83:5>
| |   `-ReturnStmt 0x2922298 <line:82:8, col:17>
| |     `-BinaryOperator 0x2922270 <col:15, col:17> 'int' '/'
| |       |-ImplicitCastExpr 0x2922258 <col:15> 'int' <LValueToRValue>
| |       | `-MemberExpr 0x2922200 <col:15> 'int' lvalue ->b 0x2921c08
| |       |   `-CXXThisExpr 0x29221e8 <col:15> 'class player2 *' this
| |       `-IntegerLiteral 0x2922238 <col:17> 'int' 1
| `-CXXConstructorDecl 0x29235c8 <line:71:7> col:7 implicit player2 'void (const class player2 &)' inline noexcept-unevaluated 0x29235c8
|   `-ParmVarDecl 0x2923710 <col:7> col:7 'const class player2 &'
|-FunctionDecl 0x2922a20 <line:104:1, line:107:1> line:104:6 invalid main 'void (void)'
| `-CompoundStmt 0x2922bb8 <line:105:1, line:107:1>
|   `-CallExpr 0x2922b90 <line:106:4, col:11> 'void'
|     `-ImplicitCastExpr 0x2922b78 <col:4> 'void (*)(void)' <FunctionToPointerDecay>
|       `-DeclRefExpr 0x2922b50 <col:4> 'void (void)' lvalue Function 0x291e1e0 'sohaib' 'void (void)'
|-FunctionDecl 0x2922c68 prev 0x291e1e0 <line:109:1, line:249:1> line:109:6 used sohaib 'void (void)'
| `-CompoundStmt 0x29269f8 <line:110:1, line:249:1>
|   |-DeclStmt 0x2922e08 <line:111:4, col:22>
|   | |-VarDecl 0x2922d20 <col:4, col:8> col:8 used l 'int'
|   | `-VarDecl 0x2922d90 <col:4, col:14> col:14 used k 'int'
|   |-DeclStmt 0x2922ff8 <line:113:4, col:18>
|   | `-VarDecl 0x2922f78 <col:4, col:17> col:15 used x 'int' static cinit
|   |   `-IntegerLiteral 0x2922fd8 <col:17> 'int' 0
|   |-DeclStmt 0x2923288 <line:114:4, col:14>
|   | `-VarDecl 0x2923020 <col:4, col:9> col:9 used dice1 'class dice' callinit
|   |   `-CXXConstructExpr 0x2923258 <col:9> 'class dice' 'void (void)'
|   |-DeclStmt 0x2923518 <line:115:4, col:16>
|   | `-VarDecl 0x29232b0 <col:4, col:12> col:12 used obj1 'class player1' callinit
|   |   `-CXXConstructExpr 0x29234e8 <col:12> 'class player1' 'void (void)'
|   |-DeclStmt 0x29237a8 <line:116:4, col:16>
|   | `-VarDecl 0x2923540 <col:4, col:12> col:12 used obj2 'class player2' callinit
|   |   `-CXXConstructExpr 0x2923778 <col:12> 'class player2' 'void (void)'
|   |-DeclStmt 0x2923990 <line:117:4, col:23>
|   | |-VarDecl 0x29237d0 <col:4, col:12> col:8 used one 'int' cinit
|   | | `-IntegerLiteral 0x2923830 <col:12> 'int' 0
|   | |-VarDecl 0x2923860 <col:4, col:18> col:14 used two 'int' cinit
|   | | `-IntegerLiteral 0x29238c0 <col:18> 'int' 0
|   | `-VarDecl 0x29238f0 <col:4, col:22> col:20 used y 'int' cinit
|   |   `-IntegerLiteral 0x2923950 <col:22> 'int' 0
|   |-LabelStmt 0x2924178 <line:119:4, line:142:4> 'g'
|   | `-IfStmt 0x2924100 <line:119:6, line:142:4>
|   |   |-<<<NULL>>>
|   |   |-BinaryOperator 0x2923aa8 <line:119:9, col:12> '_Bool' '=='
|   |   | |-ImplicitCastExpr 0x2923a90 <col:9> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2923a48 <col:9> 'int' lvalue Var 0x2922f78 'x' 'int'
|   |   | `-IntegerLiteral 0x2923a70 <col:12> 'int' 6
|   |   |-CompoundStmt 0x2923de0 <line:120:4, line:130:4>
|   |   | `-IfStmt 0x2923db0 <line:121:7, line:129:7>
|   |   |   |-<<<NULL>>>
|   |   |   |-BinaryOperator 0x2923b60 <line:121:10, col:13> '_Bool' '=='
|   |   |   | |-ImplicitCastExpr 0x2923b18 <col:10> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x2923ad0 <col:10> 'int' lvalue Var 0x29238f0 'y' 'int'
|   |   |   | `-IntegerLiteral 0x2923af8 <col:13> 'int' 0
|   |   |   |-CompoundStmt 0x2923c28 <line:122:7, line:124:7>
|   |   |   `-IfStmt 0x2923d80 <line:126:7, line:129:7>
|   |   |     |-<<<NULL>>>
|   |   |     |-BinaryOperator 0x2923ca0 <line:126:10, col:13> '_Bool' '=='
|   |   |     | |-ImplicitCastExpr 0x2923c88 <col:10> 'int' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x2923c40 <col:10> 'int' lvalue Var 0x29238f0 'y' 'int'
|   |   |     | `-IntegerLiteral 0x2923c68 <col:13> 'int' 1
|   |   |     |-CompoundStmt 0x2923d68 <line:127:7, line:129:7>
|   |   |     `-<<<NULL>>>
|   |   `-CompoundStmt 0x29240e0 <line:132:4, line:142:4>
|   |     `-IfStmt 0x29240b0 <line:133:7, line:141:7>
|   |       |-<<<NULL>>>
|   |       |-BinaryOperator 0x2923e60 <line:133:10, col:13> '_Bool' '=='
|   |       | |-ImplicitCastExpr 0x2923e48 <col:10> 'int' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x2923e00 <col:10> 'int' lvalue Var 0x29238f0 'y' 'int'
|   |       | `-IntegerLiteral 0x2923e28 <col:13> 'int' 0
|   |       |-CompoundStmt 0x2923f28 <line:134:7, line:136:7>
|   |       `-IfStmt 0x2924080 <line:138:7, line:141:7>
|   |         |-<<<NULL>>>
|   |         |-BinaryOperator 0x2923fa0 <line:138:10, col:13> '_Bool' '=='
|   |         | |-ImplicitCastExpr 0x2923f88 <col:10> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x2923f40 <col:10> 'int' lvalue Var 0x29238f0 'y' 'int'
|   |         | `-IntegerLiteral 0x2923f68 <col:13> 'int' 1
|   |         |-CompoundStmt 0x2924068 <line:139:7, line:141:7>
|   |         `-<<<NULL>>>
|   |-BinaryOperator 0x2924278 <line:144:4, col:26> 'int' lvalue '='
|   | |-DeclRefExpr 0x2924190 <col:4> 'int' lvalue Var 0x2922f78 'x' 'int'
|   | `-CXXFunctionalCastExpr 0x2924250 <col:6, col:26> 'int' functional cast to int <NoOp>
|   |   `-CXXMemberCallExpr 0x2924228 <col:10, col:25> 'int'
|   |     `-MemberExpr 0x29241f0 <col:10, col:16> '<bound member function type>' .rolldice 0x29205c0
|   |       `-DeclRefExpr 0x29241c8 <col:10> 'class dice' lvalue Var 0x2923020 'dice1' 'class dice'
|   |-CallExpr 0x29244a0 <line:147:4, col:19> 'void'
|   | |-ImplicitCastExpr 0x2924488 <col:4> 'void (*)(int, int, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2924430 <col:4> 'void (int, int, int)' lvalue Function 0x291e090 'graph' 'void (int, int, int)'
|   | |-ImplicitCastExpr 0x29244e0 <col:10> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x29243b8 <col:10> 'int' lvalue Var 0x29238f0 'y' 'int'
|   | |-ImplicitCastExpr 0x29244f8 <col:12> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x29243e0 <col:12> 'int' lvalue Var 0x29237d0 'one' 'int'
|   | `-ImplicitCastExpr 0x2924510 <col:16> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x2924408 <col:16> 'int' lvalue Var 0x2923860 'two' 'int'
|   |-IfStmt 0x29246f0 <line:148:4, line:151:4>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2924638 <line:148:7, col:16> '_Bool' '&&'
|   | | |-BinaryOperator 0x2924588 <col:7, col:10> '_Bool' '=='
|   | | | |-ImplicitCastExpr 0x2924570 <col:7> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2924528 <col:7> 'int' lvalue Var 0x2922f78 'x' 'int'
|   | | | `-IntegerLiteral 0x2924550 <col:10> 'int' 6
|   | | `-BinaryOperator 0x2924610 <col:13, col:16> '_Bool' '=='
|   | |   |-ImplicitCastExpr 0x29245f8 <col:13> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x29245b0 <col:13> 'int' lvalue Var 0x29238f0 'y' 'int'
|   | |   `-IntegerLiteral 0x29245d8 <col:16> 'int' 0
|   | |-CompoundStmt 0x29246d0 <line:149:4, line:151:4>
|   | | `-BinaryOperator 0x29246a8 <line:150:7, col:17> 'int' lvalue '='
|   | |   |-DeclRefExpr 0x2924660 <col:7> 'int' lvalue Var 0x291dd80 'counter11' 'int'
|   | |   `-IntegerLiteral 0x2924688 <col:17> 'int' 1
|   | `-<<<NULL>>>
|   |-IfStmt 0x29248e8 <line:152:4, line:155:4>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2924830 <line:152:7, col:16> '_Bool' '&&'
|   | | |-BinaryOperator 0x2924780 <col:7, col:10> '_Bool' '=='
|   | | | |-ImplicitCastExpr 0x2924768 <col:7> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2924720 <col:7> 'int' lvalue Var 0x2922f78 'x' 'int'
|   | | | `-IntegerLiteral 0x2924748 <col:10> 'int' 6
|   | | `-BinaryOperator 0x2924808 <col:13, col:16> '_Bool' '=='
|   | |   |-ImplicitCastExpr 0x29247f0 <col:13> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x29247a8 <col:13> 'int' lvalue Var 0x29238f0 'y' 'int'
|   | |   `-IntegerLiteral 0x29247d0 <col:16> 'int' 1
|   | |-CompoundStmt 0x29248c8 <line:153:4, line:155:4>
|   | | `-BinaryOperator 0x29248a0 <line:154:7, col:17> 'int' lvalue '='
|   | |   |-DeclRefExpr 0x2924858 <col:7> 'int' lvalue Var 0x291de10 'counter22' 'int'
|   | |   `-IntegerLiteral 0x2924880 <col:17> 'int' 1
|   | `-<<<NULL>>>
|   |-IfStmt 0x2924ae0 <line:156:4, line:159:4>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2924a28 <line:156:7, col:24> '_Bool' '&&'
|   | | |-BinaryOperator 0x2924978 <col:7, col:10> '_Bool' '=='
|   | | | |-ImplicitCastExpr 0x2924960 <col:7> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2924918 <col:7> 'int' lvalue Var 0x29238f0 'y' 'int'
|   | | | `-IntegerLiteral 0x2924940 <col:10> 'int' 0
|   | | `-BinaryOperator 0x2924a00 <col:13, col:24> '_Bool' '=='
|   | |   |-ImplicitCastExpr 0x29249e8 <col:13> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x29249a0 <col:13> 'int' lvalue Var 0x291dd80 'counter11' 'int'
|   | |   `-IntegerLiteral 0x29249c8 <col:24> 'int' 1
|   | |-CompoundStmt 0x2924ac0 <line:157:4, line:159:4>
|   | | `-BinaryOperator 0x2924a98 <line:158:7, col:16> 'int' lvalue '='
|   | |   |-DeclRefExpr 0x2924a50 <col:7> 'int' lvalue Var 0x291dc60 'counter1' 'int'
|   | |   `-IntegerLiteral 0x2924a78 <col:16> 'int' 1
|   | `-<<<NULL>>>
|   |-IfStmt 0x2924eb0 <line:160:4, line:163:4>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2924df8 <line:160:7, col:24> '_Bool' '&&'
|   | | |-BinaryOperator 0x2924d48 <col:7, col:10> '_Bool' '=='
|   | | | |-ImplicitCastExpr 0x2924d30 <col:7> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2924b10 <col:7> 'int' lvalue Var 0x29238f0 'y' 'int'
|   | | | `-IntegerLiteral 0x2924b38 <col:10> 'int' 1
|   | | `-BinaryOperator 0x2924dd0 <col:13, col:24> '_Bool' '=='
|   | |   |-ImplicitCastExpr 0x2924db8 <col:13> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x2924d70 <col:13> 'int' lvalue Var 0x291de10 'counter22' 'int'
|   | |   `-IntegerLiteral 0x2924d98 <col:24> 'int' 1
|   | |-CompoundStmt 0x2924e90 <line:161:4, line:163:4>
|   | | `-BinaryOperator 0x2924e68 <line:162:7, col:16> 'int' lvalue '='
|   | |   |-DeclRefExpr 0x2924e20 <col:7> 'int' lvalue Var 0x291dcf0 'counter2' 'int'
|   | |   `-IntegerLiteral 0x2924e48 <col:16> 'int' 1
|   | `-<<<NULL>>>
|   |-IfStmt 0x29259d8 <line:164:4, line:197:4>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2924ff0 <line:164:7, col:23> '_Bool' '&&'
|   | | |-BinaryOperator 0x2924f40 <col:7, col:10> '_Bool' '=='
|   | | | |-ImplicitCastExpr 0x2924f28 <col:7> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2924ee0 <col:7> 'int' lvalue Var 0x29238f0 'y' 'int'
|   | | | `-IntegerLiteral 0x2924f08 <col:10> 'int' 0
|   | | `-BinaryOperator 0x2924fc8 <col:13, col:23> '_Bool' '>='
|   | |   |-ImplicitCastExpr 0x2924fb0 <col:13> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x2924f68 <col:13> 'int' lvalue Var 0x291dc60 'counter1' 'int'
|   | |   `-IntegerLiteral 0x2924f90 <col:23> 'int' 1
|   | |-CompoundStmt 0x2925990 <line:165:4, line:197:4>
|   | | |-IfStmt 0x2925218 <line:167:7, line:171:7>
|   | | | |-<<<NULL>>>
|   | | | |-BinaryOperator 0x29250c8 <line:167:10, col:15> '_Bool' '=='
|   | | | | |-ImplicitCastExpr 0x29250b0 <col:10> 'int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x2925068 <col:10> 'int' lvalue Var 0x29237d0 'one' 'int'
|   | | | | `-IntegerLiteral 0x2925090 <col:15> 'int' 10
|   | | | |-CompoundStmt 0x2925200 <line:168:7, line:171:7>
|   | | | `-<<<NULL>>>
|   | | |-IfStmt 0x2925378 <line:172:7, line:176:7>
|   | | | |-<<<NULL>>>
|   | | | |-BinaryOperator 0x29252a8 <line:172:10, col:15> '_Bool' '=='
|   | | | | |-ImplicitCastExpr 0x2925290 <col:10> 'int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x2925248 <col:10> 'int' lvalue Var 0x29237d0 'one' 'int'
|   | | | | `-IntegerLiteral 0x2925270 <col:15> 'int' 55
|   | | | |-CompoundStmt 0x2925360 <line:173:7, line:176:7>
|   | | | `-<<<NULL>>>
|   | | |-IfStmt 0x29254d8 <line:177:7, line:181:7>
|   | | | |-<<<NULL>>>
|   | | | |-BinaryOperator 0x2925408 <line:177:10, col:15> '_Bool' '=='
|   | | | | |-ImplicitCastExpr 0x29253f0 <col:10> 'int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x29253a8 <col:10> 'int' lvalue Var 0x29237d0 'one' 'int'
|   | | | | `-IntegerLiteral 0x29253d0 <col:15> 'int' 79
|   | | | |-CompoundStmt 0x29254c0 <line:178:7, line:181:7>
|   | | | `-<<<NULL>>>
|   | | |-IfStmt 0x29256b0 <line:182:7, line:186:7>
|   | | | |-<<<NULL>>>
|   | | | |-BinaryOperator 0x2925568 <line:182:10, col:15> '_Bool' '=='
|   | | | | |-ImplicitCastExpr 0x2925550 <col:10> 'int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x2925508 <col:10> 'int' lvalue Var 0x29237d0 'one' 'int'
|   | | | | `-IntegerLiteral 0x2925530 <col:15> 'int' 99
|   | | | |-CompoundStmt 0x2925698 <line:183:7, line:186:7>
|   | | | `-<<<NULL>>>
|   | | |-IfStmt 0x2925808 <line:187:7, line:191:7>
|   | | | |-<<<NULL>>>
|   | | | |-BinaryOperator 0x2925740 <line:187:10, col:15> '_Bool' '=='
|   | | | | |-ImplicitCastExpr 0x2925728 <col:10> 'int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x29256e0 <col:10> 'int' lvalue Var 0x29237d0 'one' 'int'
|   | | | | `-IntegerLiteral 0x2925708 <col:15> 'int' 56
|   | | | |-CompoundStmt 0x29257f0 <line:188:7, line:191:7>
|   | | | `-<<<NULL>>>
|   | | `-IfStmt 0x2925960 <line:192:7, line:196:7>
|   | |   |-<<<NULL>>>
|   | |   |-BinaryOperator 0x2925898 <line:192:10, col:15> '_Bool' '=='
|   | |   | |-ImplicitCastExpr 0x2925880 <col:10> 'int' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x2925838 <col:10> 'int' lvalue Var 0x29237d0 'one' 'int'
|   | |   | `-IntegerLiteral 0x2925860 <col:15> 'int' 77
|   | |   |-CompoundStmt 0x2925948 <line:193:7, line:196:7>
|   | |   `-<<<NULL>>>
|   | `-<<<NULL>>>
|   |-IfStmt 0x2926428 <line:198:4, line:231:4>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2925b18 <line:198:7, col:23> '_Bool' '&&'
|   | | |-BinaryOperator 0x2925a68 <col:7, col:10> '_Bool' '=='
|   | | | |-ImplicitCastExpr 0x2925a50 <col:7> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2925a08 <col:7> 'int' lvalue Var 0x29238f0 'y' 'int'
|   | | | `-IntegerLiteral 0x2925a30 <col:10> 'int' 1
|   | | `-BinaryOperator 0x2925af0 <col:13, col:23> '_Bool' '>='
|   | |   |-ImplicitCastExpr 0x2925ad8 <col:13> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x2925a90 <col:13> 'int' lvalue Var 0x291dcf0 'counter2' 'int'
|   | |   `-IntegerLiteral 0x2925ab8 <col:23> 'int' 1
|   | |-CompoundStmt 0x29263e0 <line:199:4, line:231:4>
|   | | |-IfStmt 0x2925cc0 <line:201:7, line:205:7>
|   | | | |-<<<NULL>>>
|   | | | |-BinaryOperator 0x2925bf0 <line:201:10, col:15> '_Bool' '=='
|   | | | | |-ImplicitCastExpr 0x2925bd8 <col:10> 'int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x2925b90 <col:10> 'int' lvalue Var 0x2923860 'two' 'int'
|   | | | | `-IntegerLiteral 0x2925bb8 <col:15> 'int' 24
|   | | | |-CompoundStmt 0x2925ca8 <line:202:7, line:205:7>
|   | | | `-<<<NULL>>>
|   | | |-IfStmt 0x2925e48 <line:206:7, line:210:7>
|   | | | |-<<<NULL>>>
|   | | | |-BinaryOperator 0x2925d78 <line:206:10, col:15> '_Bool' '=='
|   | | | | |-ImplicitCastExpr 0x2925d60 <col:10> 'int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x2925cf0 <col:10> 'int' lvalue Var 0x2923860 'two' 'int'
|   | | | | `-IntegerLiteral 0x2925d40 <col:15> 'int' 43
|   | | | |-CompoundStmt 0x2925e30 <line:207:7, line:210:7>
|   | | | `-<<<NULL>>>
|   | | |-IfStmt 0x2925fa8 <line:211:7, line:215:7>
|   | | | |-<<<NULL>>>
|   | | | |-BinaryOperator 0x2925ed8 <line:211:10, col:15> '_Bool' '=='
|   | | | | |-ImplicitCastExpr 0x2925ec0 <col:10> 'int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x2925e78 <col:10> 'int' lvalue Var 0x2923860 'two' 'int'
|   | | | | `-IntegerLiteral 0x2925ea0 <col:15> 'int' 88
|   | | | |-CompoundStmt 0x2925f90 <line:212:7, line:215:7>
|   | | | `-<<<NULL>>>
|   | | |-IfStmt 0x2926100 <line:216:7, line:220:7>
|   | | | |-<<<NULL>>>
|   | | | |-BinaryOperator 0x2926038 <line:216:10, col:15> '_Bool' '=='
|   | | | | |-ImplicitCastExpr 0x2926020 <col:10> 'int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x2925fd8 <col:10> 'int' lvalue Var 0x2923860 'two' 'int'
|   | | | | `-IntegerLiteral 0x2926000 <col:15> 'int' 28
|   | | | |-CompoundStmt 0x29260e8 <line:217:7, line:220:7>
|   | | | `-<<<NULL>>>
|   | | |-IfStmt 0x2926258 <line:221:7, line:225:7>
|   | | | |-<<<NULL>>>
|   | | | |-BinaryOperator 0x2926190 <line:221:10, col:15> '_Bool' '=='
|   | | | | |-ImplicitCastExpr 0x2926178 <col:10> 'int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x2926130 <col:10> 'int' lvalue Var 0x2923860 'two' 'int'
|   | | | | `-IntegerLiteral 0x2926158 <col:15> 'int' 69
|   | | | |-CompoundStmt 0x2926240 <line:222:7, line:225:7>
|   | | | `-<<<NULL>>>
|   | | `-IfStmt 0x29263b0 <line:226:7, line:230:7>
|   | |   |-<<<NULL>>>
|   | |   |-BinaryOperator 0x29262e8 <line:226:10, col:15> '_Bool' '=='
|   | |   | |-ImplicitCastExpr 0x29262d0 <col:10> 'int' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x2926288 <col:10> 'int' lvalue Var 0x2923860 'two' 'int'
|   | |   | `-IntegerLiteral 0x29262b0 <col:15> 'int' 99
|   | |   |-CompoundStmt 0x2926398 <line:227:7, line:230:7>
|   | |   `-<<<NULL>>>
|   | `-<<<NULL>>>
|   |-IfStmt 0x29264f8 <line:232:4, line:237:4>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29264b8 <line:232:7, col:12> '_Bool' '>='
|   | | |-ImplicitCastExpr 0x29264a0 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2926458 <col:7> 'int' lvalue Var 0x29237d0 'one' 'int'
|   | | `-IntegerLiteral 0x2926480 <col:12> 'int' 100
|   | |-CompoundStmt 0x29264e0 <line:233:4, line:237:4>
|   | `-<<<NULL>>>
|   |-IfStmt 0x29265c8 <line:238:4, line:243:4>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2926588 <line:238:7, col:12> '_Bool' '>='
|   | | |-ImplicitCastExpr 0x2926570 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2926528 <col:7> 'int' lvalue Var 0x2923860 'two' 'int'
|   | | `-IntegerLiteral 0x2926550 <col:12> 'int' 100
|   | |-CompoundStmt 0x29265b0 <line:239:4, line:243:4>
|   | `-<<<NULL>>>
|   |-IfStmt 0x2926908 <line:244:4, line:247:4>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29268a8 <line:244:7, col:42> '_Bool' '&&'
|   | | |-ParenExpr 0x2926730 <col:7, col:24> '_Bool'
|   | | | `-BinaryOperator 0x2926708 <col:8, col:21> '_Bool' '&&'
|   | | |   |-BinaryOperator 0x2926658 <col:8, col:12> '_Bool' '<'
|   | | |   | |-ImplicitCastExpr 0x2926640 <col:8> 'int' <LValueToRValue>
|   | | |   | | `-DeclRefExpr 0x29265f8 <col:8> 'int' lvalue Var 0x29237d0 'one' 'int'
|   | | |   | `-IntegerLiteral 0x2926620 <col:12> 'int' 101
|   | | |   `-BinaryOperator 0x29266e0 <col:17, col:21> '_Bool' '<'
|   | | |     |-ImplicitCastExpr 0x29266c8 <col:17> 'int' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x2926680 <col:17> 'int' lvalue Var 0x2923860 'two' 'int'
|   | | |     `-IntegerLiteral 0x29266a8 <col:21> 'int' 101
|   | | `-ParenExpr 0x2926888 <col:27, col:42> '_Bool'
|   | |   `-BinaryOperator 0x2926860 <col:28, col:41> '_Bool' '&&'
|   | |     |-BinaryOperator 0x29267b0 <col:28, col:33> '_Bool' '>='
|   | |     | |-ImplicitCastExpr 0x2926798 <col:28> 'int' <LValueToRValue>
|   | |     | | `-DeclRefExpr 0x2926750 <col:28> 'int' lvalue Var 0x29237d0 'one' 'int'
|   | |     | `-IntegerLiteral 0x2926778 <col:33> 'int' 0
|   | |     `-BinaryOperator 0x2926838 <col:36, col:41> '_Bool' '>='
|   | |       |-ImplicitCastExpr 0x2926820 <col:36> 'int' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x29267d8 <col:36> 'int' lvalue Var 0x2923860 'two' 'int'
|   | |       `-IntegerLiteral 0x2926800 <col:41> 'int' 0
|   | |-CompoundStmt 0x29268e8 <line:245:4, line:247:4>
|   | | `-GotoStmt 0x29268d0 <line:246:7, col:12> 'g' 0x2924130
|   | `-<<<NULL>>>
|   `-LabelStmt 0x29269e0 <line:248:4, col:5> 'b'
|     `-NullStmt 0x2926988 <col:5>
|-FunctionDecl 0x2926b40 prev 0x291fd60 <line:250:1, line:254:1> line:250:10 setplayer 'enum whoplays (enum whoplays)'
| |-ParmVarDecl 0x2926ab8 <col:20, col:29> col:29 used p 'enum whoplays'
| `-CompoundStmt 0x2926d10 <line:251:1, line:254:1>
|   |-DeclStmt 0x2926ca0 <line:252:4, col:21>
|   | `-VarDecl 0x2926c00 <col:4, col:20> col:13 used player 'enum whoplays' cinit
|   |   `-ImplicitCastExpr 0x2926c88 <col:20> 'enum whoplays' <LValueToRValue>
|   |     `-DeclRefExpr 0x2926c60 <col:20> 'enum whoplays' lvalue ParmVar 0x2926ab8 'p' 'enum whoplays'
|   `-ReturnStmt 0x2926cf8 <line:253:4, col:11>
|     `-ImplicitCastExpr 0x2926ce0 <col:11> 'enum whoplays' <LValueToRValue>
|       `-DeclRefExpr 0x2926cb8 <col:11> 'enum whoplays' lvalue Var 0x2926c00 'player' 'enum whoplays'
|-FunctionDecl 0x2926ed8 prev 0x291e090 <line:256:1, line:1451:1> line:256:6 used graph 'void (int, int, int)'
| |-ParmVarDecl 0x2926d60 <col:12, col:16> col:16 used y 'int'
| |-ParmVarDecl 0x2926dd0 <col:18, col:22> col:22 used one 'int'
| |-ParmVarDecl 0x2926e40 <col:26, col:30> col:30 used two 'int'
| `-CompoundStmt 0x294d8e0 <line:257:1, line:1451:1>
|   |-DeclStmt 0x2927090 <line:258:4, col:22>
|   | |-VarDecl 0x2926fa8 <col:4, col:8> col:8 used a 'int'
|   | `-VarDecl 0x2927018 <col:4, col:14> col:14 used b 'int'
|   |-DeclStmt 0x2927340 <line:261:4, col:20>
|   | |-VarDecl 0x2927218 <col:4, col:14> col:8 count 'int' cinit
|   | | `-IntegerLiteral 0x2927278 <col:14> 'int' 0
|   | `-VarDecl 0x29272a8 <col:4, col:18> col:16 r 'int' cinit
|   |   `-IntegerLiteral 0x2927308 <col:18> 'int' 21
|   |-IfStmt 0x29278b0 <line:262:4, line:273:4>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29273b8 <line:262:7, col:10> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29273a0 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2927358 <col:7> 'int' lvalue ParmVar 0x2926d60 'y' 'int'
|   | | `-IntegerLiteral 0x2927380 <col:10> 'int' 0
|   | |-CompoundStmt 0x2927898 <line:263:4, line:273:4>
|   | `-<<<NULL>>>
|   |-IfStmt 0x2927e18 <line:274:4, line:285:4>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2927940 <line:274:7, col:10> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2927928 <col:7> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29278e0 <col:7> 'int' lvalue ParmVar 0x2926d60 'y' 'int'
|   | | `-IntegerLiteral 0x2927908 <col:10> 'int' 1
|   | |-CompoundStmt 0x2927e00 <line:275:4, line:285:4>
|   | `-<<<NULL>>>
|   |-ForStmt 0x29285b0 <line:293:4, line:296:4>
|   | |-DeclStmt 0x2928340 <line:293:8, col:16>
|   | | `-VarDecl 0x29282c0 <col:8, col:14> col:12 used e 'int' cinit
|   | |   `-IntegerLiteral 0x2928320 <col:14> 'int' 73
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29283b8 <col:17, col:19> '_Bool' '<'
|   | | |-ImplicitCastExpr 0x29283a0 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2928358 <col:17> 'int' lvalue Var 0x29282c0 'e' 'int'
|   | | `-IntegerLiteral 0x2928380 <col:19> 'int' 590
|   | |-BinaryOperator 0x2928490 <col:23, col:27> 'int' lvalue '='
|   | | |-DeclRefExpr 0x29283e0 <col:23> 'int' lvalue Var 0x29282c0 'e' 'int'
|   | | `-BinaryOperator 0x2928468 <col:25, col:27> 'int' '+'
|   | |   |-ImplicitCastExpr 0x2928450 <col:25> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x2928408 <col:25> 'int' lvalue Var 0x29282c0 'e' 'int'
|   | |   `-IntegerLiteral 0x2928430 <col:27> 'int' 58
|   | `-CompoundStmt 0x2928598 <line:294:4, line:296:4>
|   |-ForStmt 0x29288e8 <line:297:4, line:300:4>
|   | |-DeclStmt 0x2928678 <line:297:8, col:16>
|   | | `-VarDecl 0x29285f8 <col:8, col:14> col:12 used d 'int' cinit
|   | |   `-IntegerLiteral 0x2928658 <col:14> 'int' 82
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29286f0 <col:17, col:19> '_Bool' '<'
|   | | |-ImplicitCastExpr 0x29286d8 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2928690 <col:17> 'int' lvalue Var 0x29285f8 'd' 'int'
|   | | `-IntegerLiteral 0x29286b8 <col:19> 'int' 298
|   | |-BinaryOperator 0x29287c8 <col:23, col:27> 'int' lvalue '='
|   | | |-DeclRefExpr 0x2928718 <col:23> 'int' lvalue Var 0x29285f8 'd' 'int'
|   | | `-BinaryOperator 0x29287a0 <col:25, col:27> 'int' '+'
|   | |   |-ImplicitCastExpr 0x2928788 <col:25> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x2928740 <col:25> 'int' lvalue Var 0x29285f8 'd' 'int'
|   | |   `-IntegerLiteral 0x2928768 <col:27> 'int' 24
|   | `-CompoundStmt 0x29288d0 <line:298:4, line:300:4>
|   |-CallExpr 0x2933190 <line:626:4, col:26> 'void'
|   | |-ImplicitCastExpr 0x2933178 <col:4> 'void (*)(int, int, int, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2933120 <col:4> 'void (int, int, int, int)' lvalue Function 0x291e4e0 'ladder' 'void (int, int, int, int)'
|   | |-IntegerLiteral 0x29330a0 <col:11> 'int' 392
|   | |-IntegerLiteral 0x29330c0 <col:15> 'int' 214
|   | |-IntegerLiteral 0x29330e0 <col:19> 'int' 566
|   | `-IntegerLiteral 0x2933100 <col:23> 'int' 286
|   |-CallExpr 0x29332f0 <line:627:4, col:26> 'void'
|   | |-ImplicitCastExpr 0x29332d8 <col:4> 'void (*)(int, int, int, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x29332b0 <col:4> 'void (int, int, int, int)' lvalue Function 0x291e4e0 'ladder' 'void (int, int, int, int)'
|   | |-IntegerLiteral 0x2933230 <col:11> 'int' 218
|   | |-IntegerLiteral 0x2933250 <col:15> 'int' 142
|   | |-IntegerLiteral 0x2933270 <col:19> 'int' 276
|   | `-IntegerLiteral 0x2933290 <col:23> 'int' 166
|   |-CallExpr 0x2933450 <line:629:4, col:25> 'void'
|   | |-ImplicitCastExpr 0x2933438 <col:4> 'void (*)(int, int, int, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2933410 <col:4> 'void (int, int, int, int)' lvalue Function 0x291e4e0 'ladder' 'void (int, int, int, int)'
|   | |-IntegerLiteral 0x2933390 <col:11> 'int' 44
|   | |-IntegerLiteral 0x29333b0 <col:14> 'int' 166
|   | |-IntegerLiteral 0x29333d0 <col:18> 'int' 218
|   | `-IntegerLiteral 0x29333f0 <col:22> 'int' 238
|   |-CallExpr 0x29335b0 <line:630:4, col:26> 'void'
|   | |-ImplicitCastExpr 0x2933598 <col:4> 'void (*)(int, int, int, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2933570 <col:4> 'void (int, int, int, int)' lvalue Function 0x291e4e0 'ladder' 'void (int, int, int, int)'
|   | |-IntegerLiteral 0x29334f0 <col:11> 'int' 160
|   | |-IntegerLiteral 0x2933510 <col:15> 'int' 190
|   | |-IntegerLiteral 0x2933530 <col:19> 'int' 450
|   | `-IntegerLiteral 0x2933550 <col:23> 'int' 166
|   |-CallExpr 0x2933710 <line:631:4, col:24> 'void'
|   | |-ImplicitCastExpr 0x29336f8 <col:4> 'void (*)(int, int, int, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x29336d0 <col:4> 'void (int, int, int, int)' lvalue Function 0x291e4e0 'ladder' 'void (int, int, int, int)'
|   | |-IntegerLiteral 0x2933650 <col:11> 'int' 450
|   | |-IntegerLiteral 0x2933670 <col:15> 'int' 70
|   | |-IntegerLiteral 0x2933690 <col:18> 'int' 450
|   | `-IntegerLiteral 0x29336b0 <col:22> 'int' 94
|   |-CallExpr 0x2933870 <line:632:4, col:24> 'void'
|   | |-ImplicitCastExpr 0x2933858 <col:4> 'void (*)(int, int, int, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2933830 <col:4> 'void (int, int, int, int)' lvalue Function 0x291fbc0 'snake' 'void (int, int, int, int)'
|   | |-IntegerLiteral 0x29337b0 <col:10> 'int' 508
|   | |-IntegerLiteral 0x29337d0 <col:14> 'int' 70
|   | |-IntegerLiteral 0x29337f0 <col:17> 'int' 556
|   | `-IntegerLiteral 0x2933810 <col:21> 'int' 238
|   |-CallExpr 0x29339d0 <line:633:4, col:25> 'void'
|   | |-ImplicitCastExpr 0x29339b8 <col:4> 'void (*)(int, int, int, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2933990 <col:4> 'void (int, int, int, int)' lvalue Function 0x291fbc0 'snake' 'void (int, int, int, int)'
|   | |-IntegerLiteral 0x2933910 <col:10> 'int' 334
|   | |-IntegerLiteral 0x2933930 <col:14> 'int' 166
|   | |-IntegerLiteral 0x2933950 <col:18> 'int' 334
|   | `-IntegerLiteral 0x2933970 <col:22> 'int' 238
|   |-CallExpr 0x2933b30 <line:634:4, col:25> 'void'
|   | |-ImplicitCastExpr 0x2933b18 <col:4> 'void (*)(int, int, int, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2933af0 <col:4> 'void (int, int, int, int)' lvalue Function 0x291fbc0 'snake' 'void (int, int, int, int)'
|   | |-IntegerLiteral 0x2933a70 <col:10> 'int' 392
|   | |-IntegerLiteral 0x2933a90 <col:14> 'int' 118
|   | |-IntegerLiteral 0x2933ab0 <col:18> 'int' 102
|   | `-IntegerLiteral 0x2933ad0 <col:22> 'int' 166
|   |-CallExpr 0x2933c90 <line:635:4, col:25> 'void'
|   | |-ImplicitCastExpr 0x2933c78 <col:4> 'void (*)(int, int, int, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2933c50 <col:4> 'void (int, int, int, int)' lvalue Function 0x291fbc0 'snake' 'void (int, int, int, int)'
|   | |-IntegerLiteral 0x2933bd0 <col:10> 'int' 450
|   | |-IntegerLiteral 0x2933bf0 <col:14> 'int' 238
|   | |-IntegerLiteral 0x2933c10 <col:18> 'int' 160
|   | `-IntegerLiteral 0x2933c30 <col:22> 'int' 262
|   |-CallExpr 0x2933df0 <line:636:4, col:25> 'void'
|   | |-ImplicitCastExpr 0x2933dd8 <col:4> 'void (*)(int, int, int, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2933db0 <col:4> 'void (int, int, int, int)' lvalue Function 0x291fbc0 'snake' 'void (int, int, int, int)'
|   | |-IntegerLiteral 0x2933d30 <col:10> 'int' 508
|   | |-IntegerLiteral 0x2933d50 <col:14> 'int' 142
|   | |-IntegerLiteral 0x2933d70 <col:18> 'int' 508
|   | `-IntegerLiteral 0x2933d90 <col:22> 'int' 214
|   |-CallExpr 0x2933f50 <line:637:4, col:15> 'void'
|   | |-ImplicitCastExpr 0x2933f38 <col:4> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2933ee0 <col:4> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |-IntegerLiteral 0x2933ea0 <col:8> 'int' 515
|   | `-IntegerLiteral 0x2933ec0 <col:12> 'int' 310
|   |-CallExpr 0x29341f8 <line:640:4, col:15> 'void'
|   | |-ImplicitCastExpr 0x29341e0 <col:4> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x29341b8 <col:4> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |-IntegerLiteral 0x2934178 <col:8> 'int' 515
|   | `-IntegerLiteral 0x2934198 <col:12> 'int' 330
|   |-IfStmt 0x2934500 <line:645:7, line:648:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29343a8 <line:645:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2934390 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2934348 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2934370 <col:15> 'int' 1
|   | |-CompoundStmt 0x29344e0 <line:646:7, line:648:7>
|   | | `-CallExpr 0x29344a8 <line:647:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x2934490 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2934468 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2934428 <col:9> 'int' 44
|   | |   `-IntegerLiteral 0x2934448 <col:12> 'int' 286
|   | `-<<<NULL>>>
|   |-IfStmt 0x29346e8 <line:649:7, line:652:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2934590 <line:649:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2934578 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2934530 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2934558 <col:15> 'int' 2
|   | |-CompoundStmt 0x29346c8 <line:650:7, line:652:7>
|   | | `-CallExpr 0x2934690 <line:651:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2934678 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2934650 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2934610 <col:9> 'int' 102
|   | |   `-IntegerLiteral 0x2934630 <col:13> 'int' 286
|   | `-<<<NULL>>>
|   |-IfStmt 0x29348d0 <line:653:7, line:656:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2934778 <line:653:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2934760 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2934718 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2934740 <col:15> 'int' 3
|   | |-CompoundStmt 0x29348b0 <line:654:7, line:656:7>
|   | | `-CallExpr 0x2934878 <line:655:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2934860 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2934838 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29347f8 <col:9> 'int' 160
|   | |   `-IntegerLiteral 0x2934818 <col:13> 'int' 286
|   | `-<<<NULL>>>
|   |-IfStmt 0x2934ab8 <line:657:7, line:660:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2934960 <line:657:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2934948 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2934900 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2934928 <col:15> 'int' 4
|   | |-CompoundStmt 0x2934a98 <line:658:7, line:660:7>
|   | | `-CallExpr 0x2934a60 <line:659:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2934a48 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2934a20 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29349e0 <col:9> 'int' 218
|   | |   `-IntegerLiteral 0x2934a00 <col:13> 'int' 286
|   | `-<<<NULL>>>
|   |-IfStmt 0x2934ca0 <line:661:7, line:664:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2934b48 <line:661:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2934b30 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2934ae8 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2934b10 <col:15> 'int' 5
|   | |-CompoundStmt 0x2934c80 <line:662:7, line:664:7>
|   | | `-CallExpr 0x2934c48 <line:663:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2934c30 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2934c08 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2934bc8 <col:9> 'int' 276
|   | |   `-IntegerLiteral 0x2934be8 <col:13> 'int' 286
|   | `-<<<NULL>>>
|   |-IfStmt 0x2934ea0 <line:665:7, line:668:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2934d30 <line:665:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2934d18 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2934cd0 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2934cf8 <col:15> 'int' 6
|   | |-CompoundStmt 0x2934e80 <line:666:7, line:668:7>
|   | | `-CallExpr 0x2934e48 <line:667:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2934e30 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2934df0 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2934db0 <col:9> 'int' 334
|   | |   `-IntegerLiteral 0x2934dd0 <col:13> 'int' 286
|   | `-<<<NULL>>>
|   |-IfStmt 0x2935088 <line:669:7, line:672:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2934f30 <line:669:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2934f18 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2934ed0 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2934ef8 <col:15> 'int' 7
|   | |-CompoundStmt 0x2935068 <line:670:7, line:672:7>
|   | | `-CallExpr 0x2935030 <line:671:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2935018 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2934ff0 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2934fb0 <col:9> 'int' 392
|   | |   `-IntegerLiteral 0x2934fd0 <col:13> 'int' 286
|   | `-<<<NULL>>>
|   |-IfStmt 0x2935270 <line:673:7, line:676:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2935118 <line:673:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2935100 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29350b8 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x29350e0 <col:15> 'int' 8
|   | |-CompoundStmt 0x2935250 <line:674:7, line:676:7>
|   | | `-CallExpr 0x2935218 <line:675:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2935200 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29351d8 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2935198 <col:9> 'int' 450
|   | |   `-IntegerLiteral 0x29351b8 <col:13> 'int' 286
|   | `-<<<NULL>>>
|   |-IfStmt 0x2935458 <line:677:7, line:680:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2935300 <line:677:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29352e8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29352a0 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x29352c8 <col:15> 'int' 9
|   | |-CompoundStmt 0x2935438 <line:678:7, line:680:7>
|   | | `-CallExpr 0x2935400 <line:679:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x29353e8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29353c0 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2935380 <col:9> 'int' 508
|   | |   `-IntegerLiteral 0x29353a0 <col:13> 'int' 286
|   | `-<<<NULL>>>
|   |-IfStmt 0x2935640 <line:681:7, line:684:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29354e8 <line:681:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29354d0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2935488 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x29354b0 <col:15> 'int' 10
|   | |-CompoundStmt 0x2935620 <line:682:7, line:684:7>
|   | | `-CallExpr 0x29355e8 <line:683:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x29355d0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29355a8 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2935568 <col:9> 'int' 566
|   | |   `-IntegerLiteral 0x2935588 <col:13> 'int' 286
|   | `-<<<NULL>>>
|   |-IfStmt 0x2935828 <line:685:7, line:688:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29356d0 <line:685:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29356b8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2935670 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2935698 <col:15> 'int' 11
|   | |-CompoundStmt 0x2935808 <line:686:7, line:688:7>
|   | | `-CallExpr 0x29357d0 <line:687:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x29357b8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2935790 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2935750 <col:9> 'int' 44
|   | |   `-IntegerLiteral 0x2935770 <col:12> 'int' 262
|   | `-<<<NULL>>>
|   |-IfStmt 0x2935a10 <line:689:7, line:692:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29358b8 <line:689:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29358a0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2935858 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2935880 <col:15> 'int' 12
|   | |-CompoundStmt 0x29359f0 <line:690:7, line:692:7>
|   | | `-CallExpr 0x29359b8 <line:691:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x29359a0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2935978 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2935938 <col:9> 'int' 102
|   | |   `-IntegerLiteral 0x2935958 <col:13> 'int' 262
|   | `-<<<NULL>>>
|   |-IfStmt 0x2935bf8 <line:693:7, line:696:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2935aa0 <line:693:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2935a88 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2935a40 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2935a68 <col:15> 'int' 13
|   | |-CompoundStmt 0x2935bd8 <line:694:7, line:696:7>
|   | | `-CallExpr 0x2935ba0 <line:695:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2935b88 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2935b60 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2935b20 <col:9> 'int' 160
|   | |   `-IntegerLiteral 0x2935b40 <col:13> 'int' 262
|   | `-<<<NULL>>>
|   |-IfStmt 0x2935de0 <line:697:7, line:700:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2935c88 <line:697:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2935c70 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2935c28 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2935c50 <col:15> 'int' 14
|   | |-CompoundStmt 0x2935dc0 <line:698:7, line:700:7>
|   | | `-CallExpr 0x2935d88 <line:699:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2935d70 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2935d48 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2935d08 <col:9> 'int' 218
|   | |   `-IntegerLiteral 0x2935d28 <col:13> 'int' 262
|   | `-<<<NULL>>>
|   |-IfStmt 0x2935ff8 <line:701:7, line:704:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2935ea0 <line:701:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2935e88 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2935e40 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2935e68 <col:15> 'int' 15
|   | |-CompoundStmt 0x2935fd8 <line:702:7, line:704:7>
|   | | `-CallExpr 0x2935fa0 <line:703:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2935f88 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2935f60 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2935f20 <col:9> 'int' 276
|   | |   `-IntegerLiteral 0x2935f40 <col:13> 'int' 262
|   | `-<<<NULL>>>
|   |-IfStmt 0x29361e0 <line:705:7, line:708:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2936088 <line:705:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2936070 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2936028 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2936050 <col:15> 'int' 16
|   | |-CompoundStmt 0x29361c0 <line:706:7, line:708:7>
|   | | `-CallExpr 0x2936188 <line:707:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2936170 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2936148 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2936108 <col:9> 'int' 334
|   | |   `-IntegerLiteral 0x2936128 <col:13> 'int' 262
|   | `-<<<NULL>>>
|   |-IfStmt 0x29363c8 <line:709:7, line:712:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2936270 <line:709:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2936258 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2936210 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2936238 <col:15> 'int' 17
|   | |-CompoundStmt 0x29363a8 <line:710:7, line:712:7>
|   | | `-CallExpr 0x2936370 <line:711:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2936358 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2936330 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29362f0 <col:9> 'int' 392
|   | |   `-IntegerLiteral 0x2936310 <col:13> 'int' 262
|   | `-<<<NULL>>>
|   |-IfStmt 0x29365b0 <line:713:7, line:716:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2936458 <line:713:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2936440 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29363f8 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2936420 <col:15> 'int' 18
|   | |-CompoundStmt 0x2936590 <line:714:7, line:716:7>
|   | | `-CallExpr 0x2936558 <line:715:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2936540 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2936518 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29364d8 <col:9> 'int' 450
|   | |   `-IntegerLiteral 0x29364f8 <col:13> 'int' 262
|   | `-<<<NULL>>>
|   |-IfStmt 0x2936798 <line:717:7, line:720:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2936640 <line:717:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2936628 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29365e0 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2936608 <col:15> 'int' 19
|   | |-CompoundStmt 0x2936778 <line:718:7, line:720:7>
|   | | `-CallExpr 0x2936740 <line:719:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2936728 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2936700 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29366c0 <col:9> 'int' 508
|   | |   `-IntegerLiteral 0x29366e0 <col:13> 'int' 262
|   | `-<<<NULL>>>
|   |-IfStmt 0x2936980 <line:721:7, line:724:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2936828 <line:721:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2936810 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29367c8 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x29367f0 <col:15> 'int' 20
|   | |-CompoundStmt 0x2936960 <line:722:7, line:724:7>
|   | | `-CallExpr 0x2936928 <line:723:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2936910 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29368e8 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29368a8 <col:9> 'int' 566
|   | |   `-IntegerLiteral 0x29368c8 <col:13> 'int' 262
|   | `-<<<NULL>>>
|   |-IfStmt 0x2936b68 <line:725:7, line:728:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2936a10 <line:725:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29369f8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29369b0 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x29369d8 <col:15> 'int' 21
|   | |-CompoundStmt 0x2936b48 <line:726:7, line:728:7>
|   | | `-CallExpr 0x2936b10 <line:727:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x2936af8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2936ad0 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2936a90 <col:9> 'int' 44
|   | |   `-IntegerLiteral 0x2936ab0 <col:12> 'int' 238
|   | `-<<<NULL>>>
|   |-IfStmt 0x2936d50 <line:729:7, line:732:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2936bf8 <line:729:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2936be0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2936b98 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2936bc0 <col:15> 'int' 22
|   | |-CompoundStmt 0x2936d30 <line:730:7, line:732:7>
|   | | `-CallExpr 0x2936cf8 <line:731:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2936ce0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2936cb8 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2936c78 <col:9> 'int' 102
|   | |   `-IntegerLiteral 0x2936c98 <col:13> 'int' 238
|   | `-<<<NULL>>>
|   |-IfStmt 0x2937190 <line:733:7, line:736:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2936de0 <line:733:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2936dc8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2936d80 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2936da8 <col:15> 'int' 23
|   | |-CompoundStmt 0x2937170 <line:734:7, line:736:7>
|   | | `-CallExpr 0x2937138 <line:735:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2937120 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29370f8 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29370b8 <col:9> 'int' 160
|   | |   `-IntegerLiteral 0x29370d8 <col:13> 'int' 238
|   | `-<<<NULL>>>
|   |-IfStmt 0x2937378 <line:737:7, line:740:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2937220 <line:737:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2937208 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29371c0 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x29371e8 <col:15> 'int' 24
|   | |-CompoundStmt 0x2937358 <line:738:7, line:740:7>
|   | | `-CallExpr 0x2937320 <line:739:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2937308 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29372e0 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29372a0 <col:9> 'int' 218
|   | |   `-IntegerLiteral 0x29372c0 <col:13> 'int' 238
|   | `-<<<NULL>>>
|   |-IfStmt 0x2937560 <line:741:7, line:744:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2937408 <line:741:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29373f0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29373a8 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x29373d0 <col:15> 'int' 25
|   | |-CompoundStmt 0x2937540 <line:742:7, line:744:7>
|   | | `-CallExpr 0x2937508 <line:743:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x29374f0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29374c8 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2937488 <col:9> 'int' 276
|   | |   `-IntegerLiteral 0x29374a8 <col:13> 'int' 238
|   | `-<<<NULL>>>
|   |-IfStmt 0x2937748 <line:745:7, line:748:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29375f0 <line:745:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29375d8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2937590 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x29375b8 <col:15> 'int' 26
|   | |-CompoundStmt 0x2937728 <line:746:7, line:748:7>
|   | | `-CallExpr 0x29376f0 <line:747:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x29376d8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29376b0 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2937670 <col:9> 'int' 334
|   | |   `-IntegerLiteral 0x2937690 <col:13> 'int' 238
|   | `-<<<NULL>>>
|   |-IfStmt 0x2937930 <line:749:7, line:752:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29377d8 <line:749:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29377c0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2937778 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x29377a0 <col:15> 'int' 27
|   | |-CompoundStmt 0x2937910 <line:750:7, line:752:7>
|   | | `-CallExpr 0x29378d8 <line:751:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x29378c0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2937898 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2937858 <col:9> 'int' 392
|   | |   `-IntegerLiteral 0x2937878 <col:13> 'int' 238
|   | `-<<<NULL>>>
|   |-IfStmt 0x2937b18 <line:753:7, line:756:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29379c0 <line:753:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29379a8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2937960 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2937988 <col:15> 'int' 28
|   | |-CompoundStmt 0x2937af8 <line:754:7, line:756:7>
|   | | `-CallExpr 0x2937ac0 <line:755:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2937aa8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2937a80 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2937a40 <col:9> 'int' 450
|   | |   `-IntegerLiteral 0x2937a60 <col:13> 'int' 238
|   | `-<<<NULL>>>
|   |-IfStmt 0x2937d00 <line:757:7, line:760:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2937ba8 <line:757:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2937b90 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2937b48 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2937b70 <col:15> 'int' 29
|   | |-CompoundStmt 0x2937ce0 <line:758:7, line:760:7>
|   | | `-CallExpr 0x2937ca8 <line:759:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2937c90 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2937c68 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2937c28 <col:9> 'int' 508
|   | |   `-IntegerLiteral 0x2937c48 <col:13> 'int' 238
|   | `-<<<NULL>>>
|   |-IfStmt 0x2937ee8 <line:761:7, line:764:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2937d90 <line:761:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2937d78 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2937d30 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2937d58 <col:15> 'int' 30
|   | |-CompoundStmt 0x2937ec8 <line:762:7, line:764:7>
|   | | `-CallExpr 0x2937e90 <line:763:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2937e78 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2937e50 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2937e10 <col:9> 'int' 566
|   | |   `-IntegerLiteral 0x2937e30 <col:13> 'int' 238
|   | `-<<<NULL>>>
|   |-IfStmt 0x29380e0 <line:765:7, line:768:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2937f78 <line:765:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2937f60 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2937f18 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2937f40 <col:15> 'int' 31
|   | |-CompoundStmt 0x29380c0 <line:766:7, line:768:7>
|   | | `-CallExpr 0x2938088 <line:767:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x2938070 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2938038 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2937ff8 <col:9> 'int' 44
|   | |   `-IntegerLiteral 0x2938018 <col:12> 'int' 214
|   | `-<<<NULL>>>
|   |-IfStmt 0x29382c8 <line:769:7, line:772:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2938170 <line:769:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2938158 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2938110 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2938138 <col:15> 'int' 32
|   | |-CompoundStmt 0x29382a8 <line:770:7, line:772:7>
|   | | `-CallExpr 0x2938270 <line:771:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2938258 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2938230 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29381f0 <col:9> 'int' 102
|   | |   `-IntegerLiteral 0x2938210 <col:13> 'int' 214
|   | `-<<<NULL>>>
|   |-IfStmt 0x29384b0 <line:773:7, line:776:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2938358 <line:773:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2938340 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29382f8 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2938320 <col:15> 'int' 33
|   | |-CompoundStmt 0x2938490 <line:774:7, line:776:7>
|   | | `-CallExpr 0x2938458 <line:775:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2938440 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2938418 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29383d8 <col:9> 'int' 160
|   | |   `-IntegerLiteral 0x29383f8 <col:13> 'int' 214
|   | `-<<<NULL>>>
|   |-IfStmt 0x2938698 <line:777:7, line:780:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2938540 <line:777:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2938528 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29384e0 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2938508 <col:15> 'int' 34
|   | |-CompoundStmt 0x2938678 <line:778:7, line:780:7>
|   | | `-CallExpr 0x2938640 <line:779:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2938628 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2938600 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29385c0 <col:9> 'int' 218
|   | |   `-IntegerLiteral 0x29385e0 <col:13> 'int' 214
|   | `-<<<NULL>>>
|   |-IfStmt 0x2938880 <line:781:7, line:784:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2938728 <line:781:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2938710 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29386c8 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x29386f0 <col:15> 'int' 35
|   | |-CompoundStmt 0x2938860 <line:782:7, line:784:7>
|   | | `-CallExpr 0x2938828 <line:783:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2938810 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29387e8 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29387a8 <col:9> 'int' 276
|   | |   `-IntegerLiteral 0x29387c8 <col:13> 'int' 214
|   | `-<<<NULL>>>
|   |-IfStmt 0x2938a68 <line:785:7, line:788:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2938910 <line:785:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29388f8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29388b0 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x29388d8 <col:15> 'int' 36
|   | |-CompoundStmt 0x2938a48 <line:786:7, line:788:7>
|   | | `-CallExpr 0x2938a10 <line:787:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x29389f8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29389d0 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2938990 <col:9> 'int' 334
|   | |   `-IntegerLiteral 0x29389b0 <col:13> 'int' 214
|   | `-<<<NULL>>>
|   |-IfStmt 0x2938c50 <line:789:7, line:792:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2938af8 <line:789:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2938ae0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2938a98 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2938ac0 <col:15> 'int' 37
|   | |-CompoundStmt 0x2938c30 <line:790:7, line:792:7>
|   | | `-CallExpr 0x2938bf8 <line:791:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2938be0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2938bb8 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2938b78 <col:9> 'int' 392
|   | |   `-IntegerLiteral 0x2938b98 <col:13> 'int' 214
|   | `-<<<NULL>>>
|   |-IfStmt 0x2938e38 <line:793:7, line:796:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2938ce0 <line:793:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2938cc8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2938c80 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2938ca8 <col:15> 'int' 38
|   | |-CompoundStmt 0x2938e18 <line:794:7, line:796:7>
|   | | `-CallExpr 0x2938de0 <line:795:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2938dc8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2938da0 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2938d60 <col:9> 'int' 450
|   | |   `-IntegerLiteral 0x2938d80 <col:13> 'int' 214
|   | `-<<<NULL>>>
|   |-IfStmt 0x2939020 <line:797:7, line:800:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2938ec8 <line:797:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2938eb0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2938e68 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2938e90 <col:15> 'int' 39
|   | |-CompoundStmt 0x2939000 <line:798:7, line:800:7>
|   | | `-CallExpr 0x2938fc8 <line:799:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2938fb0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2938f88 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2938f48 <col:9> 'int' 508
|   | |   `-IntegerLiteral 0x2938f68 <col:13> 'int' 214
|   | `-<<<NULL>>>
|   |-IfStmt 0x2939238 <line:801:7, line:804:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29390e0 <line:801:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29390c8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2939080 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x29390a8 <col:15> 'int' 40
|   | |-CompoundStmt 0x2939218 <line:802:7, line:804:7>
|   | | `-CallExpr 0x29391e0 <line:803:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x29391c8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29391a0 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2939160 <col:9> 'int' 566
|   | |   `-IntegerLiteral 0x2939180 <col:13> 'int' 214
|   | `-<<<NULL>>>
|   |-IfStmt 0x2939420 <line:805:7, line:808:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29392c8 <line:805:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29392b0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2939268 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2939290 <col:15> 'int' 41
|   | |-CompoundStmt 0x2939400 <line:806:7, line:808:7>
|   | | `-CallExpr 0x29393c8 <line:807:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x29393b0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2939388 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2939348 <col:9> 'int' 44
|   | |   `-IntegerLiteral 0x2939368 <col:12> 'int' 190
|   | `-<<<NULL>>>
|   |-IfStmt 0x2939608 <line:809:7, line:812:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29394b0 <line:809:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2939498 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2939450 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2939478 <col:15> 'int' 42
|   | |-CompoundStmt 0x29395e8 <line:810:7, line:812:7>
|   | | `-CallExpr 0x29395b0 <line:811:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2939598 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2939570 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2939530 <col:9> 'int' 102
|   | |   `-IntegerLiteral 0x2939550 <col:13> 'int' 190
|   | `-<<<NULL>>>
|   |-IfStmt 0x29397f0 <line:813:7, line:816:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2939698 <line:813:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2939680 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2939638 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2939660 <col:15> 'int' 43
|   | |-CompoundStmt 0x29397d0 <line:814:7, line:816:7>
|   | | `-CallExpr 0x2939798 <line:815:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2939780 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2939758 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2939718 <col:9> 'int' 160
|   | |   `-IntegerLiteral 0x2939738 <col:13> 'int' 190
|   | `-<<<NULL>>>
|   |-IfStmt 0x29399d8 <line:817:7, line:820:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2939880 <line:817:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2939868 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2939820 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2939848 <col:15> 'int' 44
|   | |-CompoundStmt 0x29399b8 <line:818:7, line:820:7>
|   | | `-CallExpr 0x2939980 <line:819:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2939968 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2939940 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2939900 <col:9> 'int' 218
|   | |   `-IntegerLiteral 0x2939920 <col:13> 'int' 190
|   | `-<<<NULL>>>
|   |-IfStmt 0x2939bc0 <line:821:7, line:824:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2939a68 <line:821:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2939a50 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2939a08 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2939a30 <col:15> 'int' 45
|   | |-CompoundStmt 0x2939ba0 <line:822:7, line:824:7>
|   | | `-CallExpr 0x2939b68 <line:823:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2939b50 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2939b28 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2939ae8 <col:9> 'int' 276
|   | |   `-IntegerLiteral 0x2939b08 <col:13> 'int' 190
|   | `-<<<NULL>>>
|   |-IfStmt 0x2939da8 <line:825:7, line:828:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2939c50 <line:825:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2939c38 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2939bf0 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2939c18 <col:15> 'int' 46
|   | |-CompoundStmt 0x2939d88 <line:826:7, line:828:7>
|   | | `-CallExpr 0x2939d50 <line:827:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2939d38 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2939d10 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2939cd0 <col:9> 'int' 334
|   | |   `-IntegerLiteral 0x2939cf0 <col:13> 'int' 190
|   | `-<<<NULL>>>
|   |-IfStmt 0x2939f90 <line:829:7, line:832:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2939e38 <line:829:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2939e20 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2939dd8 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2939e00 <col:15> 'int' 47
|   | |-CompoundStmt 0x2939f70 <line:830:7, line:832:7>
|   | | `-CallExpr 0x2939f38 <line:831:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2939f20 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2939ef8 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2939eb8 <col:9> 'int' 392
|   | |   `-IntegerLiteral 0x2939ed8 <col:13> 'int' 190
|   | `-<<<NULL>>>
|   |-IfStmt 0x293a1c0 <line:833:7, line:836:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293a020 <line:833:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293a008 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2939fc0 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2939fe8 <col:15> 'int' 48
|   | |-CompoundStmt 0x293a1a0 <line:834:7, line:836:7>
|   | | `-CallExpr 0x293a168 <line:835:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293a150 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293a128 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293a0e8 <col:9> 'int' 450
|   | |   `-IntegerLiteral 0x293a108 <col:13> 'int' 190
|   | `-<<<NULL>>>
|   |-IfStmt 0x293a3a8 <line:837:7, line:840:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293a250 <line:837:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293a238 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293a1f0 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293a218 <col:15> 'int' 49
|   | |-CompoundStmt 0x293a388 <line:838:7, line:840:7>
|   | | `-CallExpr 0x293a350 <line:839:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293a338 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293a310 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293a2d0 <col:9> 'int' 508
|   | |   `-IntegerLiteral 0x293a2f0 <col:13> 'int' 190
|   | `-<<<NULL>>>
|   |-IfStmt 0x293a590 <line:841:7, line:844:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293a438 <line:841:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293a420 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293a3d8 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293a400 <col:15> 'int' 50
|   | |-CompoundStmt 0x293a570 <line:842:7, line:844:7>
|   | | `-CallExpr 0x293a538 <line:843:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293a520 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293a4f8 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293a4b8 <col:9> 'int' 566
|   | |   `-IntegerLiteral 0x293a4d8 <col:13> 'int' 190
|   | `-<<<NULL>>>
|   |-IfStmt 0x293a778 <line:845:7, line:848:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293a620 <line:845:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293a608 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293a5c0 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293a5e8 <col:15> 'int' 51
|   | |-CompoundStmt 0x293a758 <line:846:7, line:848:7>
|   | | `-CallExpr 0x293a720 <line:847:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x293a708 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293a6e0 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293a6a0 <col:9> 'int' 44
|   | |   `-IntegerLiteral 0x293a6c0 <col:12> 'int' 166
|   | `-<<<NULL>>>
|   |-IfStmt 0x293a960 <line:849:7, line:852:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293a808 <line:849:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293a7f0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293a7a8 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293a7d0 <col:15> 'int' 52
|   | |-CompoundStmt 0x293a940 <line:850:7, line:852:7>
|   | | `-CallExpr 0x293a908 <line:851:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293a8f0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293a8c8 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293a888 <col:9> 'int' 102
|   | |   `-IntegerLiteral 0x293a8a8 <col:13> 'int' 166
|   | `-<<<NULL>>>
|   |-IfStmt 0x293ab48 <line:853:7, line:856:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293a9f0 <line:853:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293a9d8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293a990 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293a9b8 <col:15> 'int' 53
|   | |-CompoundStmt 0x293ab28 <line:854:7, line:856:7>
|   | | `-CallExpr 0x293aaf0 <line:855:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293aad8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293aab0 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293aa70 <col:9> 'int' 160
|   | |   `-IntegerLiteral 0x293aa90 <col:13> 'int' 166
|   | `-<<<NULL>>>
|   |-IfStmt 0x293ad30 <line:857:7, line:860:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293abd8 <line:857:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293abc0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293ab78 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293aba0 <col:15> 'int' 54
|   | |-CompoundStmt 0x293ad10 <line:858:7, line:860:7>
|   | | `-CallExpr 0x293acd8 <line:859:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293acc0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293ac98 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293ac58 <col:9> 'int' 218
|   | |   `-IntegerLiteral 0x293ac78 <col:13> 'int' 166
|   | `-<<<NULL>>>
|   |-IfStmt 0x293af18 <line:861:7, line:864:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293adc0 <line:861:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293ada8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293ad60 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293ad88 <col:15> 'int' 55
|   | |-CompoundStmt 0x293aef8 <line:862:7, line:864:7>
|   | | `-CallExpr 0x293aec0 <line:863:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293aea8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293ae80 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293ae40 <col:9> 'int' 276
|   | |   `-IntegerLiteral 0x293ae60 <col:13> 'int' 166
|   | `-<<<NULL>>>
|   |-IfStmt 0x293ba30 <line:865:7, line:868:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293afa8 <line:865:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293af90 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293af48 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293af70 <col:15> 'int' 56
|   | |-CompoundStmt 0x293ba10 <line:866:7, line:868:7>
|   | | `-CallExpr 0x293b9d8 <line:867:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293b9c0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293b068 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293b028 <col:9> 'int' 334
|   | |   `-IntegerLiteral 0x293b048 <col:13> 'int' 166
|   | `-<<<NULL>>>
|   |-IfStmt 0x293bc18 <line:869:7, line:872:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293bac0 <line:869:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293baa8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293ba60 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293ba88 <col:15> 'int' 57
|   | |-CompoundStmt 0x293bbf8 <line:870:7, line:872:7>
|   | | `-CallExpr 0x293bbc0 <line:871:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293bba8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293bb80 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293bb40 <col:9> 'int' 392
|   | |   `-IntegerLiteral 0x293bb60 <col:13> 'int' 166
|   | `-<<<NULL>>>
|   |-IfStmt 0x293be00 <line:873:7, line:876:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293bca8 <line:873:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293bc90 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293bc48 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293bc70 <col:15> 'int' 58
|   | |-CompoundStmt 0x293bde0 <line:874:7, line:876:7>
|   | | `-CallExpr 0x293bda8 <line:875:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293bd90 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293bd68 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293bd28 <col:9> 'int' 450
|   | |   `-IntegerLiteral 0x293bd48 <col:13> 'int' 166
|   | `-<<<NULL>>>
|   |-IfStmt 0x293bfe8 <line:877:7, line:880:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293be90 <line:877:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293be78 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293be30 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293be58 <col:15> 'int' 59
|   | |-CompoundStmt 0x293bfc8 <line:878:7, line:880:7>
|   | | `-CallExpr 0x293bf90 <line:879:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293bf78 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293bf50 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293bf10 <col:9> 'int' 508
|   | |   `-IntegerLiteral 0x293bf30 <col:13> 'int' 166
|   | `-<<<NULL>>>
|   |-IfStmt 0x293c1d0 <line:881:7, line:884:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293c078 <line:881:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293c060 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293c018 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293c040 <col:15> 'int' 60
|   | |-CompoundStmt 0x293c1b0 <line:882:7, line:884:7>
|   | | `-CallExpr 0x293c178 <line:883:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293c160 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293c138 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293c0f8 <col:9> 'int' 566
|   | |   `-IntegerLiteral 0x293c118 <col:13> 'int' 166
|   | `-<<<NULL>>>
|   |-IfStmt 0x293c3b8 <line:885:7, line:888:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293c260 <line:885:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293c248 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293c200 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293c228 <col:15> 'int' 61
|   | |-CompoundStmt 0x293c398 <line:886:7, line:888:7>
|   | | `-CallExpr 0x293c360 <line:887:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x293c348 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293c320 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293c2e0 <col:9> 'int' 44
|   | |   `-IntegerLiteral 0x293c300 <col:12> 'int' 142
|   | `-<<<NULL>>>
|   |-IfStmt 0x293c5a0 <line:889:7, line:892:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293c448 <line:889:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293c430 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293c3e8 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293c410 <col:15> 'int' 62
|   | |-CompoundStmt 0x293c580 <line:890:7, line:892:7>
|   | | `-CallExpr 0x293c548 <line:891:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293c530 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293c508 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293c4c8 <col:9> 'int' 102
|   | |   `-IntegerLiteral 0x293c4e8 <col:13> 'int' 142
|   | `-<<<NULL>>>
|   |-IfStmt 0x293c788 <line:893:7, line:896:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293c630 <line:893:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293c618 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293c5d0 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293c5f8 <col:15> 'int' 63
|   | |-CompoundStmt 0x293c768 <line:894:7, line:896:7>
|   | | `-CallExpr 0x293c730 <line:895:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293c718 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293c6f0 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293c6b0 <col:9> 'int' 160
|   | |   `-IntegerLiteral 0x293c6d0 <col:13> 'int' 142
|   | `-<<<NULL>>>
|   |-IfStmt 0x293c970 <line:897:7, line:900:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293c818 <line:897:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293c800 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293c7b8 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293c7e0 <col:15> 'int' 64
|   | |-CompoundStmt 0x293c950 <line:898:7, line:900:7>
|   | | `-CallExpr 0x293c918 <line:899:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293c900 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293c8d8 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293c898 <col:9> 'int' 218
|   | |   `-IntegerLiteral 0x293c8b8 <col:13> 'int' 142
|   | `-<<<NULL>>>
|   |-IfStmt 0x293cb88 <line:901:7, line:904:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293ca30 <line:901:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293ca18 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293c9d0 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293c9f8 <col:15> 'int' 65
|   | |-CompoundStmt 0x293cb68 <line:902:7, line:904:7>
|   | | `-CallExpr 0x293cb30 <line:903:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293cb18 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293caf0 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293cab0 <col:9> 'int' 276
|   | |   `-IntegerLiteral 0x293cad0 <col:13> 'int' 142
|   | `-<<<NULL>>>
|   |-IfStmt 0x293cd70 <line:905:7, line:908:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293cc18 <line:905:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293cc00 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293cbb8 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293cbe0 <col:15> 'int' 66
|   | |-CompoundStmt 0x293cd50 <line:906:7, line:908:7>
|   | | `-CallExpr 0x293cd18 <line:907:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293cd00 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293ccd8 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293cc98 <col:9> 'int' 334
|   | |   `-IntegerLiteral 0x293ccb8 <col:13> 'int' 142
|   | `-<<<NULL>>>
|   |-IfStmt 0x293cf58 <line:909:7, line:912:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293ce00 <line:909:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293cde8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293cda0 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293cdc8 <col:15> 'int' 67
|   | |-CompoundStmt 0x293cf38 <line:910:7, line:912:7>
|   | | `-CallExpr 0x293cf00 <line:911:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293cee8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293cec0 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293ce80 <col:9> 'int' 392
|   | |   `-IntegerLiteral 0x293cea0 <col:13> 'int' 142
|   | `-<<<NULL>>>
|   |-IfStmt 0x293d140 <line:913:7, line:916:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293cfe8 <line:913:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293cfd0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293cf88 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293cfb0 <col:15> 'int' 68
|   | |-CompoundStmt 0x293d120 <line:914:7, line:916:7>
|   | | `-CallExpr 0x293d0e8 <line:915:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293d0d0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293d0a8 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293d068 <col:9> 'int' 450
|   | |   `-IntegerLiteral 0x293d088 <col:13> 'int' 142
|   | `-<<<NULL>>>
|   |-IfStmt 0x293d328 <line:917:7, line:920:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293d1d0 <line:917:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293d1b8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293d170 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293d198 <col:15> 'int' 69
|   | |-CompoundStmt 0x293d308 <line:918:7, line:920:7>
|   | | `-CallExpr 0x293d2d0 <line:919:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293d2b8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293d290 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293d250 <col:9> 'int' 508
|   | |   `-IntegerLiteral 0x293d270 <col:13> 'int' 142
|   | `-<<<NULL>>>
|   |-IfStmt 0x293d510 <line:921:7, line:924:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293d3b8 <line:921:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293d3a0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293d358 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293d380 <col:15> 'int' 70
|   | |-CompoundStmt 0x293d4f0 <line:922:7, line:924:7>
|   | | `-CallExpr 0x293d4b8 <line:923:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293d4a0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293d478 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293d438 <col:9> 'int' 566
|   | |   `-IntegerLiteral 0x293d458 <col:13> 'int' 142
|   | `-<<<NULL>>>
|   |-IfStmt 0x293d6f8 <line:925:7, line:928:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293d5a0 <line:925:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293d588 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293d540 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293d568 <col:15> 'int' 71
|   | |-CompoundStmt 0x293d6d8 <line:926:7, line:928:7>
|   | | `-CallExpr 0x293d6a0 <line:927:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x293d688 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293d660 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293d620 <col:9> 'int' 44
|   | |   `-IntegerLiteral 0x293d640 <col:12> 'int' 118
|   | `-<<<NULL>>>
|   |-IfStmt 0x293d8e0 <line:929:7, line:932:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293d788 <line:929:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293d770 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293d728 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293d750 <col:15> 'int' 72
|   | |-CompoundStmt 0x293d8c0 <line:930:7, line:932:7>
|   | | `-CallExpr 0x293d888 <line:931:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293d870 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293d848 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293d808 <col:9> 'int' 102
|   | |   `-IntegerLiteral 0x293d828 <col:13> 'int' 118
|   | `-<<<NULL>>>
|   |-IfStmt 0x293db10 <line:933:7, line:936:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293d970 <line:933:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293d958 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293d910 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293d938 <col:15> 'int' 73
|   | |-CompoundStmt 0x293daf0 <line:934:7, line:936:7>
|   | | `-CallExpr 0x293dab8 <line:935:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293daa0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293da78 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293da38 <col:9> 'int' 160
|   | |   `-IntegerLiteral 0x293da58 <col:13> 'int' 118
|   | `-<<<NULL>>>
|   |-IfStmt 0x293dcf8 <line:937:7, line:940:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293dba0 <line:937:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293db88 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293db40 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293db68 <col:15> 'int' 74
|   | |-CompoundStmt 0x293dcd8 <line:938:7, line:940:7>
|   | | `-CallExpr 0x293dca0 <line:939:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293dc88 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293dc60 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293dc20 <col:9> 'int' 218
|   | |   `-IntegerLiteral 0x293dc40 <col:13> 'int' 118
|   | `-<<<NULL>>>
|   |-IfStmt 0x293dee0 <line:941:7, line:944:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293dd88 <line:941:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293dd70 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293dd28 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293dd50 <col:15> 'int' 75
|   | |-CompoundStmt 0x293dec0 <line:942:7, line:944:7>
|   | | `-CallExpr 0x293de88 <line:943:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293de70 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293de48 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293de08 <col:9> 'int' 276
|   | |   `-IntegerLiteral 0x293de28 <col:13> 'int' 118
|   | `-<<<NULL>>>
|   |-IfStmt 0x293e0c8 <line:945:7, line:948:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293df70 <line:945:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293df58 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293df10 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293df38 <col:15> 'int' 76
|   | |-CompoundStmt 0x293e0a8 <line:946:7, line:948:7>
|   | | `-CallExpr 0x293e070 <line:947:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293e058 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293e030 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293dff0 <col:9> 'int' 334
|   | |   `-IntegerLiteral 0x293e010 <col:13> 'int' 118
|   | `-<<<NULL>>>
|   |-IfStmt 0x293e2b0 <line:949:7, line:952:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293e158 <line:949:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293e140 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293e0f8 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293e120 <col:15> 'int' 77
|   | |-CompoundStmt 0x293e290 <line:950:7, line:952:7>
|   | | `-CallExpr 0x293e258 <line:951:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293e240 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293e218 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293e1d8 <col:9> 'int' 392
|   | |   `-IntegerLiteral 0x293e1f8 <col:13> 'int' 118
|   | `-<<<NULL>>>
|   |-IfStmt 0x293e498 <line:953:7, line:956:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293e340 <line:953:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293e328 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293e2e0 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293e308 <col:15> 'int' 78
|   | |-CompoundStmt 0x293e478 <line:954:7, line:956:7>
|   | | `-CallExpr 0x293e440 <line:955:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293e428 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293e400 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293e3c0 <col:9> 'int' 450
|   | |   `-IntegerLiteral 0x293e3e0 <col:13> 'int' 118
|   | `-<<<NULL>>>
|   |-IfStmt 0x293e680 <line:957:7, line:960:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293e528 <line:957:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293e510 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293e4c8 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293e4f0 <col:15> 'int' 79
|   | |-CompoundStmt 0x293e660 <line:958:7, line:960:7>
|   | | `-CallExpr 0x293e628 <line:959:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293e610 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293e5e8 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293e5a8 <col:9> 'int' 508
|   | |   `-IntegerLiteral 0x293e5c8 <col:13> 'int' 118
|   | `-<<<NULL>>>
|   |-IfStmt 0x293e868 <line:961:7, line:964:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293e710 <line:961:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293e6f8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293e6b0 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293e6d8 <col:15> 'int' 80
|   | |-CompoundStmt 0x293e848 <line:962:7, line:964:7>
|   | | `-CallExpr 0x293e810 <line:963:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x293e7f8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293e7d0 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293e790 <col:9> 'int' 566
|   | |   `-IntegerLiteral 0x293e7b0 <col:13> 'int' 118
|   | `-<<<NULL>>>
|   |-IfStmt 0x293ea60 <line:965:7, line:968:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293e8f8 <line:965:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293e8e0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293e898 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293e8c0 <col:15> 'int' 81
|   | |-CompoundStmt 0x293ea40 <line:966:7, line:968:7>
|   | | `-CallExpr 0x293ea08 <line:967:5, col:14> 'void'
|   | |   |-ImplicitCastExpr 0x293e9f0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293e9b8 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293e978 <col:9> 'int' 44
|   | |   `-IntegerLiteral 0x293e998 <col:12> 'int' 94
|   | `-<<<NULL>>>
|   |-IfStmt 0x293ec48 <line:969:7, line:972:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293eaf0 <line:969:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293ead8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293ea90 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293eab8 <col:15> 'int' 82
|   | |-CompoundStmt 0x293ec28 <line:970:7, line:972:7>
|   | | `-CallExpr 0x293ebf0 <line:971:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x293ebd8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293ebb0 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293eb70 <col:9> 'int' 102
|   | |   `-IntegerLiteral 0x293eb90 <col:13> 'int' 94
|   | `-<<<NULL>>>
|   |-IfStmt 0x293ee30 <line:973:7, line:976:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293ecd8 <line:973:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293ecc0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293ec78 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293eca0 <col:15> 'int' 83
|   | |-CompoundStmt 0x293ee10 <line:974:7, line:976:7>
|   | | `-CallExpr 0x293edd8 <line:975:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x293edc0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293ed98 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293ed58 <col:9> 'int' 160
|   | |   `-IntegerLiteral 0x293ed78 <col:13> 'int' 94
|   | `-<<<NULL>>>
|   |-IfStmt 0x293f018 <line:977:7, line:980:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293eec0 <line:977:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293eea8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293ee60 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293ee88 <col:15> 'int' 84
|   | |-CompoundStmt 0x293eff8 <line:978:7, line:980:7>
|   | | `-CallExpr 0x293efc0 <line:979:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x293efa8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293ef80 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293ef40 <col:9> 'int' 218
|   | |   `-IntegerLiteral 0x293ef60 <col:13> 'int' 94
|   | `-<<<NULL>>>
|   |-IfStmt 0x293f200 <line:981:7, line:984:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293f0a8 <line:981:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293f090 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293f048 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293f070 <col:15> 'int' 85
|   | |-CompoundStmt 0x293f1e0 <line:982:7, line:984:7>
|   | | `-CallExpr 0x293f1a8 <line:983:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x293f190 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293f168 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293f128 <col:9> 'int' 276
|   | |   `-IntegerLiteral 0x293f148 <col:13> 'int' 94
|   | `-<<<NULL>>>
|   |-IfStmt 0x293f3e8 <line:985:7, line:988:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293f290 <line:985:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293f278 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293f230 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293f258 <col:15> 'int' 86
|   | |-CompoundStmt 0x293f3c8 <line:986:7, line:988:7>
|   | | `-CallExpr 0x293f390 <line:987:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x293f378 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293f350 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293f310 <col:9> 'int' 334
|   | |   `-IntegerLiteral 0x293f330 <col:13> 'int' 94
|   | `-<<<NULL>>>
|   |-IfStmt 0x293f5d0 <line:989:7, line:992:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293f478 <line:989:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293f460 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293f418 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293f440 <col:15> 'int' 87
|   | |-CompoundStmt 0x293f5b0 <line:990:7, line:992:7>
|   | | `-CallExpr 0x293f578 <line:991:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x293f560 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293f538 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293f4f8 <col:9> 'int' 392
|   | |   `-IntegerLiteral 0x293f518 <col:13> 'int' 94
|   | `-<<<NULL>>>
|   |-IfStmt 0x293f7b8 <line:993:7, line:996:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293f660 <line:993:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293f648 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293f600 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293f628 <col:15> 'int' 88
|   | |-CompoundStmt 0x293f798 <line:994:7, line:996:7>
|   | | `-CallExpr 0x293f760 <line:995:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x293f748 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293f720 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293f6e0 <col:9> 'int' 450
|   | |   `-IntegerLiteral 0x293f700 <col:13> 'int' 94
|   | `-<<<NULL>>>
|   |-IfStmt 0x293f9a0 <line:997:7, line:1000:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293f848 <line:997:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293f830 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293f7e8 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293f810 <col:15> 'int' 89
|   | |-CompoundStmt 0x293f980 <line:998:7, line:1000:7>
|   | | `-CallExpr 0x293f948 <line:999:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x293f930 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293f908 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293f8c8 <col:9> 'int' 508
|   | |   `-IntegerLiteral 0x293f8e8 <col:13> 'int' 94
|   | `-<<<NULL>>>
|   |-IfStmt 0x293fbb8 <line:1001:7, line:1004:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293fa60 <line:1001:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293fa48 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293fa00 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293fa28 <col:15> 'int' 90
|   | |-CompoundStmt 0x293fb98 <line:1002:7, line:1004:7>
|   | | `-CallExpr 0x293fb60 <line:1003:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x293fb48 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293fb20 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293fae0 <col:9> 'int' 566
|   | |   `-IntegerLiteral 0x293fb00 <col:13> 'int' 94
|   | `-<<<NULL>>>
|   |-IfStmt 0x293fda0 <line:1005:7, line:1008:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293fc48 <line:1005:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293fc30 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293fbe8 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293fc10 <col:15> 'int' 91
|   | |-CompoundStmt 0x293fd80 <line:1006:7, line:1008:7>
|   | | `-CallExpr 0x293fd48 <line:1007:5, col:14> 'void'
|   | |   |-ImplicitCastExpr 0x293fd30 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293fd08 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293fcc8 <col:9> 'int' 44
|   | |   `-IntegerLiteral 0x293fce8 <col:12> 'int' 70
|   | `-<<<NULL>>>
|   |-IfStmt 0x293ff88 <line:1009:7, line:1012:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x293fe30 <line:1009:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x293fe18 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293fdd0 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293fdf8 <col:15> 'int' 92
|   | |-CompoundStmt 0x293ff68 <line:1010:7, line:1012:7>
|   | | `-CallExpr 0x293ff30 <line:1011:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x293ff18 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x293fef0 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x293feb0 <col:9> 'int' 102
|   | |   `-IntegerLiteral 0x293fed0 <col:13> 'int' 70
|   | `-<<<NULL>>>
|   |-IfStmt 0x2940170 <line:1013:7, line:1016:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2940018 <line:1013:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2940000 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293ffb8 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x293ffe0 <col:15> 'int' 93
|   | |-CompoundStmt 0x2940150 <line:1014:7, line:1016:7>
|   | | `-CallExpr 0x2940118 <line:1015:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x2940100 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29400d8 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2940098 <col:9> 'int' 160
|   | |   `-IntegerLiteral 0x29400b8 <col:13> 'int' 70
|   | `-<<<NULL>>>
|   |-IfStmt 0x2940358 <line:1017:7, line:1020:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2940200 <line:1017:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29401e8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29401a0 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x29401c8 <col:15> 'int' 70
|   | |-CompoundStmt 0x2940338 <line:1018:7, line:1020:7>
|   | | `-CallExpr 0x2940300 <line:1019:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x29402e8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29402c0 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2940280 <col:9> 'int' 218
|   | |   `-IntegerLiteral 0x29402a0 <col:13> 'int' 70
|   | `-<<<NULL>>>
|   |-IfStmt 0x2940540 <line:1021:7, line:1024:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29403e8 <line:1021:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29403d0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2940388 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x29403b0 <col:15> 'int' 95
|   | |-CompoundStmt 0x2940520 <line:1022:7, line:1024:7>
|   | | `-CallExpr 0x29404e8 <line:1023:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x29404d0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29404a8 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2940468 <col:9> 'int' 276
|   | |   `-IntegerLiteral 0x2940488 <col:13> 'int' 70
|   | `-<<<NULL>>>
|   |-IfStmt 0x2940728 <line:1025:7, line:1028:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29405d0 <line:1025:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29405b8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2940570 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2940598 <col:15> 'int' 96
|   | |-CompoundStmt 0x2940708 <line:1026:7, line:1028:7>
|   | | `-CallExpr 0x29406d0 <line:1027:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x29406b8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2940690 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2940650 <col:9> 'int' 334
|   | |   `-IntegerLiteral 0x2940670 <col:13> 'int' 70
|   | `-<<<NULL>>>
|   |-IfStmt 0x2940910 <line:1029:7, line:1032:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29407b8 <line:1029:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29407a0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2940758 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2940780 <col:15> 'int' 97
|   | |-CompoundStmt 0x29408f0 <line:1030:7, line:1032:7>
|   | | `-CallExpr 0x29408b8 <line:1031:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x29408a0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2940878 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2940838 <col:9> 'int' 392
|   | |   `-IntegerLiteral 0x2940858 <col:13> 'int' 70
|   | `-<<<NULL>>>
|   |-IfStmt 0x2940b40 <line:1033:7, line:1036:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29409a0 <line:1033:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2940988 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2940940 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2940968 <col:15> 'int' 98
|   | |-CompoundStmt 0x2940b20 <line:1034:7, line:1036:7>
|   | | `-CallExpr 0x2940ae8 <line:1035:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x2940ad0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2940aa8 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2940a68 <col:9> 'int' 450
|   | |   `-IntegerLiteral 0x2940a88 <col:13> 'int' 70
|   | `-<<<NULL>>>
|   |-IfStmt 0x2940d28 <line:1037:7, line:1040:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2940bd0 <line:1037:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2940bb8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2940b70 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2940b98 <col:15> 'int' 99
|   | |-CompoundStmt 0x2940d08 <line:1038:7, line:1040:7>
|   | | `-CallExpr 0x2940cd0 <line:1039:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x2940cb8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2940c90 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2940c50 <col:9> 'int' 508
|   | |   `-IntegerLiteral 0x2940c70 <col:13> 'int' 70
|   | `-<<<NULL>>>
|   |-IfStmt 0x2940f10 <line:1041:7, line:1044:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2940db8 <line:1041:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2940da0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2940d58 <col:10> 'int' lvalue ParmVar 0x2926dd0 'one' 'int'
|   | | `-IntegerLiteral 0x2940d80 <col:15> 'int' 100
|   | |-CompoundStmt 0x2940ef0 <line:1042:7, line:1044:7>
|   | | `-CallExpr 0x2940eb8 <line:1043:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x2940ea0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2940e78 <col:5> 'void (int, int)' lvalue Function 0x291e700 'cp1' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2940e38 <col:9> 'int' 566
|   | |   `-IntegerLiteral 0x2940e58 <col:13> 'int' 70
|   | `-<<<NULL>>>
|   |-IfStmt 0x29410f8 <line:1048:7, line:1051:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2940fa0 <line:1048:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2940f88 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2940f40 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2940f68 <col:15> 'int' 1
|   | |-CompoundStmt 0x29410d8 <line:1049:7, line:1051:7>
|   | | `-CallExpr 0x29410a0 <line:1050:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x2941088 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2941060 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2941020 <col:9> 'int' 44
|   | |   `-IntegerLiteral 0x2941040 <col:12> 'int' 286
|   | `-<<<NULL>>>
|   |-IfStmt 0x29412e0 <line:1052:7, line:1055:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2941188 <line:1052:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2941170 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2941128 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2941150 <col:15> 'int' 2
|   | |-CompoundStmt 0x29412c0 <line:1053:7, line:1055:7>
|   | | `-CallExpr 0x2941288 <line:1054:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2941270 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2941248 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2941208 <col:9> 'int' 102
|   | |   `-IntegerLiteral 0x2941228 <col:13> 'int' 286
|   | `-<<<NULL>>>
|   |-IfStmt 0x29414c8 <line:1056:7, line:1059:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2941370 <line:1056:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2941358 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2941310 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2941338 <col:15> 'int' 3
|   | |-CompoundStmt 0x29414a8 <line:1057:7, line:1059:7>
|   | | `-CallExpr 0x2941470 <line:1058:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2941458 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2941430 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29413f0 <col:9> 'int' 160
|   | |   `-IntegerLiteral 0x2941410 <col:13> 'int' 286
|   | `-<<<NULL>>>
|   |-IfStmt 0x29416b0 <line:1060:7, line:1063:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2941558 <line:1060:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2941540 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29414f8 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2941520 <col:15> 'int' 4
|   | |-CompoundStmt 0x2941690 <line:1061:7, line:1063:7>
|   | | `-CallExpr 0x2941658 <line:1062:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2941640 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2941618 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29415d8 <col:9> 'int' 218
|   | |   `-IntegerLiteral 0x29415f8 <col:13> 'int' 286
|   | `-<<<NULL>>>
|   |-IfStmt 0x2941898 <line:1064:7, line:1067:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2941740 <line:1064:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2941728 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29416e0 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2941708 <col:15> 'int' 5
|   | |-CompoundStmt 0x2941878 <line:1065:7, line:1067:7>
|   | | `-CallExpr 0x2941840 <line:1066:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2941828 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2941800 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29417c0 <col:9> 'int' 276
|   | |   `-IntegerLiteral 0x29417e0 <col:13> 'int' 286
|   | `-<<<NULL>>>
|   |-IfStmt 0x2941a90 <line:1068:7, line:1071:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2941928 <line:1068:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2941910 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29418c8 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x29418f0 <col:15> 'int' 6
|   | |-CompoundStmt 0x2941a70 <line:1069:7, line:1071:7>
|   | | `-CallExpr 0x2941a38 <line:1070:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2941a20 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29419e8 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29419a8 <col:9> 'int' 334
|   | |   `-IntegerLiteral 0x29419c8 <col:13> 'int' 286
|   | `-<<<NULL>>>
|   |-IfStmt 0x2941c78 <line:1072:7, line:1075:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2941b20 <line:1072:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2941b08 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2941ac0 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2941ae8 <col:15> 'int' 7
|   | |-CompoundStmt 0x2941c58 <line:1073:7, line:1075:7>
|   | | `-CallExpr 0x2941c20 <line:1074:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2941c08 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2941be0 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2941ba0 <col:9> 'int' 392
|   | |   `-IntegerLiteral 0x2941bc0 <col:13> 'int' 286
|   | `-<<<NULL>>>
|   |-IfStmt 0x2941e60 <line:1076:7, line:1079:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2941d08 <line:1076:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2941cf0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2941ca8 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2941cd0 <col:15> 'int' 8
|   | |-CompoundStmt 0x2941e40 <line:1077:7, line:1079:7>
|   | | `-CallExpr 0x2941e08 <line:1078:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2941df0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2941dc8 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2941d88 <col:9> 'int' 450
|   | |   `-IntegerLiteral 0x2941da8 <col:13> 'int' 286
|   | `-<<<NULL>>>
|   |-IfStmt 0x2942048 <line:1080:7, line:1083:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2941ef0 <line:1080:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2941ed8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2941e90 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2941eb8 <col:15> 'int' 9
|   | |-CompoundStmt 0x2942028 <line:1081:7, line:1083:7>
|   | | `-CallExpr 0x2941ff0 <line:1082:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2941fd8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2941fb0 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2941f70 <col:9> 'int' 508
|   | |   `-IntegerLiteral 0x2941f90 <col:13> 'int' 286
|   | `-<<<NULL>>>
|   |-IfStmt 0x2942230 <line:1084:7, line:1087:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29420d8 <line:1084:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29420c0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2942078 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x29420a0 <col:15> 'int' 10
|   | |-CompoundStmt 0x2942210 <line:1085:7, line:1087:7>
|   | | `-CallExpr 0x29421d8 <line:1086:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x29421c0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2942198 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2942158 <col:9> 'int' 566
|   | |   `-IntegerLiteral 0x2942178 <col:13> 'int' 286
|   | `-<<<NULL>>>
|   |-IfStmt 0x2942418 <line:1088:7, line:1091:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29422c0 <line:1088:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29422a8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2942260 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2942288 <col:15> 'int' 11
|   | |-CompoundStmt 0x29423f8 <line:1089:7, line:1091:7>
|   | | `-CallExpr 0x29423c0 <line:1090:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x29423a8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2942380 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2942340 <col:9> 'int' 44
|   | |   `-IntegerLiteral 0x2942360 <col:12> 'int' 262
|   | `-<<<NULL>>>
|   |-IfStmt 0x2942600 <line:1092:7, line:1095:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29424a8 <line:1092:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2942490 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2942448 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2942470 <col:15> 'int' 12
|   | |-CompoundStmt 0x29425e0 <line:1093:7, line:1095:7>
|   | | `-CallExpr 0x29425a8 <line:1094:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2942590 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2942568 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2942528 <col:9> 'int' 102
|   | |   `-IntegerLiteral 0x2942548 <col:13> 'int' 262
|   | `-<<<NULL>>>
|   |-IfStmt 0x29427e8 <line:1096:7, line:1099:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2942690 <line:1096:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2942678 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2942630 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2942658 <col:15> 'int' 13
|   | |-CompoundStmt 0x29427c8 <line:1097:7, line:1099:7>
|   | | `-CallExpr 0x2942790 <line:1098:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2942778 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2942750 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2942710 <col:9> 'int' 160
|   | |   `-IntegerLiteral 0x2942730 <col:13> 'int' 262
|   | `-<<<NULL>>>
|   |-IfStmt 0x29429d0 <line:1100:7, line:1103:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2942878 <line:1100:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2942860 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2942818 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2942840 <col:15> 'int' 14
|   | |-CompoundStmt 0x29429b0 <line:1101:7, line:1103:7>
|   | | `-CallExpr 0x2942978 <line:1102:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2942960 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2942938 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29428f8 <col:9> 'int' 218
|   | |   `-IntegerLiteral 0x2942918 <col:13> 'int' 262
|   | `-<<<NULL>>>
|   |-IfStmt 0x2943428 <line:1104:7, line:1107:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29432d0 <line:1104:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29432b8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2943270 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2943298 <col:15> 'int' 15
|   | |-CompoundStmt 0x2943408 <line:1105:7, line:1107:7>
|   | | `-CallExpr 0x29433d0 <line:1106:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x29433b8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2943390 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2943350 <col:9> 'int' 276
|   | |   `-IntegerLiteral 0x2943370 <col:13> 'int' 262
|   | `-<<<NULL>>>
|   |-IfStmt 0x2943610 <line:1108:7, line:1111:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29434b8 <line:1108:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29434a0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2943458 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2943480 <col:15> 'int' 16
|   | |-CompoundStmt 0x29435f0 <line:1109:7, line:1111:7>
|   | | `-CallExpr 0x29435b8 <line:1110:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x29435a0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2943578 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2943538 <col:9> 'int' 334
|   | |   `-IntegerLiteral 0x2943558 <col:13> 'int' 262
|   | `-<<<NULL>>>
|   |-IfStmt 0x29437f8 <line:1112:7, line:1115:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29436a0 <line:1112:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2943688 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2943640 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2943668 <col:15> 'int' 17
|   | |-CompoundStmt 0x29437d8 <line:1113:7, line:1115:7>
|   | | `-CallExpr 0x29437a0 <line:1114:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2943788 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2943760 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2943720 <col:9> 'int' 392
|   | |   `-IntegerLiteral 0x2943740 <col:13> 'int' 262
|   | `-<<<NULL>>>
|   |-IfStmt 0x29439e0 <line:1116:7, line:1119:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2943888 <line:1116:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2943870 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2943828 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2943850 <col:15> 'int' 18
|   | |-CompoundStmt 0x29439c0 <line:1117:7, line:1119:7>
|   | | `-CallExpr 0x2943988 <line:1118:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2943970 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2943948 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2943908 <col:9> 'int' 450
|   | |   `-IntegerLiteral 0x2943928 <col:13> 'int' 262
|   | `-<<<NULL>>>
|   |-IfStmt 0x2943bc8 <line:1120:7, line:1123:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2943a70 <line:1120:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2943a58 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2943a10 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2943a38 <col:15> 'int' 19
|   | |-CompoundStmt 0x2943ba8 <line:1121:7, line:1123:7>
|   | | `-CallExpr 0x2943b70 <line:1122:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2943b58 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2943b30 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2943af0 <col:9> 'int' 508
|   | |   `-IntegerLiteral 0x2943b10 <col:13> 'int' 262
|   | `-<<<NULL>>>
|   |-IfStmt 0x2943db0 <line:1124:7, line:1127:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2943c58 <line:1124:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2943c40 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2943bf8 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2943c20 <col:15> 'int' 20
|   | |-CompoundStmt 0x2943d90 <line:1125:7, line:1127:7>
|   | | `-CallExpr 0x2943d58 <line:1126:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2943d40 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2943d18 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2943cd8 <col:9> 'int' 566
|   | |   `-IntegerLiteral 0x2943cf8 <col:13> 'int' 262
|   | `-<<<NULL>>>
|   |-IfStmt 0x2943f98 <line:1128:7, line:1131:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2943e40 <line:1128:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2943e28 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2943de0 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2943e08 <col:15> 'int' 21
|   | |-CompoundStmt 0x2943f78 <line:1129:7, line:1131:7>
|   | | `-CallExpr 0x2943f40 <line:1130:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x2943f28 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2943f00 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2943ec0 <col:9> 'int' 44
|   | |   `-IntegerLiteral 0x2943ee0 <col:12> 'int' 238
|   | `-<<<NULL>>>
|   |-IfStmt 0x2944180 <line:1132:7, line:1135:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2944028 <line:1132:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2944010 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2943fc8 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2943ff0 <col:15> 'int' 22
|   | |-CompoundStmt 0x2944160 <line:1133:7, line:1135:7>
|   | | `-CallExpr 0x2944128 <line:1134:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2944110 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29440e8 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29440a8 <col:9> 'int' 102
|   | |   `-IntegerLiteral 0x29440c8 <col:13> 'int' 238
|   | `-<<<NULL>>>
|   |-IfStmt 0x29443b0 <line:1136:7, line:1139:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2944210 <line:1136:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29441f8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29441b0 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x29441d8 <col:15> 'int' 23
|   | |-CompoundStmt 0x2944390 <line:1137:7, line:1139:7>
|   | | `-CallExpr 0x2944358 <line:1138:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2944340 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2944318 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29442d8 <col:9> 'int' 160
|   | |   `-IntegerLiteral 0x29442f8 <col:13> 'int' 238
|   | `-<<<NULL>>>
|   |-IfStmt 0x2944598 <line:1140:7, line:1143:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2944440 <line:1140:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2944428 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29443e0 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2944408 <col:15> 'int' 24
|   | |-CompoundStmt 0x2944578 <line:1141:7, line:1143:7>
|   | | `-CallExpr 0x2944540 <line:1142:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2944528 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2944500 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29444c0 <col:9> 'int' 218
|   | |   `-IntegerLiteral 0x29444e0 <col:13> 'int' 238
|   | `-<<<NULL>>>
|   |-IfStmt 0x2944780 <line:1144:7, line:1147:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2944628 <line:1144:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2944610 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29445c8 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x29445f0 <col:15> 'int' 25
|   | |-CompoundStmt 0x2944760 <line:1145:7, line:1147:7>
|   | | `-CallExpr 0x2944728 <line:1146:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2944710 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29446e8 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29446a8 <col:9> 'int' 276
|   | |   `-IntegerLiteral 0x29446c8 <col:13> 'int' 238
|   | `-<<<NULL>>>
|   |-IfStmt 0x2944968 <line:1148:7, line:1151:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2944810 <line:1148:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29447f8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29447b0 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x29447d8 <col:15> 'int' 26
|   | |-CompoundStmt 0x2944948 <line:1149:7, line:1151:7>
|   | | `-CallExpr 0x2944910 <line:1150:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x29448f8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29448d0 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2944890 <col:9> 'int' 334
|   | |   `-IntegerLiteral 0x29448b0 <col:13> 'int' 238
|   | `-<<<NULL>>>
|   |-IfStmt 0x2944b50 <line:1152:7, line:1155:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29449f8 <line:1152:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29449e0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2944998 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x29449c0 <col:15> 'int' 27
|   | |-CompoundStmt 0x2944b30 <line:1153:7, line:1155:7>
|   | | `-CallExpr 0x2944af8 <line:1154:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2944ae0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2944ab8 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2944a78 <col:9> 'int' 392
|   | |   `-IntegerLiteral 0x2944a98 <col:13> 'int' 238
|   | `-<<<NULL>>>
|   |-IfStmt 0x2944d38 <line:1156:7, line:1159:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2944be0 <line:1156:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2944bc8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2944b80 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2944ba8 <col:15> 'int' 28
|   | |-CompoundStmt 0x2944d18 <line:1157:7, line:1159:7>
|   | | `-CallExpr 0x2944ce0 <line:1158:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2944cc8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2944ca0 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2944c60 <col:9> 'int' 450
|   | |   `-IntegerLiteral 0x2944c80 <col:13> 'int' 238
|   | `-<<<NULL>>>
|   |-IfStmt 0x2944f20 <line:1160:7, line:1163:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2944dc8 <line:1160:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2944db0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2944d68 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2944d90 <col:15> 'int' 29
|   | |-CompoundStmt 0x2944f00 <line:1161:7, line:1163:7>
|   | | `-CallExpr 0x2944ec8 <line:1162:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2944eb0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2944e88 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2944e48 <col:9> 'int' 508
|   | |   `-IntegerLiteral 0x2944e68 <col:13> 'int' 238
|   | `-<<<NULL>>>
|   |-IfStmt 0x2945108 <line:1164:7, line:1167:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2944fb0 <line:1164:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2944f98 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2944f50 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2944f78 <col:15> 'int' 30
|   | |-CompoundStmt 0x29450e8 <line:1165:7, line:1167:7>
|   | | `-CallExpr 0x29450b0 <line:1166:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2945098 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2945070 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2945030 <col:9> 'int' 566
|   | |   `-IntegerLiteral 0x2945050 <col:13> 'int' 238
|   | `-<<<NULL>>>
|   |-IfStmt 0x2945300 <line:1168:7, line:1171:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2945198 <line:1168:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2945180 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2945138 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2945160 <col:15> 'int' 31
|   | |-CompoundStmt 0x29452e0 <line:1169:7, line:1171:7>
|   | | `-CallExpr 0x29452a8 <line:1170:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x2945290 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2945258 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2945218 <col:9> 'int' 44
|   | |   `-IntegerLiteral 0x2945238 <col:12> 'int' 214
|   | `-<<<NULL>>>
|   |-IfStmt 0x29454e8 <line:1172:7, line:1175:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2945390 <line:1172:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2945378 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2945330 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2945358 <col:15> 'int' 32
|   | |-CompoundStmt 0x29454c8 <line:1173:7, line:1175:7>
|   | | `-CallExpr 0x2945490 <line:1174:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2945478 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2945450 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2945410 <col:9> 'int' 102
|   | |   `-IntegerLiteral 0x2945430 <col:13> 'int' 214
|   | `-<<<NULL>>>
|   |-IfStmt 0x29456d0 <line:1176:7, line:1179:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2945578 <line:1176:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2945560 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2945518 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2945540 <col:15> 'int' 33
|   | |-CompoundStmt 0x29456b0 <line:1177:7, line:1179:7>
|   | | `-CallExpr 0x2945678 <line:1178:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2945660 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2945638 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29455f8 <col:9> 'int' 160
|   | |   `-IntegerLiteral 0x2945618 <col:13> 'int' 214
|   | `-<<<NULL>>>
|   |-IfStmt 0x29458b8 <line:1180:7, line:1183:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2945760 <line:1180:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2945748 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2945700 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2945728 <col:15> 'int' 34
|   | |-CompoundStmt 0x2945898 <line:1181:7, line:1183:7>
|   | | `-CallExpr 0x2945860 <line:1182:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2945848 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2945820 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29457e0 <col:9> 'int' 218
|   | |   `-IntegerLiteral 0x2945800 <col:13> 'int' 214
|   | `-<<<NULL>>>
|   |-IfStmt 0x2945aa0 <line:1184:7, line:1187:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2945948 <line:1184:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2945930 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29458e8 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2945910 <col:15> 'int' 35
|   | |-CompoundStmt 0x2945a80 <line:1185:7, line:1187:7>
|   | | `-CallExpr 0x2945a48 <line:1186:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2945a30 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2945a08 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29459c8 <col:9> 'int' 276
|   | |   `-IntegerLiteral 0x29459e8 <col:13> 'int' 214
|   | `-<<<NULL>>>
|   |-IfStmt 0x2945c88 <line:1188:7, line:1191:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2945b30 <line:1188:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2945b18 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2945ad0 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2945af8 <col:15> 'int' 36
|   | |-CompoundStmt 0x2945c68 <line:1189:7, line:1191:7>
|   | | `-CallExpr 0x2945c30 <line:1190:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2945c18 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2945bf0 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2945bb0 <col:9> 'int' 334
|   | |   `-IntegerLiteral 0x2945bd0 <col:13> 'int' 214
|   | `-<<<NULL>>>
|   |-IfStmt 0x2945e70 <line:1192:7, line:1195:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2945d18 <line:1192:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2945d00 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2945cb8 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2945ce0 <col:15> 'int' 37
|   | |-CompoundStmt 0x2945e50 <line:1193:7, line:1195:7>
|   | | `-CallExpr 0x2945e18 <line:1194:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2945e00 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2945dd8 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2945d98 <col:9> 'int' 392
|   | |   `-IntegerLiteral 0x2945db8 <col:13> 'int' 214
|   | `-<<<NULL>>>
|   |-IfStmt 0x2946058 <line:1196:7, line:1199:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2945f00 <line:1196:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2945ee8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2945ea0 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2945ec8 <col:15> 'int' 38
|   | |-CompoundStmt 0x2946038 <line:1197:7, line:1199:7>
|   | | `-CallExpr 0x2946000 <line:1198:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2945fe8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2945fc0 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2945f80 <col:9> 'int' 450
|   | |   `-IntegerLiteral 0x2945fa0 <col:13> 'int' 214
|   | `-<<<NULL>>>
|   |-IfStmt 0x2946240 <line:1200:7, line:1203:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29460e8 <line:1200:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29460d0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2946088 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x29460b0 <col:15> 'int' 39
|   | |-CompoundStmt 0x2946220 <line:1201:7, line:1203:7>
|   | | `-CallExpr 0x29461e8 <line:1202:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x29461d0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29461a8 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2946168 <col:9> 'int' 508
|   | |   `-IntegerLiteral 0x2946188 <col:13> 'int' 214
|   | `-<<<NULL>>>
|   |-IfStmt 0x2946458 <line:1204:7, line:1207:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2946300 <line:1204:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29462e8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29462a0 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x29462c8 <col:15> 'int' 40
|   | |-CompoundStmt 0x2946438 <line:1205:7, line:1207:7>
|   | | `-CallExpr 0x2946400 <line:1206:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x29463e8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29463c0 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2946380 <col:9> 'int' 566
|   | |   `-IntegerLiteral 0x29463a0 <col:13> 'int' 214
|   | `-<<<NULL>>>
|   |-IfStmt 0x2946640 <line:1208:7, line:1211:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29464e8 <line:1208:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29464d0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2946488 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x29464b0 <col:15> 'int' 41
|   | |-CompoundStmt 0x2946620 <line:1209:7, line:1211:7>
|   | | `-CallExpr 0x29465e8 <line:1210:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x29465d0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29465a8 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2946568 <col:9> 'int' 44
|   | |   `-IntegerLiteral 0x2946588 <col:12> 'int' 190
|   | `-<<<NULL>>>
|   |-IfStmt 0x2946828 <line:1212:7, line:1215:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29466d0 <line:1212:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29466b8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2946670 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2946698 <col:15> 'int' 42
|   | |-CompoundStmt 0x2946808 <line:1213:7, line:1215:7>
|   | | `-CallExpr 0x29467d0 <line:1214:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x29467b8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2946790 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2946750 <col:9> 'int' 102
|   | |   `-IntegerLiteral 0x2946770 <col:13> 'int' 190
|   | `-<<<NULL>>>
|   |-IfStmt 0x2946a10 <line:1216:7, line:1219:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29468b8 <line:1216:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29468a0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2946858 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2946880 <col:15> 'int' 43
|   | |-CompoundStmt 0x29469f0 <line:1217:7, line:1219:7>
|   | | `-CallExpr 0x29469b8 <line:1218:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x29469a0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2946978 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2946938 <col:9> 'int' 160
|   | |   `-IntegerLiteral 0x2946958 <col:13> 'int' 190
|   | `-<<<NULL>>>
|   |-IfStmt 0x2946bf8 <line:1220:7, line:1223:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2946aa0 <line:1220:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2946a88 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2946a40 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2946a68 <col:15> 'int' 44
|   | |-CompoundStmt 0x2946bd8 <line:1221:7, line:1223:7>
|   | | `-CallExpr 0x2946ba0 <line:1222:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2946b88 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2946b60 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2946b20 <col:9> 'int' 218
|   | |   `-IntegerLiteral 0x2946b40 <col:13> 'int' 190
|   | `-<<<NULL>>>
|   |-IfStmt 0x2946de0 <line:1224:7, line:1227:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2946c88 <line:1224:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2946c70 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2946c28 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2946c50 <col:15> 'int' 45
|   | |-CompoundStmt 0x2946dc0 <line:1225:7, line:1227:7>
|   | | `-CallExpr 0x2946d88 <line:1226:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2946d70 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2946d48 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2946d08 <col:9> 'int' 276
|   | |   `-IntegerLiteral 0x2946d28 <col:13> 'int' 190
|   | `-<<<NULL>>>
|   |-IfStmt 0x2946fc8 <line:1228:7, line:1231:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2946e70 <line:1228:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2946e58 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2946e10 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2946e38 <col:15> 'int' 46
|   | |-CompoundStmt 0x2946fa8 <line:1229:7, line:1231:7>
|   | | `-CallExpr 0x2946f70 <line:1230:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2946f58 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2946f30 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2946ef0 <col:9> 'int' 334
|   | |   `-IntegerLiteral 0x2946f10 <col:13> 'int' 190
|   | `-<<<NULL>>>
|   |-IfStmt 0x29471b0 <line:1232:7, line:1235:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2947058 <line:1232:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2947040 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2946ff8 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2947020 <col:15> 'int' 47
|   | |-CompoundStmt 0x2947190 <line:1233:7, line:1235:7>
|   | | `-CallExpr 0x2947158 <line:1234:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2947140 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2947118 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29470d8 <col:9> 'int' 392
|   | |   `-IntegerLiteral 0x29470f8 <col:13> 'int' 190
|   | `-<<<NULL>>>
|   |-IfStmt 0x29473e0 <line:1236:7, line:1239:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2947240 <line:1236:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2947228 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29471e0 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2947208 <col:15> 'int' 48
|   | |-CompoundStmt 0x29473c0 <line:1237:7, line:1239:7>
|   | | `-CallExpr 0x2947388 <line:1238:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2947370 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2947348 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2947308 <col:9> 'int' 450
|   | |   `-IntegerLiteral 0x2947328 <col:13> 'int' 190
|   | `-<<<NULL>>>
|   |-IfStmt 0x29475c8 <line:1240:7, line:1243:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2947470 <line:1240:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2947458 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2947410 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2947438 <col:15> 'int' 49
|   | |-CompoundStmt 0x29475a8 <line:1241:7, line:1243:7>
|   | | `-CallExpr 0x2947570 <line:1242:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2947558 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2947530 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29474f0 <col:9> 'int' 508
|   | |   `-IntegerLiteral 0x2947510 <col:13> 'int' 190
|   | `-<<<NULL>>>
|   |-IfStmt 0x29477b0 <line:1244:7, line:1247:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2947658 <line:1244:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2947640 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29475f8 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2947620 <col:15> 'int' 50
|   | |-CompoundStmt 0x2947790 <line:1245:7, line:1247:7>
|   | | `-CallExpr 0x2947758 <line:1246:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2947740 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2947718 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29476d8 <col:9> 'int' 566
|   | |   `-IntegerLiteral 0x29476f8 <col:13> 'int' 190
|   | `-<<<NULL>>>
|   |-IfStmt 0x2947998 <line:1248:7, line:1251:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2947840 <line:1248:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2947828 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29477e0 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2947808 <col:15> 'int' 51
|   | |-CompoundStmt 0x2947978 <line:1249:7, line:1251:7>
|   | | `-CallExpr 0x2947940 <line:1250:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x2947928 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2947900 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29478c0 <col:9> 'int' 44
|   | |   `-IntegerLiteral 0x29478e0 <col:12> 'int' 166
|   | `-<<<NULL>>>
|   |-IfStmt 0x2947b80 <line:1252:7, line:1255:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2947a28 <line:1252:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2947a10 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29479c8 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x29479f0 <col:15> 'int' 52
|   | |-CompoundStmt 0x2947b60 <line:1253:7, line:1255:7>
|   | | `-CallExpr 0x2947b28 <line:1254:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2947b10 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2947ae8 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2947aa8 <col:9> 'int' 102
|   | |   `-IntegerLiteral 0x2947ac8 <col:13> 'int' 166
|   | `-<<<NULL>>>
|   |-IfStmt 0x2947d68 <line:1256:7, line:1259:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2947c10 <line:1256:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2947bf8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2947bb0 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2947bd8 <col:15> 'int' 53
|   | |-CompoundStmt 0x2947d48 <line:1257:7, line:1259:7>
|   | | `-CallExpr 0x2947d10 <line:1258:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2947cf8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2947cd0 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2947c90 <col:9> 'int' 160
|   | |   `-IntegerLiteral 0x2947cb0 <col:13> 'int' 166
|   | `-<<<NULL>>>
|   |-IfStmt 0x2947f50 <line:1260:7, line:1263:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2947df8 <line:1260:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2947de0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2947d98 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2947dc0 <col:15> 'int' 54
|   | |-CompoundStmt 0x2947f30 <line:1261:7, line:1263:7>
|   | | `-CallExpr 0x2947ef8 <line:1262:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2947ee0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2947eb8 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2947e78 <col:9> 'int' 218
|   | |   `-IntegerLiteral 0x2947e98 <col:13> 'int' 166
|   | `-<<<NULL>>>
|   |-IfStmt 0x2948138 <line:1264:7, line:1267:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2947fe0 <line:1264:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2947fc8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2947f80 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2947fa8 <col:15> 'int' 55
|   | |-CompoundStmt 0x2948118 <line:1265:7, line:1267:7>
|   | | `-CallExpr 0x29480e0 <line:1266:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x29480c8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29480a0 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2948060 <col:9> 'int' 276
|   | |   `-IntegerLiteral 0x2948080 <col:13> 'int' 166
|   | `-<<<NULL>>>
|   |-IfStmt 0x2948330 <line:1268:7, line:1271:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29481c8 <line:1268:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29481b0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2948168 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2948190 <col:15> 'int' 56
|   | |-CompoundStmt 0x2948310 <line:1269:7, line:1271:7>
|   | | `-CallExpr 0x29482d8 <line:1270:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x29482c0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2948288 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2948248 <col:9> 'int' 334
|   | |   `-IntegerLiteral 0x2948268 <col:13> 'int' 166
|   | `-<<<NULL>>>
|   |-IfStmt 0x2948518 <line:1272:7, line:1275:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29483c0 <line:1272:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29483a8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2948360 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2948388 <col:15> 'int' 57
|   | |-CompoundStmt 0x29484f8 <line:1273:7, line:1275:7>
|   | | `-CallExpr 0x29484c0 <line:1274:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x29484a8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2948480 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2948440 <col:9> 'int' 392
|   | |   `-IntegerLiteral 0x2948460 <col:13> 'int' 166
|   | `-<<<NULL>>>
|   |-IfStmt 0x2948700 <line:1276:7, line:1279:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29485a8 <line:1276:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2948590 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2948548 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2948570 <col:15> 'int' 58
|   | |-CompoundStmt 0x29486e0 <line:1277:7, line:1279:7>
|   | | `-CallExpr 0x29486a8 <line:1278:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2948690 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2948668 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2948628 <col:9> 'int' 450
|   | |   `-IntegerLiteral 0x2948648 <col:13> 'int' 166
|   | `-<<<NULL>>>
|   |-IfStmt 0x29488e8 <line:1280:7, line:1283:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2948790 <line:1280:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2948778 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2948730 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2948758 <col:15> 'int' 59
|   | |-CompoundStmt 0x29488c8 <line:1281:7, line:1283:7>
|   | | `-CallExpr 0x2948890 <line:1282:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2948878 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2948850 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2948810 <col:9> 'int' 508
|   | |   `-IntegerLiteral 0x2948830 <col:13> 'int' 166
|   | `-<<<NULL>>>
|   |-IfStmt 0x2948ad0 <line:1284:7, line:1287:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2948978 <line:1284:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2948960 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2948918 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2948940 <col:15> 'int' 60
|   | |-CompoundStmt 0x2948ab0 <line:1285:7, line:1287:7>
|   | | `-CallExpr 0x2948a78 <line:1286:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2948a60 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2948a38 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29489f8 <col:9> 'int' 566
|   | |   `-IntegerLiteral 0x2948a18 <col:13> 'int' 166
|   | `-<<<NULL>>>
|   |-IfStmt 0x2948cb8 <line:1288:7, line:1291:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2948b60 <line:1288:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2948b48 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2948b00 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2948b28 <col:15> 'int' 61
|   | |-CompoundStmt 0x2948c98 <line:1289:7, line:1291:7>
|   | | `-CallExpr 0x2948c60 <line:1290:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x2948c48 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2948c20 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2948be0 <col:9> 'int' 44
|   | |   `-IntegerLiteral 0x2948c00 <col:12> 'int' 142
|   | `-<<<NULL>>>
|   |-IfStmt 0x2948ea0 <line:1292:7, line:1295:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2948d48 <line:1292:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2948d30 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2948ce8 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2948d10 <col:15> 'int' 62
|   | |-CompoundStmt 0x2948e80 <line:1293:7, line:1295:7>
|   | | `-CallExpr 0x2948e48 <line:1294:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2948e30 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2948e08 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2948dc8 <col:9> 'int' 102
|   | |   `-IntegerLiteral 0x2948de8 <col:13> 'int' 142
|   | `-<<<NULL>>>
|   |-IfStmt 0x2949088 <line:1296:7, line:1299:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2948f30 <line:1296:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2948f18 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2948ed0 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2948ef8 <col:15> 'int' 63
|   | |-CompoundStmt 0x2949068 <line:1297:7, line:1299:7>
|   | | `-CallExpr 0x2949030 <line:1298:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2949018 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2948ff0 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2948fb0 <col:9> 'int' 160
|   | |   `-IntegerLiteral 0x2948fd0 <col:13> 'int' 142
|   | `-<<<NULL>>>
|   |-IfStmt 0x2949270 <line:1300:7, line:1303:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2949118 <line:1300:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2949100 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29490b8 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x29490e0 <col:15> 'int' 64
|   | |-CompoundStmt 0x2949250 <line:1301:7, line:1303:7>
|   | | `-CallExpr 0x2949218 <line:1302:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2949200 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29491d8 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2949198 <col:9> 'int' 218
|   | |   `-IntegerLiteral 0x29491b8 <col:13> 'int' 142
|   | `-<<<NULL>>>
|   |-IfStmt 0x2949488 <line:1304:7, line:1307:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2949330 <line:1304:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2949318 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29492d0 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x29492f8 <col:15> 'int' 65
|   | |-CompoundStmt 0x2949468 <line:1305:7, line:1307:7>
|   | | `-CallExpr 0x2949430 <line:1306:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2949418 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29493f0 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x29493b0 <col:9> 'int' 276
|   | |   `-IntegerLiteral 0x29493d0 <col:13> 'int' 142
|   | `-<<<NULL>>>
|   |-IfStmt 0x2949670 <line:1308:7, line:1311:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2949518 <line:1308:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2949500 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29494b8 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x29494e0 <col:15> 'int' 66
|   | |-CompoundStmt 0x2949650 <line:1309:7, line:1311:7>
|   | | `-CallExpr 0x2949618 <line:1310:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2949600 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29495d8 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2949598 <col:9> 'int' 334
|   | |   `-IntegerLiteral 0x29495b8 <col:13> 'int' 142
|   | `-<<<NULL>>>
|   |-IfStmt 0x2949858 <line:1312:7, line:1315:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2949700 <line:1312:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29496e8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x29496a0 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x29496c8 <col:15> 'int' 67
|   | |-CompoundStmt 0x2949838 <line:1313:7, line:1315:7>
|   | | `-CallExpr 0x2949800 <line:1314:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x29497e8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29497c0 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2949780 <col:9> 'int' 392
|   | |   `-IntegerLiteral 0x29497a0 <col:13> 'int' 142
|   | `-<<<NULL>>>
|   |-IfStmt 0x2949a40 <line:1316:7, line:1319:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x29498e8 <line:1316:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x29498d0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2949888 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x29498b0 <col:15> 'int' 68
|   | |-CompoundStmt 0x2949a20 <line:1317:7, line:1319:7>
|   | | `-CallExpr 0x29499e8 <line:1318:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x29499d0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x29499a8 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2949968 <col:9> 'int' 450
|   | |   `-IntegerLiteral 0x2949988 <col:13> 'int' 142
|   | `-<<<NULL>>>
|   |-IfStmt 0x2949c28 <line:1320:7, line:1323:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2949ad0 <line:1320:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2949ab8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2949a70 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2949a98 <col:15> 'int' 69
|   | |-CompoundStmt 0x2949c08 <line:1321:7, line:1323:7>
|   | | `-CallExpr 0x2949bd0 <line:1322:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2949bb8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2949b90 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2949b50 <col:9> 'int' 508
|   | |   `-IntegerLiteral 0x2949b70 <col:13> 'int' 142
|   | `-<<<NULL>>>
|   |-IfStmt 0x2949e10 <line:1324:7, line:1327:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2949cb8 <line:1324:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2949ca0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2949c58 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2949c80 <col:15> 'int' 70
|   | |-CompoundStmt 0x2949df0 <line:1325:7, line:1327:7>
|   | | `-CallExpr 0x2949db8 <line:1326:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x2949da0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2949d78 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2949d38 <col:9> 'int' 566
|   | |   `-IntegerLiteral 0x2949d58 <col:13> 'int' 142
|   | `-<<<NULL>>>
|   |-IfStmt 0x2949ff8 <line:1328:7, line:1331:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2949ea0 <line:1328:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x2949e88 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2949e40 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x2949e68 <col:15> 'int' 71
|   | |-CompoundStmt 0x2949fd8 <line:1329:7, line:1331:7>
|   | | `-CallExpr 0x2949fa0 <line:1330:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x2949f88 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2949f60 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x2949f20 <col:9> 'int' 44
|   | |   `-IntegerLiteral 0x2949f40 <col:12> 'int' 118
|   | `-<<<NULL>>>
|   |-IfStmt 0x294a1e0 <line:1332:7, line:1335:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x294a088 <line:1332:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x294a070 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x294a028 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x294a050 <col:15> 'int' 72
|   | |-CompoundStmt 0x294a1c0 <line:1333:7, line:1335:7>
|   | | `-CallExpr 0x294a188 <line:1334:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x294a170 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x294a148 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x294a108 <col:9> 'int' 102
|   | |   `-IntegerLiteral 0x294a128 <col:13> 'int' 118
|   | `-<<<NULL>>>
|   |-IfStmt 0x294a410 <line:1336:7, line:1339:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x294a270 <line:1336:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x294a258 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x294a210 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x294a238 <col:15> 'int' 73
|   | |-CompoundStmt 0x294a3f0 <line:1337:7, line:1339:7>
|   | | `-CallExpr 0x294a3b8 <line:1338:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x294a3a0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x294a378 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x294a338 <col:9> 'int' 160
|   | |   `-IntegerLiteral 0x294a358 <col:13> 'int' 118
|   | `-<<<NULL>>>
|   |-IfStmt 0x294a5f8 <line:1340:7, line:1343:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x294a4a0 <line:1340:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x294a488 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x294a440 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x294a468 <col:15> 'int' 74
|   | |-CompoundStmt 0x294a5d8 <line:1341:7, line:1343:7>
|   | | `-CallExpr 0x294a5a0 <line:1342:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x294a588 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x294a560 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x294a520 <col:9> 'int' 218
|   | |   `-IntegerLiteral 0x294a540 <col:13> 'int' 118
|   | `-<<<NULL>>>
|   |-IfStmt 0x294a7e0 <line:1344:7, line:1347:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x294a688 <line:1344:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x294a670 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x294a628 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x294a650 <col:15> 'int' 75
|   | |-CompoundStmt 0x294a7c0 <line:1345:7, line:1347:7>
|   | | `-CallExpr 0x294a788 <line:1346:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x294a770 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x294a748 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x294a708 <col:9> 'int' 276
|   | |   `-IntegerLiteral 0x294a728 <col:13> 'int' 118
|   | `-<<<NULL>>>
|   |-IfStmt 0x294a9c8 <line:1348:7, line:1351:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x294a870 <line:1348:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x294a858 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x294a810 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x294a838 <col:15> 'int' 76
|   | |-CompoundStmt 0x294a9a8 <line:1349:7, line:1351:7>
|   | | `-CallExpr 0x294a970 <line:1350:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x294a958 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x294a930 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x294a8f0 <col:9> 'int' 334
|   | |   `-IntegerLiteral 0x294a910 <col:13> 'int' 118
|   | `-<<<NULL>>>
|   |-IfStmt 0x294abb0 <line:1352:7, line:1355:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x294aa58 <line:1352:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x294aa40 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x294a9f8 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x294aa20 <col:15> 'int' 77
|   | |-CompoundStmt 0x294ab90 <line:1353:7, line:1355:7>
|   | | `-CallExpr 0x294ab58 <line:1354:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x294ab40 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x294ab18 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x294aad8 <col:9> 'int' 392
|   | |   `-IntegerLiteral 0x294aaf8 <col:13> 'int' 118
|   | `-<<<NULL>>>
|   |-IfStmt 0x294ad98 <line:1356:7, line:1359:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x294ac40 <line:1356:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x294ac28 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x294abe0 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x294ac08 <col:15> 'int' 78
|   | |-CompoundStmt 0x294ad78 <line:1357:7, line:1359:7>
|   | | `-CallExpr 0x294ad40 <line:1358:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x294ad28 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x294ad00 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x294acc0 <col:9> 'int' 450
|   | |   `-IntegerLiteral 0x294ace0 <col:13> 'int' 118
|   | `-<<<NULL>>>
|   |-IfStmt 0x294af80 <line:1360:7, line:1363:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x294ae28 <line:1360:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x294ae10 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x294adc8 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x294adf0 <col:15> 'int' 79
|   | |-CompoundStmt 0x294af60 <line:1361:7, line:1363:7>
|   | | `-CallExpr 0x294af28 <line:1362:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x294af10 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x294aee8 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x294aea8 <col:9> 'int' 508
|   | |   `-IntegerLiteral 0x294aec8 <col:13> 'int' 118
|   | `-<<<NULL>>>
|   |-IfStmt 0x294b168 <line:1364:7, line:1367:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x294b010 <line:1364:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x294aff8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x294afb0 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x294afd8 <col:15> 'int' 80
|   | |-CompoundStmt 0x294b148 <line:1365:7, line:1367:7>
|   | | `-CallExpr 0x294b110 <line:1366:5, col:16> 'void'
|   | |   |-ImplicitCastExpr 0x294b0f8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x294b0d0 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x294b090 <col:9> 'int' 566
|   | |   `-IntegerLiteral 0x294b0b0 <col:13> 'int' 118
|   | `-<<<NULL>>>
|   |-IfStmt 0x294b360 <line:1368:7, line:1371:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x294b1f8 <line:1368:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x294b1e0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x294b198 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x294b1c0 <col:15> 'int' 81
|   | |-CompoundStmt 0x294b340 <line:1369:7, line:1371:7>
|   | | `-CallExpr 0x294b308 <line:1370:5, col:14> 'void'
|   | |   |-ImplicitCastExpr 0x294b2f0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x294b2b8 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x294b278 <col:9> 'int' 44
|   | |   `-IntegerLiteral 0x294b298 <col:12> 'int' 94
|   | `-<<<NULL>>>
|   |-IfStmt 0x294b548 <line:1372:7, line:1375:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x294b3f0 <line:1372:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x294b3d8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x294b390 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x294b3b8 <col:15> 'int' 82
|   | |-CompoundStmt 0x294b528 <line:1373:7, line:1375:7>
|   | | `-CallExpr 0x294b4f0 <line:1374:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x294b4d8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x294b4b0 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x294b470 <col:9> 'int' 102
|   | |   `-IntegerLiteral 0x294b490 <col:13> 'int' 94
|   | `-<<<NULL>>>
|   |-IfStmt 0x294b730 <line:1376:7, line:1379:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x294b5d8 <line:1376:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x294b5c0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x294b578 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x294b5a0 <col:15> 'int' 83
|   | |-CompoundStmt 0x294b710 <line:1377:7, line:1379:7>
|   | | `-CallExpr 0x294b6d8 <line:1378:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x294b6c0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x294b698 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x294b658 <col:9> 'int' 160
|   | |   `-IntegerLiteral 0x294b678 <col:13> 'int' 94
|   | `-<<<NULL>>>
|   |-IfStmt 0x294b918 <line:1380:7, line:1383:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x294b7c0 <line:1380:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x294b7a8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x294b760 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x294b788 <col:15> 'int' 84
|   | |-CompoundStmt 0x294b8f8 <line:1381:7, line:1383:7>
|   | | `-CallExpr 0x294b8c0 <line:1382:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x294b8a8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x294b880 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x294b840 <col:9> 'int' 218
|   | |   `-IntegerLiteral 0x294b860 <col:13> 'int' 94
|   | `-<<<NULL>>>
|   |-IfStmt 0x294bb00 <line:1384:7, line:1387:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x294b9a8 <line:1384:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x294b990 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x294b948 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x294b970 <col:15> 'int' 85
|   | |-CompoundStmt 0x294bae0 <line:1385:7, line:1387:7>
|   | | `-CallExpr 0x294baa8 <line:1386:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x294ba90 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x294ba68 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x294ba28 <col:9> 'int' 276
|   | |   `-IntegerLiteral 0x294ba48 <col:13> 'int' 94
|   | `-<<<NULL>>>
|   |-IfStmt 0x294bce8 <line:1388:7, line:1391:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x294bb90 <line:1388:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x294bb78 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x294bb30 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x294bb58 <col:15> 'int' 86
|   | |-CompoundStmt 0x294bcc8 <line:1389:7, line:1391:7>
|   | | `-CallExpr 0x294bc90 <line:1390:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x294bc78 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x294bc50 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x294bc10 <col:9> 'int' 334
|   | |   `-IntegerLiteral 0x294bc30 <col:13> 'int' 94
|   | `-<<<NULL>>>
|   |-IfStmt 0x294bed0 <line:1392:7, line:1395:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x294bd78 <line:1392:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x294bd60 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x294bd18 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x294bd40 <col:15> 'int' 87
|   | |-CompoundStmt 0x294beb0 <line:1393:7, line:1395:7>
|   | | `-CallExpr 0x294be78 <line:1394:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x294be60 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x294be38 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x294bdf8 <col:9> 'int' 392
|   | |   `-IntegerLiteral 0x294be18 <col:13> 'int' 94
|   | `-<<<NULL>>>
|   |-IfStmt 0x294c0b8 <line:1396:7, line:1399:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x294bf60 <line:1396:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x294bf48 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x294bf00 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x294bf28 <col:15> 'int' 88
|   | |-CompoundStmt 0x294c098 <line:1397:7, line:1399:7>
|   | | `-CallExpr 0x294c060 <line:1398:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x294c048 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x294c020 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x294bfe0 <col:9> 'int' 450
|   | |   `-IntegerLiteral 0x294c000 <col:13> 'int' 94
|   | `-<<<NULL>>>
|   |-IfStmt 0x294c2a0 <line:1400:7, line:1403:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x294c148 <line:1400:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x294c130 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x294c0e8 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x294c110 <col:15> 'int' 89
|   | |-CompoundStmt 0x294c280 <line:1401:7, line:1403:7>
|   | | `-CallExpr 0x294c248 <line:1402:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x294c230 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x294c208 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x294c1c8 <col:9> 'int' 508
|   | |   `-IntegerLiteral 0x294c1e8 <col:13> 'int' 94
|   | `-<<<NULL>>>
|   |-IfStmt 0x294c4b8 <line:1404:7, line:1407:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x294c360 <line:1404:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x294c348 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x294c300 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x294c328 <col:15> 'int' 90
|   | |-CompoundStmt 0x294c498 <line:1405:7, line:1407:7>
|   | | `-CallExpr 0x294c460 <line:1406:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x294c448 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x294c420 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x294c3e0 <col:9> 'int' 566
|   | |   `-IntegerLiteral 0x294c400 <col:13> 'int' 94
|   | `-<<<NULL>>>
|   |-IfStmt 0x294c6a0 <line:1408:7, line:1411:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x294c548 <line:1408:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x294c530 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x294c4e8 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x294c510 <col:15> 'int' 91
|   | |-CompoundStmt 0x294c680 <line:1409:7, line:1411:7>
|   | | `-CallExpr 0x294c648 <line:1410:5, col:14> 'void'
|   | |   |-ImplicitCastExpr 0x294c630 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x294c608 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x294c5c8 <col:9> 'int' 44
|   | |   `-IntegerLiteral 0x294c5e8 <col:12> 'int' 70
|   | `-<<<NULL>>>
|   |-IfStmt 0x294c888 <line:1412:7, line:1415:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x294c730 <line:1412:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x294c718 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x294c6d0 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x294c6f8 <col:15> 'int' 92
|   | |-CompoundStmt 0x294c868 <line:1413:7, line:1415:7>
|   | | `-CallExpr 0x294c830 <line:1414:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x294c818 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x294c7f0 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x294c7b0 <col:9> 'int' 102
|   | |   `-IntegerLiteral 0x294c7d0 <col:13> 'int' 70
|   | `-<<<NULL>>>
|   |-IfStmt 0x294ca70 <line:1416:7, line:1419:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x294c918 <line:1416:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x294c900 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x294c8b8 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x294c8e0 <col:15> 'int' 93
|   | |-CompoundStmt 0x294ca50 <line:1417:7, line:1419:7>
|   | | `-CallExpr 0x294ca18 <line:1418:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x294ca00 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x294c9d8 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x294c998 <col:9> 'int' 160
|   | |   `-IntegerLiteral 0x294c9b8 <col:13> 'int' 70
|   | `-<<<NULL>>>
|   |-IfStmt 0x294cc58 <line:1420:7, line:1423:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x294cb00 <line:1420:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x294cae8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x294caa0 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x294cac8 <col:15> 'int' 70
|   | |-CompoundStmt 0x294cc38 <line:1421:7, line:1423:7>
|   | | `-CallExpr 0x294cc00 <line:1422:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x294cbe8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x294cbc0 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x294cb80 <col:9> 'int' 218
|   | |   `-IntegerLiteral 0x294cba0 <col:13> 'int' 70
|   | `-<<<NULL>>>
|   |-IfStmt 0x294ce40 <line:1424:7, line:1427:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x294cce8 <line:1424:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x294ccd0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x294cc88 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x294ccb0 <col:15> 'int' 95
|   | |-CompoundStmt 0x294ce20 <line:1425:7, line:1427:7>
|   | | `-CallExpr 0x294cde8 <line:1426:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x294cdd0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x294cda8 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x294cd68 <col:9> 'int' 276
|   | |   `-IntegerLiteral 0x294cd88 <col:13> 'int' 70
|   | `-<<<NULL>>>
|   |-IfStmt 0x294d028 <line:1428:7, line:1431:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x294ced0 <line:1428:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x294ceb8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x294ce70 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x294ce98 <col:15> 'int' 96
|   | |-CompoundStmt 0x294d008 <line:1429:7, line:1431:7>
|   | | `-CallExpr 0x294cfd0 <line:1430:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x294cfb8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x294cf90 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x294cf50 <col:9> 'int' 334
|   | |   `-IntegerLiteral 0x294cf70 <col:13> 'int' 70
|   | `-<<<NULL>>>
|   |-IfStmt 0x294d210 <line:1432:7, line:1435:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x294d0b8 <line:1432:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x294d0a0 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x294d058 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x294d080 <col:15> 'int' 97
|   | |-CompoundStmt 0x294d1f0 <line:1433:7, line:1435:7>
|   | | `-CallExpr 0x294d1b8 <line:1434:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x294d1a0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x294d178 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x294d138 <col:9> 'int' 392
|   | |   `-IntegerLiteral 0x294d158 <col:13> 'int' 70
|   | `-<<<NULL>>>
|   |-IfStmt 0x294d440 <line:1436:7, line:1439:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x294d2a0 <line:1436:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x294d288 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x294d240 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x294d268 <col:15> 'int' 98
|   | |-CompoundStmt 0x294d420 <line:1437:7, line:1439:7>
|   | | `-CallExpr 0x294d3e8 <line:1438:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x294d3d0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x294d3a8 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x294d368 <col:9> 'int' 450
|   | |   `-IntegerLiteral 0x294d388 <col:13> 'int' 70
|   | `-<<<NULL>>>
|   |-IfStmt 0x294d628 <line:1440:7, line:1443:7>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x294d4d0 <line:1440:10, col:15> '_Bool' '=='
|   | | |-ImplicitCastExpr 0x294d4b8 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x294d470 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|   | | `-IntegerLiteral 0x294d498 <col:15> 'int' 99
|   | |-CompoundStmt 0x294d608 <line:1441:7, line:1443:7>
|   | | `-CallExpr 0x294d5d0 <line:1442:5, col:15> 'void'
|   | |   |-ImplicitCastExpr 0x294d5b8 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x294d590 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|   | |   |-IntegerLiteral 0x294d550 <col:9> 'int' 508
|   | |   `-IntegerLiteral 0x294d570 <col:13> 'int' 70
|   | `-<<<NULL>>>
|   `-IfStmt 0x294d810 <line:1444:7, line:1447:7>
|     |-<<<NULL>>>
|     |-BinaryOperator 0x294d6b8 <line:1444:10, col:15> '_Bool' '=='
|     | |-ImplicitCastExpr 0x294d6a0 <col:10> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x294d658 <col:10> 'int' lvalue ParmVar 0x2926e40 'two' 'int'
|     | `-IntegerLiteral 0x294d680 <col:15> 'int' 100
|     |-CompoundStmt 0x294d7f0 <line:1445:7, line:1447:7>
|     | `-CallExpr 0x294d7b8 <line:1446:5, col:15> 'void'
|     |   |-ImplicitCastExpr 0x294d7a0 <col:5> 'void (*)(int, int)' <FunctionToPointerDecay>
|     |   | `-DeclRefExpr 0x294d778 <col:5> 'void (int, int)' lvalue Function 0x291e8c8 'cp2' 'void (int, int)'
|     |   |-IntegerLiteral 0x294d738 <col:9> 'int' 566
|     |   `-IntegerLiteral 0x294d758 <col:13> 'int' 70
|     `-<<<NULL>>>
|-FunctionDecl 0x294e1c8 prev 0x291e4e0 <line:1452:1, line:1461:1> line:1452:6 used ladder 'void (int, int, int, int)'
| |-ParmVarDecl 0x294dfd8 <col:13, col:17> col:17 used s1 'int'
| |-ParmVarDecl 0x294e048 <col:20, col:24> col:24 used s2 'int'
| |-ParmVarDecl 0x294e0b8 <col:27, col:31> col:31 used s3 'int'
| |-ParmVarDecl 0x294e128 <col:34, col:38> col:38 used s4 'int'
| `-CompoundStmt 0x294e760 <line:1453:1, line:1461:1>
|-FunctionDecl 0x294e888 prev 0x291e700 <line:1462:1, line:1468:1> line:1462:6 used cp1 'void (int, int)'
| |-ParmVarDecl 0x294e788 <col:10, col:14> col:14 used xx 'int'
| |-ParmVarDecl 0x294e7f8 <col:17, col:21> col:21 used yy 'int'
| `-CompoundStmt 0x294ebc0 <line:1463:1, line:1468:1>
|-FunctionDecl 0x294ece8 prev 0x291e8c8 <line:1469:1, line:1475:1> line:1469:6 used cp2 'void (int, int)'
| |-ParmVarDecl 0x294ebe8 <col:10, col:14> col:14 used xx 'int'
| |-ParmVarDecl 0x294ec58 <col:17, col:21> col:21 used yy 'int'
| `-CompoundStmt 0x294f020 <line:1470:1, line:1475:1>
`-FunctionDecl 0x294f238 prev 0x291fbc0 <line:1477:1, line:1483:1> line:1477:6 used snake 'void (int, int, int, int)'
  |-ParmVarDecl 0x294f048 <col:12, col:16> col:16 used s1 'int'
  |-ParmVarDecl 0x294f0b8 <col:19, col:23> col:23 used s2 'int'
  |-ParmVarDecl 0x294f128 <col:26, col:30> col:30 used s3 'int'
  |-ParmVarDecl 0x294f198 <col:33, col:37> col:37 used s4 'int'
  `-CompoundStmt 0x294f5e0 <line:1478:1, line:1483:1>

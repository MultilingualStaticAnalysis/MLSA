TranslationUnitDecl 0x7fc3bd0184d0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7fc3bd018a18 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7fc3bd018740 '__int128'
|-TypedefDecl 0x7fc3bd018a78 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7fc3bd018760 'unsigned __int128'
|-TypedefDecl 0x7fc3bd018d48 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x7fc3bd018b50 'struct __NSConstantString_tag'
|   `-Record 0x7fc3bd018ac8 '__NSConstantString_tag'
|-TypedefDecl 0x7fc3bd018dd8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7fc3bd018da0 'char *'
|   `-BuiltinType 0x7fc3bd018560 'char'
|-TypedefDecl 0x7fc3bd019098 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x7fc3bd019040 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x7fc3bd018eb0 'struct __va_list_tag'
|     `-Record 0x7fc3bd018e28 '__va_list_tag'
`-FunctionDecl 0x7fc3bd019138 <whileWithinWhile.c:1:1, line:13:1> line:1:5 main 'int ()'
  `-CompoundStmt 0x7fc3bd06b770 <col:11, line:13:1>
    |-DeclStmt 0x7fc3bd06b2d0 <line:2:2, col:11>
    | `-VarDecl 0x7fc3bd06b250 <col:2, col:10> col:6 used x 'int' cinit
    |   `-IntegerLiteral 0x7fc3bd06b2b0 <col:10> 'int' 5
    |-DeclStmt 0x7fc3bd06b378 <line:3:2, col:11>
    | `-VarDecl 0x7fc3bd06b2f8 <col:2, col:10> col:6 used y 'int' cinit
    |   `-IntegerLiteral 0x7fc3bd06b358 <col:10> 'int' 1
    `-WhileStmt 0x7fc3bd06b750 <line:4:2, line:12:2>
      |-<<<NULL>>>
      |-BinaryOperator 0x7fc3bd06b3f0 <line:4:9, col:13> 'int' '>'
      | |-ImplicitCastExpr 0x7fc3bd06b3d8 <col:9> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x7fc3bd06b390 <col:9> 'int' lvalue Var 0x7fc3bd06b250 'x' 'int'
      | `-IntegerLiteral 0x7fc3bd06b3b8 <col:13> 'int' 1
      `-CompoundStmt 0x7fc3bd06b720 <line:5:2, line:12:2>
        |-BinaryOperator 0x7fc3bd06b4e8 <line:6:3, col:9> 'int' '='
        | |-DeclRefExpr 0x7fc3bd06b418 <col:3> 'int' lvalue Var 0x7fc3bd06b2f8 'y' 'int'
        | `-BinaryOperator 0x7fc3bd06b4c0 <col:7, col:9> 'int' '*'
        |   |-ImplicitCastExpr 0x7fc3bd06b490 <col:7> 'int' <LValueToRValue>
        |   | `-DeclRefExpr 0x7fc3bd06b440 <col:7> 'int' lvalue Var 0x7fc3bd06b250 'x' 'int'
        |   `-ImplicitCastExpr 0x7fc3bd06b4a8 <col:9> 'int' <LValueToRValue>
        |     `-DeclRefExpr 0x7fc3bd06b468 <col:9> 'int' lvalue Var 0x7fc3bd06b2f8 'y' 'int'
        |-BinaryOperator 0x7fc3bd06b5c0 <line:7:3, col:11> 'int' '='
        | |-DeclRefExpr 0x7fc3bd06b510 <col:3> 'int' lvalue Var 0x7fc3bd06b250 'x' 'int'
        | `-BinaryOperator 0x7fc3bd06b598 <col:7, col:11> 'int' '-'
        |   |-ImplicitCastExpr 0x7fc3bd06b580 <col:7> 'int' <LValueToRValue>
        |   | `-DeclRefExpr 0x7fc3bd06b538 <col:7> 'int' lvalue Var 0x7fc3bd06b250 'x' 'int'
        |   `-IntegerLiteral 0x7fc3bd06b560 <col:11> 'int' 1
        `-WhileStmt 0x7fc3bd06b700 <line:8:3, line:11:3>
          |-<<<NULL>>>
          |-BinaryOperator 0x7fc3bd06b648 <line:8:10, col:14> 'int' '>'
          | |-ImplicitCastExpr 0x7fc3bd06b630 <col:10> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x7fc3bd06b5e8 <col:10> 'int' lvalue Var 0x7fc3bd06b2f8 'y' 'int'
          | `-IntegerLiteral 0x7fc3bd06b610 <col:14> 'int' 0
          `-CompoundStmt 0x7fc3bd06b6e0 <line:9:3, line:11:3>
            `-BinaryOperator 0x7fc3bd06b6b8 <line:10:4, col:8> 'int' '='
              |-DeclRefExpr 0x7fc3bd06b670 <col:4> 'int' lvalue Var 0x7fc3bd06b2f8 'y' 'int'
              `-IntegerLiteral 0x7fc3bd06b698 <col:8> 'int' 11
